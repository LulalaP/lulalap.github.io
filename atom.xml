<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>未知的世界</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://lulalap.com/"/>
  <updated>2018-11-06T07:43:41.043Z</updated>
  <id>http://lulalap.com/</id>
  
  <author>
    <name>Philo</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>我居然错过了考研正式报名</title>
    <link href="http://lulalap.com/2018/11/05/%E6%88%91%E5%B1%85%E7%84%B6%E9%94%99%E8%BF%87%E4%BA%86%E8%80%83%E7%A0%94%E6%AD%A3%E5%BC%8F%E6%8A%A5%E5%90%8D/"/>
    <id>http://lulalap.com/2018/11/05/我居然错过了考研正式报名/</id>
    <published>2018-11-05T12:53:13.000Z</published>
    <updated>2018-11-06T07:43:41.043Z</updated>
    
    <content type="html"><![CDATA[<p>预想过失败的很多种方式，但没想到的是，有一天我会栽到这里。<br><a id="more"></a></p><p>但更令我惊讶的还是，我居然一点也不难过，反而还有点开心。</p><p>这是真正自由的味道，在逃离大学这个牢笼之后。</p><h3 id="一战浙大计算机"><a href="#一战浙大计算机" class="headerlink" title="一战浙大计算机"></a>一战浙大计算机</h3><p>去年这时候，我刚刚结束长达两个月的平均每天 5 公里的长跑计划。这是一次试图探索自己极限的尝试。</p><p>这之前以及这之后的半个多月，每天还是悠然自得地学上 6 - 7 个小时，然后跑步，或者摸鱼。这期间我每天还能有精力构思考研百日倒计时的创意形式，每日更新，画在在寝室里的白板上。</p><p>还剩 40 多天的时候，开始感到时间不够用了，专业课只过了一遍，个别章节甚至完全没有看；线代才做一半，概率论还没开始看，真题也还没开始做。政治才做过一遍 1000 题，大题没怎么看。</p><p>还剩一个月的时候，这辈子考试都没慌过的我终于开始慌了。我知道自己无论如何也没有时间做第二遍了。</p><p>还有三周的时候，大脑一片空白，似乎复习过的痕迹丝毫没有留下记忆，打算放弃的想法划过脑海。</p><p>经过一番思索后，还是决定挣扎一下。</p><p>极端紧迫的时间条件和糟糕的复习状况，成为了一个触发条件，像是正好打破了那道壁垒，进入了 zoom 状态，作为一名自我诊断为 ADD 的人士，我第一次体验到什么叫真正的专注。</p><h3 id="最后当然是毫无悬念地失败了"><a href="#最后当然是毫无悬念地失败了" class="headerlink" title="最后当然是毫无悬念地失败了"></a>最后当然是毫无悬念地失败了</h3><p>数学一全书完整的一遍都没做完，最后遇上数一这一年爆冷近几年最难，我把能写上的都写上了。<br>目标：随缘<br>结果：数学一 90 / 150 分。</p><p>政治大题花了四个晚上一个下午背的肖四，用理解记忆 或者 拆字记忆法 40 个字记忆几百字答案，大概背了七八题。考试时，答案都出现在题干的情况下，3 小时没停笔。<br>目标：65<br>结果：政治 70 / 100 分。</p><p>英语真题阅读做了两遍，核心单词背了忘，忘了还忘。考试做阅读时差点睡着。作文背了模板，结果在考场上放飞了自我开始随心所欲自由发挥。<br>目标：70<br>结果：英语一 68 / 100 分。</p><p>专业课，数据结构算法完全没有复习，组成原理两个大章节没有复习，王道只做过一遍。考试 15 分的算法题扣光。<br>目标：随缘<br>结果：408专业课 106 / 150 分。</p><p>总分：334<br>复试线：361<br>该专业报名人数：约2000</p><p>最后当然是毫无悬念地失败了。自我分析一下原因。<br>客观原因：</p><ul><li>浙大计算机报名人数爆炸<ul><li>前年报名人数 1200+，复试线 330+；去年报名人数2000，复试线361，总体试卷难度高于上一年。</li></ul></li><li>零基础跨专业跨学校跨地区<ul><li>俗称难度最大的三跨考生</li></ul></li></ul><p>主观原因：</p><ul><li>我菜</li><li>我懒</li><li>我每天只看不到 7 小时的书</li><li>我只复习了一遍还没看完</li></ul><p>事无巨细地述说去年考试的细节，除了单纯回顾一下我还想说什么：</p><ul><li>研究生并不难考<ul><li>我如此糟糕的复习状况，最后结果也没有太难看，说明研究生考试难度并不是很大。只要不是跨专业不考TOP2，其他学校基本是很容易上的，身边有不少案例。</li><li>跨考的只要不是考热门专业，没有上千的报名人数，基本上也是很好考的。（一般专业有超过 500 人报考就很多的了）</li><li>跨考的又是考热门专业，只要你比我再上点心，别天天摸鱼，我想问题也不会很大。</li></ul></li><li>上岸的也没必要天天吹到处秀优越感</li></ul><h3 id="决定二战"><a href="#决定二战" class="headerlink" title="决定二战"></a>决定二战</h3><p>毕竟是跨考，毕竟是零基础学计算机的四大专业课，毕竟整个复习过程太悠闲，所以再给点时间，二战一定没有问题的吧，我这样告诉自己。</p><p>正式复习依然是 7 月份开始。依然是悠闲的复习，但这次是脚踏实地的悠闲复习。<br>此处省略 x 字。</p><h3 id="突然得知已经错过了正式报名"><a href="#突然得知已经错过了正式报名" class="headerlink" title="突然得知已经错过了正式报名"></a>突然得知已经错过了正式报名</h3><p>第一反应是惊讶。我也不知道为什么，今年没有像去年那样设置日历事件提醒。总之在几分钟后接受了没办法挽回的事实后，一边和朋友报告这个消息，一边重新思考自己到底为什么要考研。</p><p>主要是两大原因，如今分别对其进行反驳：</p><blockquote><p>1.方便转行<br>读研可以让我快速进入一个全新的领域。</p></blockquote><p><strong>反驳：</strong></p><ul><li><strong>计算机互联网行业转行太容易了</strong><ul><li>有人上了几个月培训班就能去写代码了；有人读完硕博想转行计算机，就自学几个月相关领域知识代码技能，去谷歌上班了</li><li>如果只是单纯为了转行，没有必要花费三年时间去读研</li></ul></li></ul><blockquote><p>2.提升学历<br>拥有一个 985 的硕士文凭总是好的，也能证明实力。</p></blockquote><p><strong>反驳：</strong></p><ul><li><strong>我并没有很强烈的名校情结</strong><ul><li>我不崇拜权威。在国内的应试教育的环境之下，很多人对学霸有着天然的好感，自然而然地有一种崇敬之情。但我觉得这是狼奶，得吐，说白了这还是潜意识里一种对于权威的崇拜。</li><li>那为什么非得是浙大？因为浙大计算机是国内顶尖的，同时浙大复试是出了名的公平公开，而且校风学风自由开放。</li><li>其他人我无所谓，最想向父母证明自己的实力，想告诉他们我并不比别人差。但证明实力并不是只有这一种方式。</li></ul></li><li><strong>我不一定喜欢做计算机相关的研究</strong><ul><li>计算机领域的研究无非是阅读最新论文、相关书籍，听讲座，做实验（电脑上），写论文。</li><li>但是我喜欢计算机的一点是，它是一种万能的工具，一种你可以操作的工具。你可以切实可行地用它来做一点什么事情，即便只是很微小的一个部分，但可以改变你自己的或者别人的生活。</li></ul></li><li><strong>考上了也不能自由选择研究方向</strong><ul><li>研究方向还需要经过实验室面试才能确定，热门实验室热门导师总是很抢手，很有可能最后去的实验室并不是自己感兴趣的领域。</li></ul></li><li><strong>不当研究生也没有人拦着你关注行业最新领域</strong><ul><li>计算机不像其他学科需要购置很多庞大的专业的实验器材，也没有严苛的实验条件，只要你有一台能上网的电脑，就能做很多事情。</li><li>网络上没有行业的资源能超越计算机的，铺天盖地的学习资料，开放的制作精良的网络课程，无数优秀的开源项目的源代码。最新研究论文随便阅读，你一样可以在自己电脑上重新实现论文中的想法，并运用到自己的工作当中。</li></ul></li><li><strong>一张硕士文凭和三年工作经验孰轻孰重</strong><ul><li>计算机行业知识和技术日新月异，研究生学的东西在工作中基本用不到，一切依然是从头开始</li><li>研究生文凭 + 无工作经验 vs 本科文凭 + 三年工作经验，实际上后者在薪资上更有竞争力</li></ul></li><li><strong>研究生是一个新的框</strong><ul><li>研究生有论文压力，同样有 Deadline，一样是被推着往前走</li><li>研究生导师一般都被称为“老板”，和工作一样，实际上也是替你的“老板”打工</li><li>刚刚从大学这个牢笼逃离出来，为什么要这么快进入一个新的框呢</li><li>什么时候读研都不会太迟</li></ul></li></ul><p>想通之后，一阵轻松。</p><p>当晚一夜无眠。想到可以继续看 kindle 中堆积了几个月的书，可以好好折腾自己的博客，可以去摄影，可以将最近的项目灵感付诸实践，可以把过去收藏了好久的计算机相关的博客文章拿出来好好研究，内心的喜悦随之一点点绽放开来。</p><p>嗯，是自由的味道，真正意义上的自由。</p><h3 id="自由与快乐"><a href="#自由与快乐" class="headerlink" title="自由与快乐"></a>自由与快乐</h3><p>我所追求的事物总结起来其实只有两点：1.自由，2.快乐。并且将这两点作为我是否要做某件事的衡量标准。</p><p>当初学物理，因为觉得物理能够让我更好地理解自己所生活的世界，了解世间万物为何如此运作。物理，因而名为“万物之理”。这是思想上的自由。</p><p>现在学计算机，因为觉得计算机是一种万能的工具，可以和任意领域结合，并且可以用来做出一些真正的、有用的“东西”，是能够做出可以让自己和他人感到便利，真切改善生活品质的工具。互联网是世界之窗，能够看到更大的世界。这是“行动”上的自由。</p><p>自由和快乐是相辅相成、相生相灭的。对我而言，失去自由的快乐不叫快乐，而失去快乐的自由是根本不存在的。</p><p>说来也奇怪，曾经好几次都是这样，虽然平日里也常常与阴郁和黑暗为伴，但在人生关键节点，脑海中描绘的未来永远是光明灿烂的。大概我真的自带“乐观的基因”吧。</p><p>觉得遗憾吗？有一点吧，毕竟现在总体第一轮复习差不多结束，数学一轮半并且真题已经能稳定在 130+ ；一年没碰政治，刚开始写 1000 题，选择题平均 100 个错 30 个，错的那些主要是完全需要死记硬背的没有任何逻辑性可言的生搬硬套部分；8 月份刷完了 PAT 算法题库；此时距离考试还有 50 天。</p><p>这些时间都浪费了吗？并没有，因为我很反感耗费时间在学习（自认为）毫无用处的事物上。我实际花费时间精力复习的部分或多或少都将在未来的学习工作中使用到：高数、线代、概率论都是数据科学和机器学习的理论基础，刷的算法题是工作日常要用的，四大专业课学完了这部分基础也达到了计算机专业本科生的水平，其他实在没用的东西比如政治根本没开始看。而且期间我利用闲暇时间做兼职，还挣了九千买了个相机，不亏。</p><p>当然你也可以认为，以上都是我失败的自我安慰。那又如何呢，你怎么想跟我有什么关系呢，我照样过得很好。</p><p>刚刚看到<a href="https://www.jiqizhixin.com/articles/2018-10-11-4" target="_blank" rel="noopener">一篇文章</a>，文末有这样一句话感觉说得很好：</p><blockquote><p>对自己好一点。你没有在 18 岁毕业又不会死，没有在二十几岁获得博士学位又怎么了，没有在多少岁成为百万富翁又会怎样。去发现这个世界，去了解自己，去享受生命的过程。</p></blockquote><p>你根本不知道明天会发生什么，我也想象不到有一天我会错过一个大型考试。</p><p>这一天，我看了一篇关于自然语言处理的综述，看教程学习爬虫爬了百科词条，翻出博客重新写博文，总之打开电脑就不想玩手机了。</p><p>原来总觉得人生苦短，但此时此刻，第一次觉得人生很长，我才 22 周岁，依然有大好时光。</p><blockquote><p>塞翁失马，焉知非福。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;预想过失败的很多种方式，但没想到的是，有一天我会栽到这里。&lt;br&gt;
    
    </summary>
    
      <category term="日常闲聊" scheme="http://lulalap.com/categories/%E6%97%A5%E5%B8%B8%E9%97%B2%E8%81%8A/"/>
    
    
      <category term="闲聊" scheme="http://lulalap.com/tags/%E9%97%B2%E8%81%8A/"/>
    
  </entry>
  
  <entry>
    <title>已解决 AttributeError:&#39;NoneType&#39; object has no attribute &#39;find_all&#39;</title>
    <link href="http://lulalap.com/2018/11/05/%E5%B7%B2%E8%A7%A3%E5%86%B3AttributeError-NoneType-object-has-no-attribute-find-all-1/"/>
    <id>http://lulalap.com/2018/11/05/已解决AttributeError-NoneType-object-has-no-attribute-find-all-1/</id>
    <published>2018-11-05T05:00:55.000Z</published>
    <updated>2018-11-06T07:43:37.066Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题描述："><a href="#问题描述：" class="headerlink" title="问题描述："></a>问题描述：</h3><p>当像这样使用 BeautifulSoup 时，会遇到报错信息：<strong> AttributeError: ‘NoneType’ object has no attribute ‘find_all’ </strong><br><a id="more"></a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">soup = BeautifulSoup(html,features=<span class="string">'lxml'</span>)</span><br><span class="line">content = soup.find(<span class="string">'article'</span>, &#123;<span class="string">"class"</span>:<span class="string">'post post-type-normal'</span>&#125;)</span><br><span class="line">d_body = content.find_all(<span class="string">'li'</span>)</span><br></pre></td></tr></table></figure></p><h3 id="解决办法："><a href="#解决办法：" class="headerlink" title="解决办法："></a>解决办法：</h3><p>查了很多博客，但是都没说到点上，最后找到了。其实是 soup.find() 里的参数不对，没有匹配到任何信息，导致上一步得到的 content 是空的，因此后面会报错。调整了一下参数，完美运行。</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;问题描述：&quot;&gt;&lt;a href=&quot;#问题描述：&quot; class=&quot;headerlink&quot; title=&quot;问题描述：&quot;&gt;&lt;/a&gt;问题描述：&lt;/h3&gt;&lt;p&gt;当像这样使用 BeautifulSoup 时，会遇到报错信息：&lt;strong&gt; AttributeError: ‘NoneType’ object has no attribute ‘find_all’ &lt;/strong&gt;&lt;br&gt;
    
    </summary>
    
      <category term="日常折腾" scheme="http://lulalap.com/categories/%E6%97%A5%E5%B8%B8%E6%8A%98%E8%85%BE/"/>
    
    
      <category term="爬虫" scheme="http://lulalap.com/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>Atom下如何让光标自动移动到配对符号外</title>
    <link href="http://lulalap.com/2018/03/12/Atom%E4%B8%8B%E5%A6%82%E4%BD%95%E8%AE%A9%E5%85%89%E6%A0%87%E8%87%AA%E5%8A%A8%E7%A7%BB%E5%8A%A8%E5%88%B0%E9%85%8D%E5%AF%B9%E7%AC%A6%E5%8F%B7%E5%A4%96/"/>
    <id>http://lulalap.com/2018/03/12/Atom下如何让光标自动移动到配对符号外/</id>
    <published>2018-03-12T14:28:32.000Z</published>
    <updated>2018-11-04T12:04:52.023Z</updated>
    
    <content type="html"><![CDATA[<p>Atom作为一款简洁优美的编辑器深受广大用户的喜爱，丰富的插件极大地提高了它的易用性。日常敲代码的人都知道，编辑器提供的符号自动配对（即括号成对输出：“”）虽然降低了出错率，但是最令人头疼的还是在输入完成后，需要再敲一个方向键才能将光标移动到括号外，而单纯移动手指是够不着方向键→的。</p><p>那么如何在Atom环境下解决光标自动移动问题？</p><a id="more"></a><h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><ul><li>Windows 10 + 64位</li><li>Atom</li></ul><h3 id="修改init-script文件"><a href="#修改init-script文件" class="headerlink" title="修改init script文件"></a>修改init script文件</h3><ul><li><p>在 Atom 编辑器中，用 Ctrl + Shift + P 呼出 Command Palette 窗口</p></li><li><p>在窗口搜索框输入 init script , 点击 Application: Open Your Init Script</p></li><li><p>在打开的文件里粘贴以下代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># move cursor across the ending symbols...</span></span><br><span class="line">EndingSymbolRegex = /\s*[)&#125;&gt;\]/<span class="string">'"`;:=-]/</span></span><br><span class="line"><span class="string">atom.commands.add '</span>atom-text-editor<span class="string">', '</span>custom:jump-over-symbol<span class="string">': (event) -&gt;</span></span><br><span class="line"><span class="string">  editor = atom.workspace.getActiveTextEditor()</span></span><br><span class="line"><span class="string">  cursorMoved = false</span></span><br><span class="line"><span class="string">  for cursor in editor.getCursors()</span></span><br><span class="line"><span class="string">    range = cursor.getCurrentWordBufferRange(wordRegex: EndingSymbolRegex)</span></span><br><span class="line"><span class="string">    unless range.isEmpty()</span></span><br><span class="line"><span class="string">      cursor.setBufferPosition(range.end)</span></span><br><span class="line"><span class="string">      cursorMoved = true</span></span><br><span class="line"><span class="string">  event.abortKeyBinding() unless cursorMoved</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="修改快捷键键位"><a href="#修改快捷键键位" class="headerlink" title="修改快捷键键位"></a>修改快捷键键位</h3><ul><li>在 Atom 编辑器中，用 Ctrl + Shift + P 呼出 Command Palette 窗口</li><li>在窗口搜索框输入 keymap , 点击 Application: Open Your keymap</li><li><p>在打开的文件底部增加如下代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"atom-text-editor:not([mini])"</span>:</span><br><span class="line">  <span class="string">"tab"</span>: <span class="string">"custom:jump-over-symbol"</span></span><br></pre></td></tr></table></figure></li><li><p>“tab” 可更换成自己习惯的其他快捷键，如”shift”, “enter”, 或者”shift-enter”</p></li></ul><h3 id="更新设置"><a href="#更新设置" class="headerlink" title="更新设置"></a>更新设置</h3><ul><li>在 Atom 编辑器中，用 Ctrl + Shift + P 呼出 Command Palette 窗口</li><li>输入 reload, 选择 Window: Reload</li></ul><p>接下来就可以愉快地玩耍啦！</p><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p><a href="https://jetorz.github.io/2017-02-07-Skill-Atom-auto-pair.html" target="_blank" rel="noopener">技巧卡：怎样让 Atom 将光标自动移动到配对符号外</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Atom作为一款简洁优美的编辑器深受广大用户的喜爱，丰富的插件极大地提高了它的易用性。日常敲代码的人都知道，编辑器提供的符号自动配对（即括号成对输出：“”）虽然降低了出错率，但是最令人头疼的还是在输入完成后，需要再敲一个方向键才能将光标移动到括号外，而单纯移动手指是够不着方向键→的。&lt;/p&gt;
&lt;p&gt;那么如何在Atom环境下解决光标自动移动问题？&lt;/p&gt;
    
    </summary>
    
      <category term="日常折腾" scheme="http://lulalap.com/categories/%E6%97%A5%E5%B8%B8%E6%8A%98%E8%85%BE/"/>
    
    
      <category term="Atom" scheme="http://lulalap.com/tags/Atom/"/>
    
  </entry>
  
  <entry>
    <title>从零开始搭建博客简明教程</title>
    <link href="http://lulalap.com/2018/01/21/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://lulalap.com/2018/01/21/从零开始搭建博客/</id>
    <published>2018-01-21T12:57:57.000Z</published>
    <updated>2018-11-04T12:29:03.743Z</updated>
    
    <content type="html"><![CDATA[<p>你是不是早就厌倦了那些博客网站毫无美感的界面，是不是受够了无休无止的网站推送，是不是早就想建立一个属于自己的博客，却止步于复杂的教程以及一系列令人头疼的代码？那么恭喜你，这篇文章就是想以最浅显易懂的方式手把手教你搭建属于自己的博客，你只需要一点耐心，一步步跟着做。</p><p>Hexo 作为一个快速、简洁且高效的博客框架，简直是小白们的福音，而 GitHub 又免去了我们额外租用并部署服务器的麻烦。因此本文将利用 Hexo 及 GitHub 搭建博客。</p><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><ul><li>下载安装 node.js （<a href="https://nodejs.org/en/" target="_blank" rel="noopener">官网下载安装</a>）</li><li>下载安装 git （<a href="https://git-scm.com/downloads" target="_blank" rel="noopener">官网下载安装</a>）</li></ul><a id="more"></a><h3 id="本地搭建hexo静态博客"><a href="#本地搭建hexo静态博客" class="headerlink" title="本地搭建hexo静态博客"></a>本地搭建hexo静态博客</h3><ul><li><p>安装hexo框架: 打开cmd 运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure></li><li><p>新建一个文件夹，如 MyBlog ，进入该文件夹内，右击运行 git ，输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init</span><br></pre></td></tr></table></figure></li><li><p>生成完 hexo 模板，安装 npm ，运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install</span><br></pre></td></tr></table></figure></li></ul><p>没错，博客的主体部分到此已经完成了，来看看效果吧。运行：<br>     <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure></p><p>这时候打开浏览器，输入 localhost:4000 就可以看到博客目前的样子了。小小激动一下，然后按 Ctrl + C 就可以继续下面的操作了。</p><h3 id="个性化设置（初步）"><a href="#个性化设置（初步）" class="headerlink" title="个性化设置（初步）"></a>个性化设置（初步）</h3><h4 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h4><ul><li>下载新的主题（以<a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">NexT 主题</a>为例），在根目录下运行：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>打开根目录下的 _config.yml ，修改字段 theme 为:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: next</span><br></pre></td></tr></table></figure></li><li><p>选择外观：打开 /themes/next 目录下的主题配置文件 <em>config.yml ， 找到 scheme 字段（可用 Ctrl + F 快捷查找）。NexT提供了三种不同的外观，可以挑选一个自己喜欢的，然后去掉其中一个的 # 号(后续主要修改的也就是这两个文件： </em>站点配置文件<em> 和 </em>主题配置文件_ 。)。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Schemes</span></span><br><span class="line"><span class="comment">#scheme: Muse</span></span><br><span class="line">scheme: Mist</span><br><span class="line"><span class="comment">#scheme: Pisces</span></span><br><span class="line"><span class="comment">#scheme: Gemini</span></span><br></pre></td></tr></table></figure></li><li><p>查看效果，可运行如下命令(以后每次想查看效果都可重复此步骤)：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure></li></ul><h4 id="站点配置"><a href="#站点配置" class="headerlink" title="站点配置"></a>站点配置</h4><ul><li>使用编辑器打开根目录下的站点配置文件 _config.yml （Windows下不要使用记事本编辑，中文标题会出现乱码），修改字段 Site ， 注意冒号后面要有空格：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line">title: 未知的世界                //博客名称</span><br><span class="line">subtitle:</span><br><span class="line">description:  Do something cool //一句签名</span><br><span class="line">author: LulalaP                 //作者</span><br><span class="line">language: zh-Hans               //网站语言</span><br><span class="line">timezone:</span><br></pre></td></tr></table></figure></li></ul><h3 id="设置侧边栏头像"><a href="#设置侧边栏头像" class="headerlink" title="设置侧边栏头像"></a>设置侧边栏头像</h3><ul><li><p>在 /source 中新建文件夹并命名为 uploads , 将头像图片（如： avatar.jpg ）放到该文件夹内</p></li><li><p>打开 /themes/next 目录下的主题配置文件 _config.yml ，找到字段 avatar 并修改为:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">avatar: /uploads/avatar.jpg</span><br></pre></td></tr></table></figure></li></ul><h3 id="完善博客页面"><a href="#完善博客页面" class="headerlink" title="完善博客页面"></a>完善博客页面</h3><h4 id="添加菜单"><a href="#添加菜单" class="headerlink" title="添加菜单"></a>添加菜单</h4><ul><li>在主题配置文件 _configy.yml 设置中将字段 menu 中需要添加的菜单前面的注释去掉即可。如需要添加其他菜单可按需添加（注意字段的缩进）：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: /</span><br><span class="line">  categories: /categories</span><br><span class="line">  archives: /archives</span><br><span class="line">  tags: /tags</span><br><span class="line">  about: /about</span><br></pre></td></tr></table></figure></li></ul><h4 id="创建分类页面"><a href="#创建分类页面" class="headerlink" title="创建分类页面"></a>创建分类页面</h4><ul><li><p>新建一个页面，命名为 categories ，命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new page categories</span><br></pre></td></tr></table></figure></li><li><p>编辑刚新建的页面 /source/categories/index.md ，将页面的类型设置为 categories ，主题将自动为这个页面显示所有分类（注意保留冒号后的空格）。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">title: 分类</span><br><span class="line">date: 2018-01-23 13:37:11</span><br><span class="line"><span class="built_in">type</span>: <span class="string">"categories"</span></span><br><span class="line">comments: <span class="literal">false</span></span><br><span class="line">---</span><br></pre></td></tr></table></figure></li></ul><h4 id="创建标签云界面"><a href="#创建标签云界面" class="headerlink" title="创建标签云界面"></a>创建标签云界面</h4><ul><li><p>新建一个页面，命名为 tags ，命令如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new page <span class="string">"tags"</span></span><br></pre></td></tr></table></figure></li><li><p>编辑刚新建的页面，将页面的类型设置为 tags ，主题将自动为这个页面显示标签云。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">title: 所有标签</span><br><span class="line">date: 2018-01-22 14:09:12</span><br><span class="line"><span class="built_in">type</span>: <span class="string">"tags"</span></span><br><span class="line">comments: <span class="literal">false</span></span><br><span class="line">---</span><br></pre></td></tr></table></figure></li></ul><h4 id="创建”关于我”页面"><a href="#创建”关于我”页面" class="headerlink" title="创建”关于我”页面"></a>创建”关于我”页面</h4><ul><li><p>新建一个 about 页面：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page <span class="string">"about"</span></span><br></pre></td></tr></table></figure></li><li><p>编辑刚新建的页面，可在正文处用Markdown格式写下信息。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">title: 关于</span><br><span class="line">date: 2018-01-22 14:09:12</span><br><span class="line">comments: <span class="literal">false</span></span><br><span class="line">---</span><br></pre></td></tr></table></figure></li></ul><h3 id="设置侧边栏社交链接"><a href="#设置侧边栏社交链接" class="headerlink" title="设置侧边栏社交链接"></a>设置侧边栏社交链接</h3><ul><li><p>编辑站点的 _config.yml，新增字段 social，然后添加社交站点名称与地址即可。键值格式为 显示名称：链接地址 ，例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Social links</span></span><br><span class="line">social:</span><br><span class="line">  GitHub: https://github.com/your-user-name</span><br><span class="line">  <span class="comment">#Twitter: https://twitter.com/your-user-name</span></span><br><span class="line">  微博: http://weibo.com/your-user-name</span><br><span class="line">  <span class="comment">#douban: http://douban.com/people/your-user-name</span></span><br><span class="line">  <span class="comment">#知乎: http://www.zhihu.com/people/your-user-name</span></span><br><span class="line">  <span class="comment"># 等等</span></span><br></pre></td></tr></table></figure></li><li><p>编辑主题的 _config.yml, 在social_icons字段下添加社交站点名称（注意大小写）与(图标)[<a href="http://fontawesome.io/icons/]。" target="_blank" rel="noopener">http://fontawesome.io/icons/]。</a> enable 选项用于控制是否显示图标，你可以设置成 false 来去掉图标。例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">social_icons:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Icon Mappings.</span></span><br><span class="line">  <span class="comment"># KeyMapsToSocalItemKey: NameOfTheIconFromFontAwesome</span></span><br><span class="line">  GitHub: github</span><br><span class="line">  Twitter: twitter</span><br><span class="line">  Weibo: weibo</span><br><span class="line">  Linkedin: linkedin</span><br></pre></td></tr></table></figure></li></ul><h3 id="将博客与GitHub关联"><a href="#将博客与GitHub关联" class="headerlink" title="将博客与GitHub关联"></a>将博客与GitHub关联</h3><ul><li><p>注册GitHub账号：如果还没有GitHub账号的，需要先注册一个</p></li><li><p>在Github上创建名字为XXX.github.io的项目，XXX为自己的github用户名。</p></li><li><p>打开本地的MyBlog文件夹项目内的_config.yml配置文件，将其中的type设置为git:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repository: https://github.com/your-name/your-name.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure></li><li><p>运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li><li><p>本地生成静态文件，并将静态文件推送至GitHub，运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>此时，打开浏览器，访问 <a href="http://your-name.github.io" target="_blank" rel="noopener">http://your-name.github.io</a> ，恭喜你，到此为止你的博客已经建设完毕了。</p></li></ul><h3 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h3><p>到目前为止博客已经全部搭建完成，也能通过 GitHub 的域名访问，这时候再用一个短域名绑定到这个博客上就更完美了。</p><h4 id="域名购买"><a href="#域名购买" class="headerlink" title="域名购买"></a>域名购买</h4><ul><li>购买一个域名（待补充）</li></ul><h3 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h3><ul><li><p>域名提供商设置</p></li><li><p>添加2条A记录：</p><blockquote><p>@—&gt;192.30.252.154<br>@—&gt;192.30.252.153</p></blockquote></li><li><p>添加一条CNAME记录：</p><blockquote><p>CNAME—&gt;lulalap.github.io</p></blockquote></li><li><p>博客目录添加 CNAME 文件</p><p>配置完域名解析后，进入博客目录，在source目录下新建一个命名为 CNAME 的文件(注意要大写，没有后缀)，用记事本打开编辑，写入购买好的域名，如：www.lulalap.com</p></li><li><p>运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure></li></ul><p>现在打开浏览器，输入域名，回车，恭喜你已经拥有了一个属于自己独立域名的博客。</p><h3 id="发布新文章"><a href="#发布新文章" class="headerlink" title="发布新文章"></a>发布新文章</h3><ul><li><p>在博客根目录下执行：hexo new “我的第一篇文章”，会在 source/_posts 文件夹内生成一个.md文件。</p></li><li><p>编辑该文件，修改起始字段为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">title 文章的标题</span><br><span class="line">date 创建日期 （文件的创建日期 ）</span><br><span class="line">updated 修改日期 （ 文件的修改日期）</span><br><span class="line">comments 是否开启评论 <span class="literal">true</span></span><br><span class="line">tags 标签</span><br><span class="line">categories 分类</span><br><span class="line">permalink url中的名字（文件名）</span><br></pre></td></tr></table></figure></li><li><p>编写正文内容(遵循 Markdown 规则)</p></li><li><p>本地生成静态文件，并将静态文件推送至GitHub，运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure></li></ul><h3 id="个性化设置（进阶）"><a href="#个性化设置（进阶）" class="headerlink" title="个性化设置（进阶）"></a>个性化设置（进阶）</h3><h3 id="添加-RSS"><a href="#添加-RSS" class="headerlink" title="添加 RSS"></a>添加 RSS</h3><ul><li><p>在根目录下安装插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure></li><li><p>在主题文件的 <em>config.yml 里面的末尾添加：(**</em>请注意在冒号后面要加一个空格，不然会发生错误！_**)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: http://hexo.io/plugins/</span></span><br><span class="line">plugins: hexo-generate-feed</span><br></pre></td></tr></table></figure></li><li><p>打开 next 主题文件夹里面的 _config.yml ,在在 rss: 的后面加上 /atom.xml (注意在冒号后面要加一个空格)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rss: /atom.xml</span><br></pre></td></tr></table></figure></li></ul><h3 id="首页文章截断"><a href="#首页文章截断" class="headerlink" title="首页文章截断"></a>首页文章截断</h3><ul><li><p>每次写文章正文时，只需要在文章 .md 中需要截断的地方增加：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--more--&gt;</span><br></pre></td></tr></table></figure></li><li><p>将主题目录下配置文件里的 scroll_to_more 这个选项设置为 false 。</p></li></ul><h4 id="设定站点建立时间"><a href="#设定站点建立时间" class="headerlink" title="设定站点建立时间"></a>设定站点建立时间</h4><ul><li><p>编辑站点的 _config.yml ，新增字段 since 。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">since: 2013</span><br></pre></td></tr></table></figure></li></ul><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p><a href="https://neveryu.github.io/2016/09/30/hexo-next-two/" target="_blank" rel="noopener">Hexo-NexT搭建个人博客（二）</a><br><a href="https://www.jianshu.com/p/f054333ac9e6" target="_blank" rel="noopener">hexo的next主题个性化教程:打造炫酷网站</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;你是不是早就厌倦了那些博客网站毫无美感的界面，是不是受够了无休无止的网站推送，是不是早就想建立一个属于自己的博客，却止步于复杂的教程以及一系列令人头疼的代码？那么恭喜你，这篇文章就是想以最浅显易懂的方式手把手教你搭建属于自己的博客，你只需要一点耐心，一步步跟着做。&lt;/p&gt;
&lt;p&gt;Hexo 作为一个快速、简洁且高效的博客框架，简直是小白们的福音，而 GitHub 又免去了我们额外租用并部署服务器的麻烦。因此本文将利用 Hexo 及 GitHub 搭建博客。&lt;/p&gt;
&lt;h3 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;下载安装 node.js （&lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官网下载安装&lt;/a&gt;）&lt;/li&gt;
&lt;li&gt;下载安装 git （&lt;a href=&quot;https://git-scm.com/downloads&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官网下载安装&lt;/a&gt;）&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="日常折腾" scheme="http://lulalap.com/categories/%E6%97%A5%E5%B8%B8%E6%8A%98%E8%85%BE/"/>
    
    
      <category term="博客搭建" scheme="http://lulalap.com/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
</feed>
