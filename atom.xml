<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>未知的世界</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://lulalap.com/"/>
  <updated>2018-11-28T15:11:25.447Z</updated>
  <id>http://lulalap.com/</id>
  
  <author>
    <name>Philo</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>PAT A1125 Chain the Ropes(C++)</title>
    <link href="http://lulalap.com/2018/11/28/PAT-A1125-cpp/"/>
    <id>http://lulalap.com/2018/11/28/PAT-A1125-cpp/</id>
    <published>2018-11-28T15:35:41.000Z</published>
    <updated>2018-11-28T15:11:25.447Z</updated>
    
    <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>原题地址：<a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805350316752896" target="_blank" rel="noopener">A1125 Chain the Ropes</a><br>中文版：<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805264706813952" target="_blank" rel="noopener">B1070 结绳 </a><br><a id="more"></a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>每次都将两段绳子对折，再相连，会使得先连接上的绳子在最后占据的长度最短。所以要使得最终绳子最长，应该先连接长度最较短的，再连接长度较长的。</p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li>首先将绳子初始长度设置为第一段绳子，循环开始时直接连接第二段。<ul><li>若初始长度为 0，则第一段绳子将会多除以 2 .</li></ul></li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>sort(S, S + n, cmp);</code><ul><li>排序函数，实现 [first, last) 范围内的排序，可以自定义排序策略 cmp 函数</li><li>不带 cmp 参数的 sort 函数实现从小到大排序</li><li>所需头文件： <strong>algorithm</strong></li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> N, r[<span class="number">10010</span>];</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;N);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)&#123; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;r[i]); &#125;</span><br><span class="line">  sort(r, r + N);</span><br><span class="line">  <span class="keyword">double</span> ans = r[<span class="number">0</span>];</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; N; i++) ans = (ans + r[i]) / <span class="number">2</span>;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, (<span class="keyword">int</span>)ans);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;a href=&quot;/2018/11/07/index-of-PAT-Advanced-Level/&quot; title=&quot;PAT甲级目录&quot;&gt;PAT甲级目录&lt;/a&gt;  |  &lt;a href=&quot;/2018/11/07/index-of-PAT-Basic-Level/&quot; title=&quot;PAT乙级目录&quot;&gt;PAT乙级目录&lt;/a&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;原题地址：&lt;a href=&quot;https://pintia.cn/problem-sets/994805342720868352/problems/994805350316752896&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;A1125 Chain the Ropes&lt;/a&gt;&lt;br&gt;中文版：&lt;a href=&quot;https://pintia.cn/problem-sets/994805260223102976/problems/994805264706813952&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;B1070 结绳 &lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="PAT题解" scheme="http://lulalap.com/categories/PAT%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="PAT" scheme="http://lulalap.com/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>PAT A1124 Raffle for Weibo Followers(C++)</title>
    <link href="http://lulalap.com/2018/11/28/PAT-A1124-cpp/"/>
    <id>http://lulalap.com/2018/11/28/PAT-A1124-cpp/</id>
    <published>2018-11-28T15:33:41.000Z</published>
    <updated>2018-11-28T15:10:16.947Z</updated>
    
    <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>原题地址：<a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805350803292160" target="_blank" rel="noopener">A1124 Raffle for Weibo Followers</a><br>中文版：<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805265159798784" target="_blank" rel="noopener">B1069 微博转发抽奖 </a><br><a id="more"></a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>模拟题。用 map 来记录中奖账号，并设置一个锚点指示下一个中奖编号，当遍历到该中奖编号。若该账户已经中过奖，则跳过此账号且锚点后移一位；若未中奖，则输出中奖信息，且将该账号录入 map 数组。</p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li>遇到中过奖的账号要跳过，顺次取其下一位。</li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>map&lt;string, int&gt; h;</code><ul><li>用于映射，键和值可以是任意类型</li><li>直接使用 <code>m[&lt;键&gt;] = &lt;值&gt;</code> 即可向map中添加一组键值对</li><li>需要的头文件：<strong>map</strong></li></ul></li><li><code>if(h.find(id1) == h.end()){ }</code><ul><li><code>h.find(x)</code> 函数可用于查找序列中是否有某元素，如找到则返回元素迭代器，如未找到则返回 <code>h.end()</code></li><li>包含该函数的容器：<strong>map</strong>, <strong>set</strong></li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> m, n, s, flag = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">string</span> temp;</span><br><span class="line">  <span class="built_in">map</span>&lt;<span class="built_in">string</span>, <span class="keyword">int</span>&gt; h;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>, &amp;m, &amp;n, &amp;s);</span><br><span class="line">  <span class="keyword">int</span> next = s; <span class="comment">// 锚点，用于指示下一个中奖编号</span></span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++)&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; temp;</span><br><span class="line">    <span class="keyword">if</span>(i == next)&#123;</span><br><span class="line">      <span class="keyword">if</span>(h.find(temp) == h.end())&#123;<span class="comment">// 没过中奖，则中将</span></span><br><span class="line">        h[temp] = <span class="number">1</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; temp &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        next += n;</span><br><span class="line">        flag = <span class="number">1</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> next++; <span class="comment">// 已经中过奖，编号后移一位</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(flag == <span class="number">0</span>) <span class="built_in">cout</span> &lt;&lt; <span class="string">"Keep going..."</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;a href=&quot;/2018/11/07/index-of-PAT-Advanced-Level/&quot; title=&quot;PAT甲级目录&quot;&gt;PAT甲级目录&lt;/a&gt;  |  &lt;a href=&quot;/2018/11/07/index-of-PAT-Basic-Level/&quot; title=&quot;PAT乙级目录&quot;&gt;PAT乙级目录&lt;/a&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;原题地址：&lt;a href=&quot;https://pintia.cn/problem-sets/994805342720868352/problems/994805350803292160&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;A1124 Raffle for Weibo Followers&lt;/a&gt;&lt;br&gt;中文版：&lt;a href=&quot;https://pintia.cn/problem-sets/994805260223102976/problems/994805265159798784&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;B1069 微博转发抽奖 &lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="PAT题解" scheme="http://lulalap.com/categories/PAT%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="PAT" scheme="http://lulalap.com/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>PAT A1121 Damn Single(C++)</title>
    <link href="http://lulalap.com/2018/11/28/PAT-A1121-cpp/"/>
    <id>http://lulalap.com/2018/11/28/PAT-A1121-cpp/</id>
    <published>2018-11-28T15:31:41.000Z</published>
    <updated>2018-11-28T15:07:58.320Z</updated>
    
    <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>原题地址：<a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805352359378944" target="_blank" rel="noopener">A1121 Damn Single</a><br>中文版：<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805266942377984" target="_blank" rel="noopener">B1065 单身狗 </a></p><a id="more"></a><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>方法一：利用 map 记录每对对象的编号。然后遍历全部客人，如果其没有对象或者其对象没来，则加入落单名单。</p><p>方法二：假设所有客人都落单。在遍历客人的时候，如果在落单名单中找到了自己对象，则移除其对象编号，否则当作落单加入名单。遍历结束时，名单中的人要么没有对象，要么对象没来，也就正好落单了。</p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li>客人编号有 00000 ，所以不能通过 map 对应的值是否大于零来判断其是否单身</li><li>输出的编号应为格式化为五位数 <code>printf(&quot;%05d&quot;, *it);</code></li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>map&lt;int, int&gt; m;</code><ul><li>用于映射，键和值可以是任意类型</li><li>直接使用 <code>m[&lt;键&gt;] = &lt;值&gt;</code> 即可向map中添加一组键值对</li><li>需要的头文件：<strong>map</strong></li></ul></li><li><code>for(auto it = m.begin(); it != m.end(); it++){}</code><ul><li>可用于遍历 map/vector/set 等容器， <code>auto</code> 实现自动匹配对应迭代器类型</li><li>如果不用 <code>auto it = m.begin()</code> 则要写成 <code>std::map&lt;char, int&gt;::iterator it = m.begin()</code></li><li><code>map&lt;char,int&gt;</code> 在其他情况下可替换成对应元素的类型如 <code>vector&lt;int&gt;</code></li><li>所需头文件： <strong>map / set / vector</strong></li></ul></li><li><code>it-&gt;first</code> 和 <code>it-&gt;second</code><ul><li><code>it-&gt;first</code> 为 map 中对应元素的关键字</li><li><code>it-&gt;second</code> 为 map 中对应关键字的值</li><li>所需头文件： <strong>map</strong></li></ul></li><li><code>if(couple.find(id1) == couple.end()){ }</code><ul><li><code>couple.find(id1)</code> 函数可用于查找序列中是否有某元素，如找到则返回元素迭代器，如未找到则返回 <code>couple.end()</code></li><li>包含该函数的容器：<strong>map</strong>, <strong>set</strong></li></ul></li><li><code>ans.insert(S[i])</code><ul><li>向容器中插入一个元素</li></ul></li><li>所需头文件： <strong>set</strong></li><li><code>ans.erase(it)</code><ul><li>删除集合中某元素，<code>it</code> 为迭代器</li></ul></li><li>需要头文件： <strong>set</strong></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><ul><li>方法一</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> n, m, id1, id2;</span><br><span class="line">  <span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; couple, present;</span><br><span class="line">  <span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt; ans;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;id1, &amp;id2);</span><br><span class="line">    couple[id1] = id2;</span><br><span class="line">    couple[id2] = id1;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;m);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++)&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;id1);</span><br><span class="line">    present[id1] = <span class="number">1</span>; <span class="comment">// 记录每个出现的客人编号</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">auto</span> it = present.begin(); it != present.end(); it++)&#123;</span><br><span class="line">    id1 = it-&gt;first;</span><br><span class="line">    id2 = couple[id1];</span><br><span class="line">    <span class="keyword">if</span>(couple.find(id1) == couple.end() || !present[id2]) ans.insert(id1);<span class="comment">//客人没有对象或者对象没来就加入清单</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans.size());</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">auto</span> it = ans.begin(); it != ans.end(); it++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(it != ans.begin()) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%05d"</span>, *it);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>方法二：<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> n, m, id1, id2;</span><br><span class="line">  <span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; couple;</span><br><span class="line">  <span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt; ans;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;id1, &amp;id2);</span><br><span class="line">    couple[id1] = id2;</span><br><span class="line">    couple[id2] = id1;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;m);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++)&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;id1);</span><br><span class="line">    id2 = couple[id1];</span><br><span class="line">    <span class="comment">// 新来的客人在此派对中找到了对象，将对方名字从名单中抹去，否则将其加入名单</span></span><br><span class="line">    <span class="keyword">if</span>(!ans.empty() &amp;&amp; ans.find(id2) != ans.end()) ans.erase(ans.find(id2));</span><br><span class="line">    <span class="keyword">else</span> ans.insert(id1);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans.size());</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">auto</span> it = ans.begin(); it != ans.end(); it++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(it != ans.begin()) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%05d"</span>, *it);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;a href=&quot;/2018/11/07/index-of-PAT-Advanced-Level/&quot; title=&quot;PAT甲级目录&quot;&gt;PAT甲级目录&lt;/a&gt;  |  &lt;a href=&quot;/2018/11/07/index-of-PAT-Basic-Level/&quot; title=&quot;PAT乙级目录&quot;&gt;PAT乙级目录&lt;/a&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;原题地址：&lt;a href=&quot;https://pintia.cn/problem-sets/994805342720868352/problems/994805352359378944&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;A1121 Damn Single&lt;/a&gt;&lt;br&gt;中文版：&lt;a href=&quot;https://pintia.cn/problem-sets/994805260223102976/problems/994805266942377984&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;B1065 单身狗 &lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="PAT题解" scheme="http://lulalap.com/categories/PAT%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="PAT" scheme="http://lulalap.com/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>PAT A1120 Friend Numbers(C++)</title>
    <link href="http://lulalap.com/2018/11/28/PAT-A1120-cpp/"/>
    <id>http://lulalap.com/2018/11/28/PAT-A1120-cpp/</id>
    <published>2018-11-28T15:30:41.000Z</published>
    <updated>2018-11-28T14:55:35.781Z</updated>
    
    <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>原题地址：<a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805352925609984" target="_blank" rel="noopener">A1120 Friend Numbers</a><br>中文版：<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805267416334336" target="_blank" rel="noopener">B1064 朋友数 </a></p><a id="more"></a><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>方法一：利用 map，每出现一个新的朋友证号就会在 map 中增加一个元素。最后遍历 map 输出即可得到有序结果序列。和方法二相比，主要优势在于节约了内存空间。</p><p>方法二：利用 hash 数组，记录每个数是否是朋友证号，如是设为 true，最后按顺序遍历数组，输出值为 true 的序号。</p><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>map&lt;int, int&gt; m;</code><ul><li>用于映射，键和值可以是任意类型</li><li>直接使用 <code>m[&lt;键&gt;] = &lt;值&gt;</code> 即可向map中添加一组键值对</li><li>需要的头文件：<strong>map</strong></li></ul></li><li><code>for(auto it = m.begin(); it != m.end(); it++){}</code><ul><li>可用于遍历 map/vector/set 等容器， <code>auto</code> 实现自动匹配对应迭代器类型</li><li>如果不用 <code>auto it = m.begin()</code> 则要写成 <code>std::map&lt;char, int&gt;::iterator it = m.begin()</code></li><li><code>map&lt;char,int&gt;</code> 在其他情况下可替换成对应元素的类型如 <code>vector&lt;int&gt;</code></li><li>所需头文件： <strong>map / set / vector</strong></li></ul></li><li><code>it-&gt;first</code> 和 <code>it-&gt;second</code><ul><li><code>it-&gt;first</code> 为 map 中对应元素的关键字</li><li><code>it-&gt;second</code> 为 map 中对应关键字的值</li><li>所需头文件： <strong>map</strong></li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><ul><li><p>方法一：利用 map</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> n, cnt = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">string</span> temp;</span><br><span class="line">  <span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; m;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; temp;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; temp.length(); j++) sum = sum + (<span class="keyword">int</span>)(temp[j] - <span class="string">'0'</span>);</span><br><span class="line">    m[sum]++;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, m.size());</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">auto</span> it = m.begin(); it != m.end(); it++, cnt++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(cnt != <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>, it-&gt;first);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>方法二：利用 hash 数组</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> n, num = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">bool</span> h[<span class="number">50</span>] = &#123;<span class="literal">false</span>&#125;;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>, temp, sum; i &lt; n; i++, sum = <span class="number">0</span>)&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;temp);</span><br><span class="line">    <span class="keyword">while</span>(temp!=<span class="number">0</span>)&#123;</span><br><span class="line">      sum = sum + temp % <span class="number">10</span>;</span><br><span class="line">      temp /= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(h[sum] == <span class="literal">false</span>)&#123;</span><br><span class="line">      num++;</span><br><span class="line">      h[sum] = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, num);</span><br><span class="line">  <span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; <span class="number">50</span>; i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(h[i]) &#123;</span><br><span class="line">      <span class="keyword">if</span>(flag != <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">"%d"</span>, i);</span><br><span class="line">      flag++;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;a href=&quot;/2018/11/07/index-of-PAT-Advanced-Level/&quot; title=&quot;PAT甲级目录&quot;&gt;PAT甲级目录&lt;/a&gt;  |  &lt;a href=&quot;/2018/11/07/index-of-PAT-Basic-Level/&quot; title=&quot;PAT乙级目录&quot;&gt;PAT乙级目录&lt;/a&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;原题地址：&lt;a href=&quot;https://pintia.cn/problem-sets/994805342720868352/problems/994805352925609984&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;A1120 Friend Numbers&lt;/a&gt;&lt;br&gt;中文版：&lt;a href=&quot;https://pintia.cn/problem-sets/994805260223102976/problems/994805267416334336&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;B1064 朋友数 &lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="PAT题解" scheme="http://lulalap.com/categories/PAT%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="PAT" scheme="http://lulalap.com/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>PAT A1117 Eddington Number(C++)</title>
    <link href="http://lulalap.com/2018/11/28/PAT-A1117-cpp/"/>
    <id>http://lulalap.com/2018/11/28/PAT-A1117-cpp/</id>
    <published>2018-11-28T15:28:41.000Z</published>
    <updated>2018-11-28T14:48:30.618Z</updated>
    
    <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>原题地址：<a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805354762715136" target="_blank" rel="noopener">A1117 Eddington Number</a><br>中文版：<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805269312159744" target="_blank" rel="noopener">B1060 爱丁顿数 </a></p><a id="more"></a><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>对全部每天的公里数进行倒序排序，则大于第 $i$ ($i$ 从 0 开始)个公里数的天数有 $i - 1$ 天。最大的 E 即遇到的第一个“公里数小于等于天数” 的天数。</p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li><code>while(cnt &lt; N &amp;&amp; D[cnt] &gt; cnt + 1) cnt++;</code><ul><li>也可以用 for 循环</li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>&#123; <span class="keyword">return</span> a &gt; b; &#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> N, D[<span class="number">100010</span>] = &#123;<span class="number">0</span>&#125;, cnt = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;N);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;D[i]);</span><br><span class="line">  &#125;</span><br><span class="line">  sort(D, D + N, cmp);</span><br><span class="line">  <span class="keyword">while</span>(cnt &lt; N &amp;&amp; D[cnt] &gt; cnt + <span class="number">1</span>) cnt++;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, cnt);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;a href=&quot;/2018/11/07/index-of-PAT-Advanced-Level/&quot; title=&quot;PAT甲级目录&quot;&gt;PAT甲级目录&lt;/a&gt;  |  &lt;a href=&quot;/2018/11/07/index-of-PAT-Basic-Level/&quot; title=&quot;PAT乙级目录&quot;&gt;PAT乙级目录&lt;/a&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;原题地址：&lt;a href=&quot;https://pintia.cn/problem-sets/994805342720868352/problems/994805354762715136&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;A1117 Eddington Number&lt;/a&gt;&lt;br&gt;中文版：&lt;a href=&quot;https://pintia.cn/problem-sets/994805260223102976/problems/994805269312159744&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;B1060 爱丁顿数 &lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="PAT题解" scheme="http://lulalap.com/categories/PAT%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="PAT" scheme="http://lulalap.com/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>PAT A1116 Come on! Let&#39;s C(C++)</title>
    <link href="http://lulalap.com/2018/11/28/PAT-A1116-cpp/"/>
    <id>http://lulalap.com/2018/11/28/PAT-A1116-cpp/</id>
    <published>2018-11-28T15:26:41.000Z</published>
    <updated>2018-11-28T14:52:40.809Z</updated>
    
    <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>原题地址：<a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805355358306304" target="_blank" rel="noopener">A1116 Come on! Let’s C</a><br>中文版：<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805269828059136" target="_blank" rel="noopener">B1059 C语言竞赛 </a></p><a id="more"></a><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>元素查找。将 id 作为关键字，对应排名作为值，并设置 check 数组判断是否已经查找过。</p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li><code>printf(&quot;%04d: &quot;, id);</code><ul><li>id 为4位数字</li></ul></li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li>求素数的函数<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isprime</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i * i &lt;= x; i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(x % i == <span class="number">0</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isprime</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i * i &lt;= x; i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(x % i == <span class="number">0</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> N, K, R[<span class="number">10010</span>], check[<span class="number">10010</span>] = &#123;<span class="number">0</span>&#125;, id;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;N);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; i++)&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;id);</span><br><span class="line">    R[id] = i;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;K);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; K; i++)&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;id);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%04d: "</span>, id); <span class="comment">// id 为4位数字</span></span><br><span class="line">    <span class="keyword">if</span>(check[id] == <span class="number">0</span>)&#123;</span><br><span class="line">      <span class="keyword">if</span>(R[id] &gt;= <span class="number">1</span> &amp;&amp; R[id] &lt;= N)&#123;</span><br><span class="line">        <span class="keyword">if</span>(R[id] == <span class="number">1</span>) <span class="built_in">printf</span>(<span class="string">"Mystery Award\n"</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(isprime(R[id])) <span class="built_in">printf</span>(<span class="string">"Minion\n"</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"Chocolate\n"</span>);</span><br><span class="line">        check[id] = <span class="number">1</span>;</span><br><span class="line">      &#125;<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"Are you kidding?\n"</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"Checked\n"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;a href=&quot;/2018/11/07/index-of-PAT-Advanced-Level/&quot; title=&quot;PAT甲级目录&quot;&gt;PAT甲级目录&lt;/a&gt;  |  &lt;a href=&quot;/2018/11/07/index-of-PAT-Basic-Level/&quot; title=&quot;PAT乙级目录&quot;&gt;PAT乙级目录&lt;/a&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;原题地址：&lt;a href=&quot;https://pintia.cn/problem-sets/994805342720868352/problems/994805355358306304&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;A1116 Come on! Let’s C&lt;/a&gt;&lt;br&gt;中文版：&lt;a href=&quot;https://pintia.cn/problem-sets/994805260223102976/problems/994805269828059136&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;B1059 C语言竞赛 &lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="PAT题解" scheme="http://lulalap.com/categories/PAT%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="PAT" scheme="http://lulalap.com/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>PAT A1109 Group Photo(C++)</title>
    <link href="http://lulalap.com/2018/11/28/PAT-A1109-cpp-unfi/"/>
    <id>http://lulalap.com/2018/11/28/PAT-A1109-cpp-unfi/</id>
    <published>2018-11-28T15:25:41.000Z</published>
    <updated>2018-11-28T14:54:34.204Z</updated>
    
    <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>原题地址：<a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805360043343872" target="_blank" rel="noopener">A1109 Group Photo</a><br>中文版：<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805272021680128" target="_blank" rel="noopener">B1055 集体照</a></p><a id="more"></a><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>设置一个二维数组，将结果按照螺旋填充到二维数组中再最后输出。填充注意不要超出边界。用二维数组的默认值来表示该位置未被填充，以实现隐形的不断缩小的边界。</p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li><code>ans[i][++j]</code><ul><li>使用 <code>++j</code> 可以使得下一步循环的 j 为同一个 j；</li><li>否则要另外考虑只剩最中间一行或一列的情况；多多试错，总能 AC</li></ul></li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>sort(S, S + N, cmp);</code><ul><li>排序函数，实现 [first, last) 范围内的排序，可以自定义排序策略 cmp 函数</li><li>所需头文件： <strong>algorithm</strong></li></ul></li><li><code>memset(s,0,sizeof(s));</code><ul><li>将 s 所指向的某一块内存中的后一定范围内的内容全部设置为指定的 ASCII 值， <code>memset(&lt;内存地址&gt;, &lt;指定的 ASCII 码&gt;, &lt;地址大小&gt;);</code></li><li>memset 函数按字节对内存块进行初始化，所以不能用它将 int 数组初始化为 0 和 -1 之外的其他值</li><li>所需头文件：<strong>cstring</strong></li></ul></li><li><code>char a[5];  memset(a, 97, 5 * sizeof(char));</code><ul><li>可将字符数组 a 初始化为 <code>aaaaa</code>；</li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>&#123; <span class="keyword">return</span> a &gt; b; &#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> N, S[<span class="number">10010</span>];</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;N);</span><br><span class="line">  <span class="keyword">int</span> n = (<span class="keyword">int</span>)<span class="built_in">sqrt</span>(<span class="number">1.0</span> * N);</span><br><span class="line">  <span class="keyword">while</span>(N % n != <span class="number">0</span>) n--;</span><br><span class="line">  <span class="keyword">int</span> m = N / n;</span><br><span class="line">  <span class="keyword">int</span> ans[m][n];</span><br><span class="line">  <span class="built_in">memset</span>(ans,<span class="number">0</span>,<span class="keyword">sizeof</span>(ans));<span class="comment">//用于判断是否被赋值过</span></span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;S[i]);</span><br><span class="line">  sort(S, S + N, cmp);</span><br><span class="line">  <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>, k = <span class="number">0</span>;</span><br><span class="line">  ans[i][j] = S[k++];<span class="comment">//第一个赋值</span></span><br><span class="line">  <span class="keyword">while</span>(k &lt; N)&#123;</span><br><span class="line">    <span class="keyword">while</span>(j &lt; n - <span class="number">1</span> &amp;&amp; !ans[i][j+<span class="number">1</span>]) ans[i][++j] = S[k++];<span class="comment">//从左向右</span></span><br><span class="line">    <span class="keyword">while</span>(i &lt; m - <span class="number">1</span> &amp;&amp; !ans[i+<span class="number">1</span>][j]) ans[++i][j] = S[k++];<span class="comment">//从上向下</span></span><br><span class="line">    <span class="keyword">while</span>(j &gt; <span class="number">0</span> &amp;&amp; !ans[i][j<span class="number">-1</span>]) ans[i][--j] = S[k++];<span class="comment">//从右往左</span></span><br><span class="line">    <span class="keyword">while</span>(i &gt; <span class="number">0</span> &amp;&amp; !ans[i<span class="number">-1</span>][j]) ans[--i][j] = S[k++];<span class="comment">//从下往上</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++)&#123;</span><br><span class="line">      <span class="keyword">if</span>(j != <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">"%d"</span>, ans[i][j]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;a href=&quot;/2018/11/07/index-of-PAT-Advanced-Level/&quot; title=&quot;PAT甲级目录&quot;&gt;PAT甲级目录&lt;/a&gt;  |  &lt;a href=&quot;/2018/11/07/index-of-PAT-Basic-Level/&quot; title=&quot;PAT乙级目录&quot;&gt;PAT乙级目录&lt;/a&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;原题地址：&lt;a href=&quot;https://pintia.cn/problem-sets/994805342720868352/problems/994805360043343872&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;A1109 Group Photo&lt;/a&gt;&lt;br&gt;中文版：&lt;a href=&quot;https://pintia.cn/problem-sets/994805260223102976/problems/994805272021680128&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;B1055 集体照&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="PAT题解" scheme="http://lulalap.com/categories/PAT%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="PAT" scheme="http://lulalap.com/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>PAT A1105 Spiral Matrix(C++)</title>
    <link href="http://lulalap.com/2018/11/28/PAT-A1108-cpp-unfi/"/>
    <id>http://lulalap.com/2018/11/28/PAT-A1108-cpp-unfi/</id>
    <published>2018-11-28T15:23:41.000Z</published>
    <updated>2018-11-28T14:55:20.280Z</updated>
    
    <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>原题地址：<a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805363117768704" target="_blank" rel="noopener">A1105 Spiral Matrix</a><br>中文版：<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805272659214336" target="_blank" rel="noopener">B1054 求平均值</a></p><a id="more"></a><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>设置一个二维数组，将结果按照螺旋填充到二维数组中再最后输出。填充注意不要超出边界。用二维数组的默认值来表示该位置未被填充，以实现隐形的不断缩小的边界。</p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li><code>ans[i][++j]</code><ul><li>使用 <code>++j</code> 可以使得下一步循环的 j 为同一个 j；</li><li>否则要另外考虑只剩最中间一行或一列的情况；多多试错，总能 AC</li></ul></li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>sort(S, S + N, cmp);</code><ul><li>排序函数，实现 [first, last) 范围内的排序，可以自定义排序策略 cmp 函数</li><li>所需头文件： <strong>algorithm</strong></li></ul></li><li><code>memset(s,0,sizeof(s));</code><ul><li>将 s 所指向的某一块内存中的后一定范围内的内容全部设置为指定的 ASCII 值， <code>memset(&lt;内存地址&gt;, &lt;指定的 ASCII 码&gt;, &lt;地址大小&gt;);</code></li><li>memset 函数按字节对内存块进行初始化，所以不能用它将 int 数组初始化为 0 和 -1 之外的其他值</li><li>所需头文件：<strong>cstring</strong></li></ul></li><li><code>char a[5];  memset(a, 97, 5 * sizeof(char));</code><ul><li>可将字符数组 a 初始化为 <code>aaaaa</code>；</li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>&#123; <span class="keyword">return</span> a &gt; b; &#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> N, S[<span class="number">10010</span>];</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;N);</span><br><span class="line">  <span class="keyword">int</span> n = (<span class="keyword">int</span>)<span class="built_in">sqrt</span>(<span class="number">1.0</span> * N);</span><br><span class="line">  <span class="keyword">while</span>(N % n != <span class="number">0</span>) n--;</span><br><span class="line">  <span class="keyword">int</span> m = N / n;</span><br><span class="line">  <span class="keyword">int</span> ans[m][n];</span><br><span class="line">  <span class="built_in">memset</span>(ans,<span class="number">0</span>,<span class="keyword">sizeof</span>(ans));<span class="comment">//用于判断是否被赋值过</span></span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;S[i]);</span><br><span class="line">  sort(S, S + N, cmp);</span><br><span class="line">  <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>, k = <span class="number">0</span>;</span><br><span class="line">  ans[i][j] = S[k++];<span class="comment">//第一个赋值</span></span><br><span class="line">  <span class="keyword">while</span>(k &lt; N)&#123;</span><br><span class="line">    <span class="keyword">while</span>(j &lt; n - <span class="number">1</span> &amp;&amp; !ans[i][j+<span class="number">1</span>]) ans[i][++j] = S[k++];<span class="comment">//从左向右</span></span><br><span class="line">    <span class="keyword">while</span>(i &lt; m - <span class="number">1</span> &amp;&amp; !ans[i+<span class="number">1</span>][j]) ans[++i][j] = S[k++];<span class="comment">//从上向下</span></span><br><span class="line">    <span class="keyword">while</span>(j &gt; <span class="number">0</span> &amp;&amp; !ans[i][j<span class="number">-1</span>]) ans[i][--j] = S[k++];<span class="comment">//从右往左</span></span><br><span class="line">    <span class="keyword">while</span>(i &gt; <span class="number">0</span> &amp;&amp; !ans[i<span class="number">-1</span>][j]) ans[--i][j] = S[k++];<span class="comment">//从下往上</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++)&#123;</span><br><span class="line">      <span class="keyword">if</span>(j != <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">"%d"</span>, ans[i][j]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;a href=&quot;/2018/11/07/index-of-PAT-Advanced-Level/&quot; title=&quot;PAT甲级目录&quot;&gt;PAT甲级目录&lt;/a&gt;  |  &lt;a href=&quot;/2018/11/07/index-of-PAT-Basic-Level/&quot; title=&quot;PAT乙级目录&quot;&gt;PAT乙级目录&lt;/a&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;原题地址：&lt;a href=&quot;https://pintia.cn/problem-sets/994805342720868352/problems/994805363117768704&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;A1105 Spiral Matrix&lt;/a&gt;&lt;br&gt;中文版：&lt;a href=&quot;https://pintia.cn/problem-sets/994805260223102976/problems/994805272659214336&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;B1054 求平均值&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="PAT题解" scheme="http://lulalap.com/categories/PAT%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="PAT" scheme="http://lulalap.com/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>PAT A1105 Spiral Matrix(C++)</title>
    <link href="http://lulalap.com/2018/11/28/PAT-A1105-cpp/"/>
    <id>http://lulalap.com/2018/11/28/PAT-A1105-cpp/</id>
    <published>2018-11-28T15:22:41.000Z</published>
    <updated>2018-11-28T14:56:31.746Z</updated>
    
    <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>原题地址：<a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805363117768704" target="_blank" rel="noopener">A1105 Spiral Matrix</a><br>中文版：<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805275146436608" target="_blank" rel="noopener">B1050 螺旋矩阵</a></p><a id="more"></a><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>设置一个二维数组，将结果按照螺旋填充到二维数组中再最后输出。填充注意不要超出边界。用二维数组的默认值来表示该位置未被填充，以实现隐形的不断缩小的边界。</p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li><code>ans[i][++j]</code><ul><li>使用 <code>++j</code> 可以使得下一步循环的 j 为同一个 j；</li><li>否则要另外考虑只剩最中间一行或一列的情况；多多试错，总能 AC</li></ul></li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>sort(S, S + N, cmp);</code><ul><li>排序函数，实现 [first, last) 范围内的排序，可以自定义排序策略 cmp 函数</li><li>所需头文件： <strong>algorithm</strong></li></ul></li><li><code>memset(s,0,sizeof(s));</code><ul><li>将 s 所指向的某一块内存中的后一定范围内的内容全部设置为指定的 ASCII 值， <code>memset(&lt;内存地址&gt;, &lt;指定的 ASCII 码&gt;, &lt;地址大小&gt;);</code></li><li>memset 函数按字节对内存块进行初始化，所以不能用它将 int 数组初始化为 0 和 -1 之外的其他值</li><li>所需头文件：<strong>cstring</strong></li></ul></li><li><code>char a[5];  memset(a, 97, 5 * sizeof(char));</code><ul><li>可将字符数组 a 初始化为 <code>aaaaa</code>；</li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>&#123; <span class="keyword">return</span> a &gt; b; &#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> N, S[<span class="number">10010</span>];</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;N);</span><br><span class="line">  <span class="keyword">int</span> n = (<span class="keyword">int</span>)<span class="built_in">sqrt</span>(<span class="number">1.0</span> * N);</span><br><span class="line">  <span class="keyword">while</span>(N % n != <span class="number">0</span>) n--;</span><br><span class="line">  <span class="keyword">int</span> m = N / n;</span><br><span class="line">  <span class="keyword">int</span> ans[m][n];</span><br><span class="line">  <span class="built_in">memset</span>(ans,<span class="number">0</span>,<span class="keyword">sizeof</span>(ans));<span class="comment">//用于判断是否被赋值过</span></span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;S[i]);</span><br><span class="line">  sort(S, S + N, cmp);</span><br><span class="line">  <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>, k = <span class="number">0</span>;</span><br><span class="line">  ans[i][j] = S[k++];<span class="comment">//第一个赋值</span></span><br><span class="line">  <span class="keyword">while</span>(k &lt; N)&#123;</span><br><span class="line">    <span class="keyword">while</span>(j &lt; n - <span class="number">1</span> &amp;&amp; !ans[i][j+<span class="number">1</span>]) ans[i][++j] = S[k++];<span class="comment">//从左向右</span></span><br><span class="line">    <span class="keyword">while</span>(i &lt; m - <span class="number">1</span> &amp;&amp; !ans[i+<span class="number">1</span>][j]) ans[++i][j] = S[k++];<span class="comment">//从上向下</span></span><br><span class="line">    <span class="keyword">while</span>(j &gt; <span class="number">0</span> &amp;&amp; !ans[i][j<span class="number">-1</span>]) ans[i][--j] = S[k++];<span class="comment">//从右往左</span></span><br><span class="line">    <span class="keyword">while</span>(i &gt; <span class="number">0</span> &amp;&amp; !ans[i<span class="number">-1</span>][j]) ans[--i][j] = S[k++];<span class="comment">//从下往上</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++)&#123;</span><br><span class="line">      <span class="keyword">if</span>(j != <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">"%d"</span>, ans[i][j]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;a href=&quot;/2018/11/07/index-of-PAT-Advanced-Level/&quot; title=&quot;PAT甲级目录&quot;&gt;PAT甲级目录&lt;/a&gt;  |  &lt;a href=&quot;/2018/11/07/index-of-PAT-Basic-Level/&quot; title=&quot;PAT乙级目录&quot;&gt;PAT乙级目录&lt;/a&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;原题地址：&lt;a href=&quot;https://pintia.cn/problem-sets/994805342720868352/problems/994805363117768704&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;A1105 Spiral Matrix&lt;/a&gt;&lt;br&gt;中文版：&lt;a href=&quot;https://pintia.cn/problem-sets/994805260223102976/problems/994805275146436608&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;B1050 螺旋矩阵&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="PAT题解" scheme="http://lulalap.com/categories/PAT%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="PAT" scheme="http://lulalap.com/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>PAT A1104 Sum of Number Segments(C++)</title>
    <link href="http://lulalap.com/2018/11/28/PAT-A1104-cpp/"/>
    <id>http://lulalap.com/2018/11/28/PAT-A1104-cpp/</id>
    <published>2018-11-28T15:20:41.000Z</published>
    <updated>2018-11-28T14:56:59.546Z</updated>
    
    <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>原题地址：<a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805363914686464" target="_blank" rel="noopener">A1104 Sum of Number Segments</a><br>中文版：<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805275792359424" target="_blank" rel="noopener">B1049 数列的片段和</a></p><a id="more"></a><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>找规律，关键是求数列中每个数出现的次数。因为片段是连续的，对于第 $i$ 个（$i$ 从 1 开始）数所在的片段，片段起点可以是该数左边（包括 $i$ ）的任意一个数，即有 $i$ 种可能；片段终点可以是该数右边（包括 $i$ ）的任意一个数，即有 $n - i + 1$ 种可能。所以包含 $i$ 的片段总共有 $i * (n - i + 1)$ 种可能。<br>相似的题目： <a href="/2018/11/26/PAT-B1040-cpp/" title="PAT-B1040-有几个PAT(C++)">PAT-B1040-有几个PAT(C++)</a></p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li><code>ans += x * i * (n - i + 1);</code><ul><li>将 <code>x</code> 放在第一个位置，乘积将自动转换为浮点数再累加，保证了精度</li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> n;</span><br><span class="line">  <span class="keyword">double</span> x, ans = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lf"</span>, &amp;x);</span><br><span class="line">    ans += x * i * (n - i + <span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%.2lf"</span>, ans);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;a href=&quot;/2018/11/07/index-of-PAT-Advanced-Level/&quot; title=&quot;PAT甲级目录&quot;&gt;PAT甲级目录&lt;/a&gt;  |  &lt;a href=&quot;/2018/11/07/index-of-PAT-Basic-Level/&quot; title=&quot;PAT乙级目录&quot;&gt;PAT乙级目录&lt;/a&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;原题地址：&lt;a href=&quot;https://pintia.cn/problem-sets/994805342720868352/problems/994805363914686464&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;A1104 Sum of Number Segments&lt;/a&gt;&lt;br&gt;中文版：&lt;a href=&quot;https://pintia.cn/problem-sets/994805260223102976/problems/994805275792359424&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;B1049 数列的片段和&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="PAT题解" scheme="http://lulalap.com/categories/PAT%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="PAT" scheme="http://lulalap.com/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>PAT A1101 Quick Sort(C++)</title>
    <link href="http://lulalap.com/2018/11/28/PAT-A1101-cpp/"/>
    <id>http://lulalap.com/2018/11/28/PAT-A1101-cpp/</id>
    <published>2018-11-28T15:19:41.000Z</published>
    <updated>2018-11-28T14:57:28.330Z</updated>
    
    <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>原题地址：<a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805366343188480" target="_blank" rel="noopener">A1101 Quick Sort</a><br>中文版：<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805278589960192" target="_blank" rel="noopener">B1045 快速排序</a></p><a id="more"></a><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>找到每个数字中左边的最大元素、右边的最小元素，再与该位置的元素进行比较，即可获知该元素是否可能为主元。如果使用多次循环寻找最值将可能超时。因此，这里用两个数组分别存储每个位置左右的最值，只需要两次遍历，即可获得所需数据，最后再进行一次遍历即可获得最终结果。</p><p>可以将结果存放到可变数组中，最后排个序。但因为数字没有重复，因此也可以直接将结果存到集合中，集合将自动排序获得升序序列。</p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li>结尾一定要输出换行，否则当结果个数为 0 时，第二行没有输出将报错。</li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>y = max(a, b)</code><ul><li>获取两个元素中的较大值</li><li>需要头文件 <strong>algorithm</strong></li></ul></li><li><code>set &lt;int&gt; ans;</code><ul><li>创建了一个集合，用于存放结果</li><li><code>ans.insert(S[i])</code><ul><li>向集合中插入一个元素</li></ul></li><li>需要头文件 <strong>set</strong></li></ul></li><li><code>for(auto it = ans.begin(); it != ans.end(); it++){ }</code><ul><li>可用于遍历 map/vector/set 等容器， <code>auto</code> 实现自动匹配对应迭代器类型</li><li><code>it</code> 为迭代器， <code>*it</code> 为对应元素</li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> N, S[<span class="number">100010</span>], Left_max[<span class="number">100010</span>], Right_min[<span class="number">100010</span>];</span><br><span class="line">  <span class="built_in">set</span> &lt;<span class="keyword">int</span>&gt; ans;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;N);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)&#123; <span class="comment">// 获得左边最大数的序列</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;S[i]);</span><br><span class="line">    <span class="keyword">if</span>(i == <span class="number">0</span>) Left_max[<span class="number">0</span>] = S[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">else</span> Left_max[i] = max(Left_max[i - <span class="number">1</span>], S[i - <span class="number">1</span>]);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = N - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)&#123; <span class="comment">//获得右边最小数的序列</span></span><br><span class="line">    <span class="keyword">if</span>(i == N - <span class="number">1</span>) Right_min[i] = S[i];</span><br><span class="line">    <span class="keyword">else</span> Right_min[i] = min(Right_min[i + <span class="number">1</span>], S[i + <span class="number">1</span>]);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)&#123; <span class="comment">// 判断是否可能为主元</span></span><br><span class="line">    <span class="keyword">if</span>(S[i] &gt;= Left_max[i] &amp;&amp; S[i] &lt;= Right_min[i]) ans.insert(S[i]);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans.size());</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">auto</span> it = ans.begin(); it != ans.end(); it++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(it != ans.begin()) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>, *it);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"\n"</span>); <span class="comment">// 不能少，否则会有格式错误</span></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;a href=&quot;/2018/11/07/index-of-PAT-Advanced-Level/&quot; title=&quot;PAT甲级目录&quot;&gt;PAT甲级目录&lt;/a&gt;  |  &lt;a href=&quot;/2018/11/07/index-of-PAT-Basic-Level/&quot; title=&quot;PAT乙级目录&quot;&gt;PAT乙级目录&lt;/a&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;原题地址：&lt;a href=&quot;https://pintia.cn/problem-sets/994805342720868352/problems/994805366343188480&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;A1101 Quick Sort&lt;/a&gt;&lt;br&gt;中文版：&lt;a href=&quot;https://pintia.cn/problem-sets/994805260223102976/problems/994805278589960192&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;B1045 快速排序&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="PAT题解" scheme="http://lulalap.com/categories/PAT%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="PAT" scheme="http://lulalap.com/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>PAT A1100 Mars Numbers(C++)</title>
    <link href="http://lulalap.com/2018/11/28/PAT-A1100-cpp/"/>
    <id>http://lulalap.com/2018/11/28/PAT-A1100-cpp/</id>
    <published>2018-11-28T15:18:41.000Z</published>
    <updated>2018-11-28T14:58:11.108Z</updated>
    
    <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>原题地址：<a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805367156883456" target="_blank" rel="noopener">A1100 Mars Numbers</a><br>中文版：<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805279328157696" target="_blank" rel="noopener">B1044 火星数字</a></p><a id="more"></a><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>进制转换。通过字符串处理，先判断是地球数字还是火星数字，然后按照要求进行转换。</p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li>“tret” 长度为 4，可通过长度直接判断是否为 0.</li><li>13 &lt;=&gt; “tam”; 26 &lt;=&gt; “hel”; …<ul><li>没有多余的部分。即 13 的倍数和小于 13 的数都是长度为 3 的字符串</li></ul></li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>isdigit(s[0])</code><ul><li>判断字符是否为数字</li><li>需要头文件 <strong>cctype</strong></li></ul></li><li><code>s.substr(&lt;截取部分的首地址&gt;, &lt;截取部分的长度&gt;)</code><ul><li>截取字符串的一部分生成新的字符串</li><li>需要头文件 <strong>string</strong></li></ul></li><li><code>while(j &lt; 13 &amp;&amp; l1[j] != s1) j++;</code><ul><li>查找元素在列表中的位置，找到了或找到列表末尾都将退出循环</li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> N;</span><br><span class="line">  <span class="built_in">string</span> s, l1[] = &#123;<span class="string">"tret"</span>, <span class="string">"jan"</span>, <span class="string">"feb"</span>, <span class="string">"mar"</span>, <span class="string">"apr"</span>, <span class="string">"may"</span>, <span class="string">"jun"</span>, <span class="string">"jly"</span>, <span class="string">"aug"</span>, <span class="string">"sep"</span>, <span class="string">"oct"</span>, <span class="string">"nov"</span>, <span class="string">"dec"</span>&#125;;</span><br><span class="line">  <span class="built_in">string</span> l2[] = &#123;<span class="string">"tret"</span>, <span class="string">"tam"</span>, <span class="string">"hel"</span>, <span class="string">"maa"</span>, <span class="string">"huh"</span>, <span class="string">"tou"</span>, <span class="string">"kes"</span>, <span class="string">"hei"</span>, <span class="string">"elo"</span>, <span class="string">"syy"</span>, <span class="string">"lok"</span>, <span class="string">"mer"</span>, <span class="string">"jou"</span>&#125;;</span><br><span class="line">  <span class="built_in">cin</span> &gt;&gt; N;</span><br><span class="line">  getchar();</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)&#123;</span><br><span class="line">    getline(<span class="built_in">cin</span>, s);</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">isdigit</span>(s[<span class="number">0</span>]))&#123; <span class="comment">// 为地球数字</span></span><br><span class="line">      <span class="keyword">int</span> num = stoi(s);</span><br><span class="line">      <span class="keyword">int</span> a = num / <span class="number">13</span>, b = num % <span class="number">13</span>;</span><br><span class="line">      <span class="keyword">if</span>(a == <span class="number">0</span>) <span class="built_in">cout</span> &lt;&lt; l1[b] &lt;&lt; <span class="built_in">endl</span>; <span class="comment">//小于 13</span></span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span>(b == <span class="number">0</span>) <span class="built_in">cout</span> &lt;&lt; l2[a] &lt;&lt; <span class="built_in">endl</span>; <span class="comment">// 为 13 的倍数</span></span><br><span class="line">      <span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; l2[a] + <span class="string">' '</span> + l1[b] &lt;&lt; <span class="built_in">endl</span>; <span class="comment">// 其他</span></span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;   <span class="comment">// 为火星数字</span></span><br><span class="line">      <span class="built_in">string</span> s1, s2;</span><br><span class="line">      <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>, ans;</span><br><span class="line">      s1 = s.substr(<span class="number">0</span>, <span class="number">3</span>);</span><br><span class="line">      <span class="keyword">if</span>(s.length() == <span class="number">4</span>) ans = <span class="number">0</span>; <span class="comment">// 为 0</span></span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span>(s.length() &lt;= <span class="number">3</span>)&#123; <span class="comment">// 小于 13 或为 13 的倍数</span></span><br><span class="line">        <span class="keyword">while</span>(j &lt; <span class="number">13</span> &amp;&amp; l1[j] != s1) j++;</span><br><span class="line">        <span class="keyword">while</span>(i &lt; <span class="number">13</span> &amp;&amp; l2[i] != s1) i++;</span><br><span class="line">        ans = (i == <span class="number">13</span>) ? j : i * <span class="number">13</span>;</span><br><span class="line">      &#125;<span class="keyword">else</span>&#123; <span class="comment">// 其他</span></span><br><span class="line">        s2 = s.substr(<span class="number">4</span>, <span class="number">3</span>);</span><br><span class="line">        <span class="keyword">while</span>(i &lt; <span class="number">13</span> &amp;&amp; l2[i] != s1) i++;</span><br><span class="line">        <span class="keyword">while</span>(j &lt; <span class="number">13</span> &amp;&amp; l1[j] != s2) j++;</span><br><span class="line">        ans = i * <span class="number">13</span> + j;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;a href=&quot;/2018/11/07/index-of-PAT-Advanced-Level/&quot; title=&quot;PAT甲级目录&quot;&gt;PAT甲级目录&lt;/a&gt;  |  &lt;a href=&quot;/2018/11/07/index-of-PAT-Basic-Level/&quot; title=&quot;PAT乙级目录&quot;&gt;PAT乙级目录&lt;/a&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;原题地址：&lt;a href=&quot;https://pintia.cn/problem-sets/994805342720868352/problems/994805367156883456&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;A1100 Mars Numbers&lt;/a&gt;&lt;br&gt;中文版：&lt;a href=&quot;https://pintia.cn/problem-sets/994805260223102976/problems/994805279328157696&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;B1044 火星数字&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="PAT题解" scheme="http://lulalap.com/categories/PAT%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="PAT" scheme="http://lulalap.com/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>PAT A1093 Count PAT&#39;s(C++)</title>
    <link href="http://lulalap.com/2018/11/28/PAT-A1093-cpp/"/>
    <id>http://lulalap.com/2018/11/28/PAT-A1093-cpp/</id>
    <published>2018-11-28T15:16:41.000Z</published>
    <updated>2018-11-28T14:58:34.434Z</updated>
    
    <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>原题地址：<a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805373582557184" target="_blank" rel="noopener">A1093 Count PAT’s</a><br>中文版：<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805282389999616" target="_blank" rel="noopener">B1040 有几个PAT</a></p><a id="more"></a><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>逻辑题。先遍历字符串，对每一个 ‘A’ ，有效的 ‘PAT’ 个数 $m = left_P * right_T$，即为 ‘A’ 左侧的 ‘P’ 字符数与其右侧的 ‘T’ 字符数的乘积。</p><p>每个 ‘A’ 字符左右的 ‘P’ 和 ‘T’ 数量可以通过他们的总数间接求得。一边遍历 ‘A’ 一边可以得到 left_P， right_T = 总的 ‘T’ - left_T。</p><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> left_P = <span class="number">0</span>, right_T = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">long</span> <span class="keyword">long</span> ans = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">string</span> S;</span><br><span class="line">  getline(<span class="built_in">cin</span>, S);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; S.length(); i++) &#123;</span><br><span class="line">    <span class="keyword">if</span>(S[i] == <span class="string">'T'</span>) right_T++;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; S.length(); i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(S[i] == <span class="string">'P'</span>) left_P++;</span><br><span class="line">    <span class="keyword">if</span>(S[i] == <span class="string">'T'</span>) right_T--;</span><br><span class="line">    <span class="keyword">if</span>(S[i] == <span class="string">'A'</span>) ans = (ans + left_P * right_T) % <span class="number">1000000007</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;a href=&quot;/2018/11/07/index-of-PAT-Advanced-Level/&quot; title=&quot;PAT甲级目录&quot;&gt;PAT甲级目录&lt;/a&gt;  |  &lt;a href=&quot;/2018/11/07/index-of-PAT-Basic-Level/&quot; title=&quot;PAT乙级目录&quot;&gt;PAT乙级目录&lt;/a&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;原题地址：&lt;a href=&quot;https://pintia.cn/problem-sets/994805342720868352/problems/994805373582557184&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;A1093 Count PAT’s&lt;/a&gt;&lt;br&gt;中文版：&lt;a href=&quot;https://pintia.cn/problem-sets/994805260223102976/problems/994805282389999616&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;B1040 有几个PAT&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="PAT题解" scheme="http://lulalap.com/categories/PAT%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="PAT" scheme="http://lulalap.com/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>PAT A1089 Insert or Merge(C++)</title>
    <link href="http://lulalap.com/2018/11/28/PAT-A1089-cpp/"/>
    <id>http://lulalap.com/2018/11/28/PAT-A1089-cpp/</id>
    <published>2018-11-28T15:13:41.000Z</published>
    <updated>2018-11-28T14:59:00.644Z</updated>
    
    <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>原题地址：<a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805377432928256" target="_blank" rel="noopener">A1089 Insert or Merge</a><br>中文版：<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805286714327040" target="_blank" rel="noopener">B1035 插入与归并</a></p><a id="more"></a><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>插入排序中间序列特点：已排序部分有序，未排序部分不变。因此可以通过该特点判断是否为插入排序，否则为归并排序。</p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li>注意输出的是下一轮排序序列</li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li>插入排序</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InsertionSort1</span><span class="params">()</span></span>&#123; <span class="comment">// 标准操作</span></span><br><span class="line">  j = i + <span class="number">1</span>;</span><br><span class="line">  temp = S2[j];</span><br><span class="line">  <span class="keyword">while</span>(j &gt; <span class="number">0</span> &amp;&amp; temp &lt; S2[j - <span class="number">1</span>])&#123;</span><br><span class="line">    S2[j] = S2[j - <span class="number">1</span>];</span><br><span class="line">    j--;</span><br><span class="line">  &#125;</span><br><span class="line">  S2[j] = temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InsertionSort2</span><span class="params">()</span></span>&#123; <span class="comment">// 偷懒操作</span></span><br><span class="line">  sort(S1, S1 + i + <span class="number">2</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>归并排序</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mergesort</span><span class="params">()</span></span>&#123; <span class="comment">//归并排序</span></span><br><span class="line">  <span class="keyword">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> step = <span class="number">2</span>; !flag &amp;&amp; step / <span class="number">2</span> &lt; N; step *= <span class="number">2</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(issame(S1, S2) == <span class="literal">true</span>) flag = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i+=step)&#123;</span><br><span class="line">      sort(S1 + i, S1 + min(i + step, N));</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> N, S1[<span class="number">110</span>], S2[<span class="number">110</span>];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">issame</span><span class="params">(<span class="keyword">int</span> a[], <span class="keyword">int</span> b[])</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span>(i &lt; N &amp;&amp; a[i] == b[i]) i++;</span><br><span class="line">  <span class="keyword">return</span> i == N;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mergesort</span><span class="params">()</span></span>&#123; <span class="comment">//归并排序</span></span><br><span class="line">  <span class="keyword">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> step = <span class="number">2</span>; !flag &amp;&amp; step / <span class="number">2</span> &lt; N; step *= <span class="number">2</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(issame(S1, S2) == <span class="literal">true</span>) flag = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i+=step)&#123;</span><br><span class="line">      sort(S1 + i, S1 + min(i + step, N));</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;N);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)&#123; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;S1[i]); &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)&#123; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;S2[i]); &#125;</span><br><span class="line">  <span class="keyword">int</span> i, j;</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; N - <span class="number">1</span> &amp;&amp; S2[i] &lt;= S2[i + <span class="number">1</span>]; i++);</span><br><span class="line">  <span class="keyword">for</span> (j = i + <span class="number">1</span>; S1[j] == S2[j] &amp;&amp; j &lt; N; j++);</span><br><span class="line">  <span class="keyword">if</span> (j == N) &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Insertion Sort\n"</span>);</span><br><span class="line">    sort(S1, S1 + i + <span class="number">2</span>); <span class="comment">// 插入排序</span></span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Merge Sort\n"</span>);</span><br><span class="line">    mergesort();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(i != <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>, S1[i]);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;a href=&quot;/2018/11/07/index-of-PAT-Advanced-Level/&quot; title=&quot;PAT甲级目录&quot;&gt;PAT甲级目录&lt;/a&gt;  |  &lt;a href=&quot;/2018/11/07/index-of-PAT-Basic-Level/&quot; title=&quot;PAT乙级目录&quot;&gt;PAT乙级目录&lt;/a&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;原题地址：&lt;a href=&quot;https://pintia.cn/problem-sets/994805342720868352/problems/994805377432928256&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;A1089 Insert or Merge&lt;/a&gt;&lt;br&gt;中文版：&lt;a href=&quot;https://pintia.cn/problem-sets/994805260223102976/problems/994805286714327040&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;B1035 插入与归并&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="PAT题解" scheme="http://lulalap.com/categories/PAT%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="PAT" scheme="http://lulalap.com/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>PAT A1088 Rational Arithmetic(C++)</title>
    <link href="http://lulalap.com/2018/11/28/PAT-A1088-cpp/"/>
    <id>http://lulalap.com/2018/11/28/PAT-A1088-cpp/</id>
    <published>2018-11-28T15:11:41.000Z</published>
    <updated>2018-11-28T14:59:26.026Z</updated>
    
    <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>原题地址：<a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805378443755520" target="_blank" rel="noopener">A1088 Rational Arithmetic</a><br>中文版：<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805287624491008" target="_blank" rel="noopener">B1034 有理数四则运算</a></p><a id="more"></a><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>分情况讨论。</p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li>不用 long int 会溢出</li><li>要注意及时化简避免溢出</li><li>除法的时候注意符号</li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>long int gcd(long int a, long int b){ return b == 0 ? abs(a) : gcd(b, a % b);}</code><ul><li>获取最大公约数的函数，记住就好</li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">long</span> <span class="keyword">int</span> a, <span class="keyword">long</span> <span class="keyword">int</span> b)</span></span>&#123; <span class="keyword">return</span> b == <span class="number">0</span> ? <span class="built_in">abs</span>(a) : gcd(b, a % b);&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">long</span> <span class="keyword">int</span> &amp;a, <span class="keyword">long</span> <span class="keyword">int</span> &amp;b)</span></span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(a &lt; <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">"("</span>);</span><br><span class="line">  <span class="keyword">long</span> <span class="keyword">int</span> temp = gcd(a, b);</span><br><span class="line">  a /= temp;</span><br><span class="line">  b /= temp;</span><br><span class="line">  <span class="keyword">if</span>(a % b == <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">"%ld"</span>, a/b);</span><br><span class="line">  <span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a / b != <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">"%ld "</span>, a/b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%ld/%ld"</span>, (a / b &lt; <span class="number">0</span>) ? (- a % b) : a % b , b);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(a &lt; <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">")"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">long</span> <span class="keyword">int</span> a1, b1, a2, b2, c1, c2;</span><br><span class="line">  <span class="keyword">char</span> op[] = &#123;<span class="string">'+'</span>, <span class="string">'-'</span>, <span class="string">'*'</span>, <span class="string">'/'</span>&#125;;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%ld/%ld %ld/%ld"</span>, &amp;a1, &amp;b1, &amp;a2, &amp;b2);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)&#123;</span><br><span class="line">    print(a1, b1);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">" %c "</span>, op[i]);</span><br><span class="line">    print(a2, b2);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">" = "</span>);</span><br><span class="line">    <span class="keyword">if</span>(i == <span class="number">0</span>)&#123; <span class="comment">// a + b</span></span><br><span class="line">      c1 = a1 * b2 + a2 * b1;</span><br><span class="line">      c2 = b1 * b2;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(i == <span class="number">1</span>)&#123; <span class="comment">// a - b</span></span><br><span class="line">      c1 = a1 * b2 - a2 * b1;</span><br><span class="line">      c2 = b1 * b2;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(i == <span class="number">2</span>)&#123; <span class="comment">// a * b</span></span><br><span class="line">      c1 = a1 * a2;</span><br><span class="line">      c2 = b1 * b2;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(i == <span class="number">3</span>)&#123; <span class="comment">// a / b</span></span><br><span class="line">      <span class="keyword">if</span>(a2 == <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">"Inf"</span>);</span><br><span class="line">      <span class="keyword">else</span>&#123;</span><br><span class="line">        c1 = a1 * b2;</span><br><span class="line">        c2 = <span class="built_in">abs</span>(b1 * a2);</span><br><span class="line">        <span class="keyword">if</span>(a2 &lt; <span class="number">0</span>) c1 = - c1;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(i !=<span class="number">3</span> || (i == <span class="number">3</span> &amp;&amp; a2 != <span class="number">0</span>) ) print(c1, c2);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;a href=&quot;/2018/11/07/index-of-PAT-Advanced-Level/&quot; title=&quot;PAT甲级目录&quot;&gt;PAT甲级目录&lt;/a&gt;  |  &lt;a href=&quot;/2018/11/07/index-of-PAT-Basic-Level/&quot; title=&quot;PAT乙级目录&quot;&gt;PAT乙级目录&lt;/a&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;原题地址：&lt;a href=&quot;https://pintia.cn/problem-sets/994805342720868352/problems/994805378443755520&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;A1088 Rational Arithmetic&lt;/a&gt;&lt;br&gt;中文版：&lt;a href=&quot;https://pintia.cn/problem-sets/994805260223102976/problems/994805287624491008&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;B1034 有理数四则运算&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="PAT题解" scheme="http://lulalap.com/categories/PAT%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="PAT" scheme="http://lulalap.com/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>PAT A1085 Perfect Sequence(C++)</title>
    <link href="http://lulalap.com/2018/11/28/PAT-A1085-cpp/"/>
    <id>http://lulalap.com/2018/11/28/PAT-A1085-cpp/</id>
    <published>2018-11-28T15:10:41.000Z</published>
    <updated>2018-11-28T14:59:49.266Z</updated>
    
    <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>原题地址：<a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805381845336064" target="_blank" rel="noopener">A1085 Perfect Sequence</a><br>中文版：<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805291311284224" target="_blank" rel="noopener">B1030 完美数列</a></p><a id="more"></a><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>对数字进行排序，设定两个“指针 i 和 j ”分别为完美数列的头和尾，在数组中不断移动“指针”并记录当前完美数列长度，个数正好为 j - i + 1，同时更新完美数列最大长度。</p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li>$m * p$ 可能越界，所以要用 long long 进行类型转换</li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> N, p, S[<span class="number">100010</span>];</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;N, &amp;p);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;S[i]);</span><br><span class="line">  &#125;</span><br><span class="line">  sort(S, S + N);</span><br><span class="line">  <span class="keyword">int</span> cnt_max = <span class="number">-1</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>; i &lt; N; i++)&#123;</span><br><span class="line">    <span class="keyword">while</span>(j &lt; N &amp;&amp; S[j] &lt;= (<span class="keyword">long</span> <span class="keyword">long</span> )S[i] * p)&#123;</span><br><span class="line">      cnt_max = max(j - i + <span class="number">1</span>, cnt_max);</span><br><span class="line">      j++;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, cnt_max);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;a href=&quot;/2018/11/07/index-of-PAT-Advanced-Level/&quot; title=&quot;PAT甲级目录&quot;&gt;PAT甲级目录&lt;/a&gt;  |  &lt;a href=&quot;/2018/11/07/index-of-PAT-Basic-Level/&quot; title=&quot;PAT乙级目录&quot;&gt;PAT乙级目录&lt;/a&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;原题地址：&lt;a href=&quot;https://pintia.cn/problem-sets/994805342720868352/problems/994805381845336064&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;A1085 Perfect Sequence&lt;/a&gt;&lt;br&gt;中文版：&lt;a href=&quot;https://pintia.cn/problem-sets/994805260223102976/problems/994805291311284224&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;B1030 完美数列&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="PAT题解" scheme="http://lulalap.com/categories/PAT%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="PAT" scheme="http://lulalap.com/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>PAT A1084 Broken Keyboard(C++)</title>
    <link href="http://lulalap.com/2018/11/28/PAT-A1084-cpp/"/>
    <id>http://lulalap.com/2018/11/28/PAT-A1084-cpp/</id>
    <published>2018-11-28T15:09:41.000Z</published>
    <updated>2018-11-28T15:00:09.003Z</updated>
    
    <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>原题地址：<a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805382902300672" target="_blank" rel="noopener">A1084 Broken Keyboard</a><br>中文版：<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805292322111488" target="_blank" rel="noopener">B1029 旧键盘</a></p><a id="more"></a><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>统计每个键按下的次数，次数不相等则键损坏。</p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li>输出的字母应当为大写</li><li>空格输出为 ‘_’</li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>#include &lt;cctype&gt;</code><ul><li>该头文件包含一系列处理单个字符的函数</li><li>几个比较常用的函数：<ul><li><code>isalnum()</code><ul><li>判断字符是否为字母或者数字</li></ul></li><li><code>isalpha()</code><ul><li>判断字符是否为字母</li></ul></li><li><code>isblank()</code><ul><li>判断字符是否为空格</li></ul></li><li><code>isdigit()</code><ul><li>判断字符是否为数字</li></ul></li><li><code>islower()</code><ul><li>判断字符是否为小写字母</li></ul></li><li><code>isupper()</code><ul><li>判断字符是否为大写字母</li></ul></li><li><code>y = tolower(x)</code><ul><li>将大写字母转换为小写字母</li></ul></li><li><code>y = toupper(x)</code><ul><li>将小写字母转换为大写字母</li></ul></li></ul></li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">char</span>, <span class="keyword">int</span>&gt; broken;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">count</span><span class="params">(<span class="built_in">string</span> s, <span class="keyword">int</span> tag)</span></span>&#123;</span><br><span class="line">  <span class="keyword">while</span>(s.length() != <span class="number">0</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">islower</span>(s[<span class="number">0</span>])) s[<span class="number">0</span>] = <span class="built_in">toupper</span>(s[<span class="number">0</span>]);</span><br><span class="line">    <span class="keyword">if</span>(tag == <span class="number">0</span>) broken[s[<span class="number">0</span>]]++;</span><br><span class="line">    <span class="keyword">else</span> broken[s[<span class="number">0</span>]]--;</span><br><span class="line">    s.erase(s.begin());</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="built_in">string</span> s1, s2;</span><br><span class="line">  <span class="built_in">cin</span> &gt;&gt; s1 &gt;&gt; s2;</span><br><span class="line">  count(s1, <span class="number">0</span>);</span><br><span class="line">  count(s2, <span class="number">1</span>);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s1.length(); i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">islower</span>(s1[i])) s1[i] = <span class="built_in">toupper</span>(s1[i]);</span><br><span class="line">    <span class="keyword">if</span>(broken[s1[i]] &gt; <span class="number">0</span>)&#123;</span><br><span class="line">      <span class="built_in">cout</span> &lt;&lt; s1[i];</span><br><span class="line">      broken[s1[i]] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;a href=&quot;/2018/11/07/index-of-PAT-Advanced-Level/&quot; title=&quot;PAT甲级目录&quot;&gt;PAT甲级目录&lt;/a&gt;  |  &lt;a href=&quot;/2018/11/07/index-of-PAT-Basic-Level/&quot; title=&quot;PAT乙级目录&quot;&gt;PAT乙级目录&lt;/a&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;原题地址：&lt;a href=&quot;https://pintia.cn/problem-sets/994805342720868352/problems/994805382902300672&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;A1084 Broken Keyboard&lt;/a&gt;&lt;br&gt;中文版：&lt;a href=&quot;https://pintia.cn/problem-sets/994805260223102976/problems/994805292322111488&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;B1029 旧键盘&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="PAT题解" scheme="http://lulalap.com/categories/PAT%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="PAT" scheme="http://lulalap.com/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>PAT A1074 Reversing Linked List(C++)</title>
    <link href="http://lulalap.com/2018/11/28/PAT-A1074-cpp/"/>
    <id>http://lulalap.com/2018/11/28/PAT-A1074-cpp/</id>
    <published>2018-11-28T15:07:41.000Z</published>
    <updated>2018-11-28T15:00:34.751Z</updated>
    
    <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>原题地址：<a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805394512134144" target="_blank" rel="noopener">A1074 Reversing Linked List</a><br>中文版：<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805296180871168" target="_blank" rel="noopener">B1025 反转链表</a></p><a id="more"></a><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>将单链表保存到数组中，用逆转函数对特定范围进行逆转，最后按格式输出</p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li>给定单链表可能包含无用结点</li><li>地址固定为五位</li><li>最后一个结点的 next 输出 -1</li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>reverse(S.begin() + first, S.begin() + last);</code><ul><li>对数组 [first, last) 范围内的元素逆转</li><li>需要头文件：<strong>algorithm</strong></li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">LNode</span>&#123;</span></span><br><span class="line">  <span class="keyword">int</span> data, next;</span><br><span class="line">&#125;L[<span class="number">100010</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> head, A, N, K;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>, &amp;head, &amp;N, &amp;K);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;A);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;L[A].data, &amp;L[A].next);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; S;</span><br><span class="line">  <span class="keyword">while</span>(head != <span class="number">-1</span>)&#123; <span class="comment">// 遍历单链表，将对应结点地址存放到新数组中</span></span><br><span class="line">    S.push_back(head);</span><br><span class="line">    head = L[head].next;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i + K &lt;= S.size(); i+=K)&#123; <span class="comment">// 逆转数组，这里不用N，因为可能包含无用结点</span></span><br><span class="line">    reverse(S.begin() + i, S.begin() + i + K);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i + <span class="number">1</span>&lt; S.size(); i++)&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%05d %d %05d\n"</span>, S[i], L[S[i]].data, S[i+<span class="number">1</span>]);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%05d %d -1\n"</span>, S.back(), L[S.back()].data);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;a href=&quot;/2018/11/07/index-of-PAT-Advanced-Level/&quot; title=&quot;PAT甲级目录&quot;&gt;PAT甲级目录&lt;/a&gt;  |  &lt;a href=&quot;/2018/11/07/index-of-PAT-Basic-Level/&quot; title=&quot;PAT乙级目录&quot;&gt;PAT乙级目录&lt;/a&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;原题地址：&lt;a href=&quot;https://pintia.cn/problem-sets/994805342720868352/problems/994805394512134144&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;A1074 Reversing Linked List&lt;/a&gt;&lt;br&gt;中文版：&lt;a href=&quot;https://pintia.cn/problem-sets/994805260223102976/problems/994805296180871168&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;B1025 反转链表&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="PAT题解" scheme="http://lulalap.com/categories/PAT%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="PAT" scheme="http://lulalap.com/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>PAT A1073 Scientific Notation(C++)</title>
    <link href="http://lulalap.com/2018/11/28/PAT-A1073-cpp/"/>
    <id>http://lulalap.com/2018/11/28/PAT-A1073-cpp/</id>
    <published>2018-11-28T15:03:41.000Z</published>
    <updated>2018-11-28T15:00:55.882Z</updated>
    
    <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>原题地址：<a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805395707510784" target="_blank" rel="noopener">A1073 Scientific Notation</a><br>中文版：<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805297229447168" target="_blank" rel="noopener">B1024 科学计数法</a></p><a id="more"></a><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>对所有情况分类讨论，考虑“指数 $e$ 是否大于零”以及“指数绝对值与有效数字位数 $k$ 大小比较”两个因素，可以分成三类：</p><ul><li>$e &lt; 0$<ul><li>在最前面需要补上 |e| 个 0, 在第一个数字之后添加小数点</li></ul></li><li>$e \geq 0 ; e \geq k$<ul><li>在最后补上 $ e - k $ 个 0，不用添加小数点</li></ul></li><li>$e \geq 0 ; e &lt; k$<ul><li>在第 $e + 1$ 个数字后的位置添加小数点</li></ul></li></ul><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li>先组合数字，再想办法在合适的位置插入小数点，比较不容易出错</li><li>正数不输出 “+” 号，负数要输出 “-“ 号</li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>ans.insert(&lt;插入位置&gt;, &#39;&lt;插入的字符&gt;&#39;);</code><ul><li>实现在字符串特定位置插入一个字符</li><li>所需头文件： <strong>string</strong></li></ul></li><li><code>s.erase(s.begin(), s.begin() + 3);</code><ul><li>删除字符串 [first, last) 范围的部分</li><li>所需头文件： <strong>string</strong></li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="built_in">string</span> s, v_num, ans, temp;</span><br><span class="line">  <span class="keyword">int</span> <span class="built_in">exp</span>, i = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">cin</span> &gt;&gt; s;</span><br><span class="line">  <span class="keyword">if</span>(s[<span class="number">0</span>] == <span class="string">'-'</span>) <span class="built_in">cout</span> &lt;&lt; s[<span class="number">0</span>];<span class="comment">// 输出负号</span></span><br><span class="line">  v_num += s[<span class="number">1</span>];</span><br><span class="line">  s.erase(s.begin(), s.begin() + <span class="number">3</span>);<span class="comment">//去除小数点及其前面的字符</span></span><br><span class="line">  <span class="keyword">while</span>(s[<span class="number">0</span>] != <span class="string">'E'</span>)&#123;</span><br><span class="line">    v_num += s[<span class="number">0</span>];</span><br><span class="line">    s.erase(s.begin());</span><br><span class="line">  &#125;</span><br><span class="line">  s.erase(s.begin());</span><br><span class="line">  <span class="built_in">exp</span> = stoi(s);</span><br><span class="line">  <span class="keyword">if</span>(<span class="built_in">exp</span> &lt; <span class="number">0</span>)&#123;<span class="comment">//指数小于零</span></span><br><span class="line">    <span class="keyword">while</span>(i++ &lt; -<span class="built_in">exp</span>) temp += <span class="string">'0'</span>;</span><br><span class="line">    ans = temp + v_num;</span><br><span class="line">    ans.insert(ans.begin() + <span class="number">1</span>, <span class="string">'.'</span>);</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;<span class="comment">//指数大于等于零</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">exp</span> &gt;= v_num.length() - <span class="number">1</span>)&#123;<span class="comment">//指数比小数的有效数字位数大</span></span><br><span class="line">      <span class="keyword">while</span>(i++ &lt; <span class="built_in">exp</span> - v_num.length() + <span class="number">1</span>) temp += <span class="string">'0'</span>;</span><br><span class="line">      ans = v_num + temp;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;<span class="comment">//指数比小数部分的有效数字小</span></span><br><span class="line">      ans = v_num;</span><br><span class="line">      ans.insert(ans.begin() + <span class="built_in">exp</span> + <span class="number">1</span>, <span class="string">'.'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;a href=&quot;/2018/11/07/index-of-PAT-Advanced-Level/&quot; title=&quot;PAT甲级目录&quot;&gt;PAT甲级目录&lt;/a&gt;  |  &lt;a href=&quot;/2018/11/07/index-of-PAT-Basic-Level/&quot; title=&quot;PAT乙级目录&quot;&gt;PAT乙级目录&lt;/a&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;原题地址：&lt;a href=&quot;https://pintia.cn/problem-sets/994805342720868352/problems/994805395707510784&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;A1073 Scientific Notation&lt;/a&gt;&lt;br&gt;中文版：&lt;a href=&quot;https://pintia.cn/problem-sets/994805260223102976/problems/994805297229447168&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;B1024 科学计数法&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="PAT题解" scheme="http://lulalap.com/categories/PAT%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="PAT" scheme="http://lulalap.com/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>PAT A1070 Mooncake(C++)</title>
    <link href="http://lulalap.com/2018/11/28/PAT-A1070-cpp/"/>
    <id>http://lulalap.com/2018/11/28/PAT-A1070-cpp/</id>
    <published>2018-11-28T15:02:41.000Z</published>
    <updated>2018-11-28T15:01:19.485Z</updated>
    
    <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>原题地址：<a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805399578853376" target="_blank" rel="noopener">A1070 Mooncake</a><br>中文版：<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805301562163200" target="_blank" rel="noopener">B1020 月饼</a></p><a id="more"></a><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>贪心算法，按照单价排序，优先售卖单价最高的月饼，卖完了再换下一种。</p><h2 id="易错点："><a href="#易错点：" class="headerlink" title="易错点："></a>易错点：</h2><ul><li>价格/库存都有可能不是整数</li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>sort(S, S + n, cmp);</code><ul><li>排序函数，实现 [first, last) 范围内的排序，可以自定义排序策略 cmp 函数</li><li>不带 cmp 参数的 sort 函数实现从小到大排序</li><li>所需头文件： <strong>algorithm</strong></li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1010</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Mooncake</span>&#123;</span></span><br><span class="line">  <span class="keyword">double</span> total_price, storage, ave_price;</span><br><span class="line">&#125;M[maxn];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(Mooncake a, Mooncake b)</span></span>&#123; <span class="keyword">return</span> a.ave_price &gt; b.ave_price; &#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> N;</span><br><span class="line">  <span class="keyword">double</span> bonus = <span class="number">0.0</span>, need, price[maxn], storage[maxn];</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d %lf"</span>, &amp;N, &amp;need);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++) <span class="built_in">scanf</span>(<span class="string">"%lf"</span>, &amp;M[i].storage);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++) &#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lf"</span>, &amp;M[i].total_price);</span><br><span class="line">    M[i].ave_price = <span class="number">1.0</span> * M[i].total_price / M[i].storage;</span><br><span class="line">  &#125;</span><br><span class="line">  sort(M, M + N, cmp);</span><br><span class="line">  <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span>(need &gt; <span class="number">0</span> &amp;&amp; cnt &lt; N)&#123;</span><br><span class="line">    <span class="keyword">int</span> t = need &gt; M[cnt].storage ? M[cnt].storage : need;</span><br><span class="line">    bonus += M[cnt++].ave_price * t;</span><br><span class="line">    need -= t;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%.2f\n"</span>, bonus);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;a href=&quot;/2018/11/07/index-of-PAT-Advanced-Level/&quot; title=&quot;PAT甲级目录&quot;&gt;PAT甲级目录&lt;/a&gt;  |  &lt;a href=&quot;/2018/11/07/index-of-PAT-Basic-Level/&quot; title=&quot;PAT乙级目录&quot;&gt;PAT乙级目录&lt;/a&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;原题地址：&lt;a href=&quot;https://pintia.cn/problem-sets/994805342720868352/problems/994805399578853376&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;A1070 Mooncake&lt;/a&gt;&lt;br&gt;中文版：&lt;a href=&quot;https://pintia.cn/problem-sets/994805260223102976/problems/994805301562163200&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;B1020 月饼&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="PAT题解" scheme="http://lulalap.com/categories/PAT%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="PAT" scheme="http://lulalap.com/tags/PAT/"/>
    
  </entry>
  
</feed>
