<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>未知的世界</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://lulalap.com/"/>
  <updated>2019-01-01T07:36:32.639Z</updated>
  <id>http://lulalap.com/</id>
  
  <author>
    <name>Philo</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello 2019</title>
    <link href="http://lulalap.com/2019/01/01/hello-2019/"/>
    <id>http://lulalap.com/2019/01/01/hello-2019/</id>
    <published>2019-01-01T03:49:23.000Z</published>
    <updated>2019-01-01T07:36:32.639Z</updated>
    
    <content type="html"><![CDATA[<p>在微博上看到有人写出充满想象力的很可爱的诗句，觉得也太棒了吧，原来诗也可以这样写，想学！</p><p>在推特上看到一名日本的年轻画家的画作，觉得画面也好情感表达也好想象力也好，都太精彩了吧，我也想尝试，将自己脑海里的画面表达出来！</p><a id="more"></a><p>前两天看星际迷航，知道了克林贡语，是制作组特意为了剧里的外星人创造的语言，甚至提供了该剧的克林贡语字幕。而且克林贡字典已经卖出超过 25 万本，Google 搜索引擎还有克林贡语的版本，多邻国甚至提供了该语种的课程。心想，能够把科幻周边发展到这份上，也太酷了吧！想学！</p><p>这两天看 My Brilliant Friend ，被 Lila 的气质吸引，感叹她们之间微妙的友谊，还觉得意大利语怎么这么好听，想学！</p><p>诸如此类还有很多，这就是我的日常，每隔几个月就会打开一个新世界的大门。</p><p>即便绝大多数时间我都是独自呆着，但是我完全不会感觉到所谓无聊和寂寞，因为有趣的事物是如此之多。我会对一切我未知的事物产生好奇，想要去尝试，去了解，想去学习一切我认为很酷的事情。</p><p>当然，我对于“酷”的定义与常人不太一样，我认为只要是我觉得有趣的就是酷的。比如我觉得看很多书的人很酷，我觉得写诗的人很酷，能画出好看的画的人很酷，能拍出好看照片的人很酷，能拍出好看的电影和电视剧的人很酷，能写出很多优秀软件的人很酷，能说出新颖观点的人很酷，愿意自由表达自己想法的人很酷，愿意挑战权威的人很酷。也许其他人不一定这么想，但我觉得自己也很酷。</p><p>刚进大学的时候我也是充满热情，后来在环境的潜移默化中，老师的照本宣科中，杂七杂八的毫无意义的管理条例下，热情逐渐丧失殆尽。</p><p> <strong>我可以毫不负责任地说，中国普通大学就是扼杀学生好奇心和学习热情的地方，那不是教育，不过是换一个地方继续管理。</strong> 在我看到所谓中国顶尖高校面对类似年初的沈阳事件后的做派，看到北大对于那些敢于站出来为工人维权的北大学子的打压，取缔马会，就觉得，呵，所谓名校也不过如此，同样乌烟瘴气。当最应当倡导自由和正义的大学校园中不允许出现自由的时候，我就已经对这类学校非常失望了。</p><p>毕业之后的这几个月，有充足的时间面对自己之后，我又逐渐找回了自我，找回了那份原本属于自己的好奇心，那份对于未知事物的热情，探索的欲望，尝试的动力。我想去看更大的世界，想表达自我。</p><p>我时不时会写点什么，80% 是为了表达， 20% 是为了交流。不是为了标新立异特立独行，只是有时候一些想法若是不记录下来，就会一直萦绕在脑海中，一天两天，一周两周，久久不能散去。想交流，又害怕交流，害怕自己不知道如何回应。</p><p>我认为表达自我不一定要拘泥于某种形式，有时候我用文字，有时候是绘画，还有摄影，也尝试写诗，以及写程序，未来也可能去拍一些几分钟的视频，只是想用最合适的方式、更能传达内心的想法的方式去表达。不一定要被多少人看到，但还是至少会希望有那么几个观众。</p><p>我从小写作文就拿不到高分，也没学过画画，刚开始折腾摄影，但是我一点也不害怕去尝试，不害怕被笑话，因为我的目的更多地是在于表达，而不是表现。说实话，我这个只要不讲话就没有人会注意到我的人，存在感极低的人，能被看到就很难得了。也正因为存在感低，没有初衷的才华和外貌，也没有一大堆朋友推不掉的聚会，没有多余的关注，我获得了比其他人更大的自由，能够自由地行动和思考。</p><p>我自己购买 VPS 搭建 VPN ，这样我就能看到一个更大更精彩的世界。我看教程学习搭建博客，给博客添加小功能并搭建图床，这样我就能随心所欲地书写，不用考虑敏感词不需要担心被删贴被封号。我学习数据科学，机器学习，准备当数据方向的程序员，计算机是万能工具，有了它我就能做到很多原来不能做的事。</p><p>我想知道世界是如何运转的，为什么我们看到的世界是这个样子，想知道外星人到底存不存在，想知道马斯克是不是真的会移民去火星；想知道不同的文化是如何形成的，不同的制度是怎样演变的，贸易到底在国家之间扮演着怎样的角色，为什么会有战争，黑市到底是怎样形成的，为什么大多数历史时期女性地位都处于弱势常常被压迫；想知道人类为什么有喜怒哀乐，性格到底是天生因素比较多还是后天影响比较多，基因到底有哪些奥妙，为什么有婚姻以及婚姻制度是否合理，为什么有如此多的性倾向，福柯的书里到底说了些什么……</p><p>因为好奇，因为想知道，这些是我活下去的动力，所以我想尽量活得久一点，知道的就能多一点。</p><p>我对社会很绝望，每天看那些社会新闻，除了难过和愤怒我不知道自己还能做什么。为什么还有如此多的人在受不合理的压迫，为什么他们还没有等到属于他们的正义降临，为什么人性可以如此邪恶，为什么他们可以喝人血可以喝得理所应当，为什么那些自己的血正在被人喝着的人还要咒骂那些不想喝血并且呼吁大家不要喝的人，为什么被统治者被训练成为了动不动就要站在统治者角度思考问题的人。我很难过，我很愤怒，我还想知道这些问题的答案。</p><p>人类就是矛盾的集合体。我对社会很绝望，但仍然可以对生活对世界充满热情，这是我在这个令人绝望的环境下让自己的灵魂不死去的途径。</p><p>网络是我的双眼，亦是我的双腿，他能带我去到我暂时不能去到之处，能让我看到在各个角落闪闪发光的人，能让我领略不同文化并感受不同观点间的碰撞。</p><p>GoodBye 2018，Hello 2019，新的一年我也希望能继续按照自己喜欢的方式去生活。</p><blockquote class="blockquote-center"><p>我们只对未知的事物产生畏惧，知道越多，畏惧越少。   by Lila</p></blockquote><p>相关阅读:<a href="/2018/11/05/I-Missed-A-Important-Test/" title="我居然错过了考研正式报名">我居然错过了考研正式报名</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在微博上看到有人写出充满想象力的很可爱的诗句，觉得也太棒了吧，原来诗也可以这样写，想学！&lt;/p&gt;
&lt;p&gt;在推特上看到一名日本的年轻画家的画作，觉得画面也好情感表达也好想象力也好，都太精彩了吧，我也想尝试，将自己脑海里的画面表达出来！&lt;/p&gt;
    
    </summary>
    
      <category term="日常闲聊" scheme="http://lulalap.com/categories/%E6%97%A5%E5%B8%B8%E9%97%B2%E8%81%8A/"/>
    
    
      <category term="闲聊" scheme="http://lulalap.com/tags/%E9%97%B2%E8%81%8A/"/>
    
  </entry>
  
  <entry>
    <title>PAT A1150 Travelling Salesman Problem(C++)</title>
    <link href="http://lulalap.com/2018/12/04/PAT-A1150-cpp/"/>
    <id>http://lulalap.com/2018/12/04/PAT-A1150-cpp/</id>
    <published>2018-12-03T18:58:40.000Z</published>
    <updated>2018-12-03T19:24:58.570Z</updated>
    
    <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><a id="more"></a><p>原题地址：<a href="https://pintia.cn/problem-sets/994805342720868352/problems/1038430013544464384" target="_blank" rel="noopener">A1150 Travelling Salesman Problem</a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><ul><li>用一个二维数组存储两个城市间的距离，如不存在这样的边，则距离为 0.</li><li>遍历每条路径，判断是否存在这样的边，如果存在，累加距离，同时更新城市访问次数。如果不存在，则修改标记另 flag = -1，表示不构成一个 cycle 并且无法计算距离。</li><li>判断路径的首尾城市是否一致，不一致则不能构成 cycle，修改对应标记。</li><li>遍历访问数组，根据所有城市是否只访问一次，判断是否为 simple TS cycle ，修改对应标记。</li><li>更新最短路径距离以及对应路径序号。</li></ul><h2 id="易错点："><a href="#易错点：" class="headerlink" title="易错点："></a>易错点：</h2><ul><li>因为起点和终点是同一个城市，对应计数值会多 1，因此需要修正。</li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>vector&lt;int&gt; path(p);</code><ul><li>创建了一个指定长度为 p 的数组。</li><li>所需头文件：<strong>vector</strong></li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> N, M, K, G[<span class="number">202</span>][<span class="number">202</span>] = &#123;&#123;<span class="number">0</span>&#125;&#125;;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;N, &amp;M);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; M; i++)&#123;</span><br><span class="line">    <span class="keyword">int</span> c1, c2, d;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>, &amp;c1, &amp;c2, &amp;d);</span><br><span class="line">    G[c1][c2] = d;</span><br><span class="line">    G[c2][c1] = d;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;K);</span><br><span class="line">  <span class="keyword">int</span> min_id = <span class="number">-1</span>, min_dis = <span class="number">-1</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= K; i++)&#123;</span><br><span class="line">    <span class="keyword">int</span> p, vis[<span class="number">202</span>] = &#123;<span class="number">0</span>&#125;, total = <span class="number">0</span>, flag = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;p);</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; path(p);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; p; j++)&#123;</span><br><span class="line">      <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;path[j]);</span><br><span class="line">      vis[path[j]]++;</span><br><span class="line">      <span class="keyword">if</span>(j != <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(G[path[j]][path[j<span class="number">-1</span>]] == <span class="number">0</span>) flag = <span class="number">-1</span>;<span class="comment">// not a cycle</span></span><br><span class="line">        <span class="keyword">else</span> total += G[path[j]][path[j<span class="number">-1</span>]];</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span>(j == p<span class="number">-1</span> &amp;&amp; flag &gt; <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(path[j] != path[<span class="number">0</span>]) flag = <span class="number">-2</span>;<span class="comment">// not a cycle</span></span><br><span class="line">        <span class="keyword">else</span> vis[path[j]]--;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; flag &gt; <span class="number">0</span> &amp;&amp; j &lt;= N; j++)&#123;</span><br><span class="line">      <span class="keyword">if</span>(vis[j] == <span class="number">0</span>) flag = <span class="number">-2</span>;<span class="comment">// not TS cycle</span></span><br><span class="line">      <span class="keyword">if</span>(vis[j] &gt; <span class="number">1</span>) flag = <span class="number">2</span>; <span class="comment">// TS cycle</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Path %d: "</span>, i);</span><br><span class="line">    <span class="keyword">if</span>(flag == <span class="number">1</span>) <span class="built_in">printf</span>(<span class="string">"%d (TS simple cycle)\n"</span>, total);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(flag == <span class="number">2</span>) <span class="built_in">printf</span>(<span class="string">"%d (TS cycle)\n"</span>, total);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(flag == <span class="number">-2</span>) <span class="built_in">printf</span>(<span class="string">"%d (Not a TS cycle)\n"</span>, total);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(flag == <span class="number">-1</span>) <span class="built_in">printf</span>(<span class="string">"NA (Not a TS cycle)\n"</span>);</span><br><span class="line">    <span class="keyword">if</span>(min_dis == <span class="number">-1</span> || (flag &gt; <span class="number">0</span> &amp;&amp; min_dis &gt; total))&#123;</span><br><span class="line">      min_dis = total;</span><br><span class="line">      min_id = i;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"Shortest Dist(%d) = %d\n"</span>, min_id, min_dis);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;a href=&quot;/2018/11/07/index-of-PAT-Advanced-Level/&quot; title=&quot;PAT甲级目录&quot;&gt;PAT甲级目录&lt;/a&gt;  |  &lt;a href=&quot;/2018/11/07/index-of-PAT-Basic-Level/&quot; title=&quot;PAT乙级目录&quot;&gt;PAT乙级目录&lt;/a&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;
    
    </summary>
    
      <category term="PAT题解" scheme="http://lulalap.com/categories/PAT%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="PAT" scheme="http://lulalap.com/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>PAT A1149 Dangerous Goods Packaging(C++)</title>
    <link href="http://lulalap.com/2018/12/03/PAT-A1149-cpp/"/>
    <id>http://lulalap.com/2018/12/03/PAT-A1149-cpp/</id>
    <published>2018-12-03T10:47:41.000Z</published>
    <updated>2018-12-03T14:29:28.880Z</updated>
    
    <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>原题地址：<a href="https://pintia.cn/problem-sets/994805342720868352/problems/1038429908921778176" target="_blank" rel="noopener">A1149 Dangerous Goods Packaging</a><br>中文版：<a href="https://pintia.cn/problem-sets/994805260223102976/problems/1038429484026175488" target="_blank" rel="noopener">B1090 危险品装箱</a><br><a id="more"></a></p><h2 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h2><p>集装箱运输货物时，我们必须特别小心，不能把不相容的货物装在一只箱子里。比如氧化剂绝对不能跟易燃液体同箱，否则很容易造成爆炸。</p><p>本题给定一张不相容物品的清单，需要你检查每一张集装箱货品清单，判断它们是否能装在同一只箱子里。</p><h4 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h4><p>输入第一行给出两个正整数：$N(\le10^4)$ 是成对的不相容物品的对数；$M(\le100)$ 是集装箱货品清单的单数。</p><p>随后数据分两大块给出。第一块有 N 行，每行给出一对不相容的物品。第二块有 M 行，每行给出一箱货物的清单，格式如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">K G[1] G[2] ... G[K]</span><br></pre></td></tr></table></figure><p>其中 $K (\le1000)$ 是物品件数，G[i] 是物品的编号。简单起见，每件物品用一个 5 位数的编号代表。两个数字之间用空格分隔。</p><h4 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h4><p>对每箱货物清单，判断是否可以安全运输。如果没有不相容物品，则在一行中输出 <strong>Yes</strong>，否则输出 <strong>No</strong>。</p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>用可变二维数组保存不相容的物品清单。对于每一箱，遍历要放入该箱的货物，每个货物查找对应的不相容物品清单，并搜查箱子内现有物品。如果在箱子里找到了与该货物不相容的物品，则结束循环并输出信息；如果没找到，则该物品说明安全，将其加入箱子。</p><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>ans.insert(S[i])</code><ul><li>向集合中插入一个元素</li></ul></li><li>需要头文件 <strong>set</strong></li><li><code>ans.erase(it)</code><ul><li>删除集合中某元素，<code>it</code> 为迭代器</li></ul></li><li>需要头文件 <strong>set</strong></li><li><code>if(ans.find(c) == ans.end()){ }</code><ul><li><code>ans.find(id1)</code> 函数可用于查找序列中是否有某元素，如找到则返回元素迭代器，如未找到则返回 <code>ans.end()</code></li><li>包含该函数的容器：<strong>map</strong>, <strong>set</strong></li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">100000</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> N, M, x, y;</span><br><span class="line">  <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; G[maxn];</span><br><span class="line">  <span class="built_in">cin</span> &gt;&gt; N &gt;&gt; M;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; x &gt;&gt; y;</span><br><span class="line">    G[x].push_back(y);</span><br><span class="line">    G[y].push_back(x);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; M; i++)&#123;</span><br><span class="line">    <span class="keyword">int</span> k, id, valid = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt; s;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; k;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; k; j++)&#123;</span><br><span class="line">      <span class="built_in">cin</span> &gt;&gt; id;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> l = <span class="number">0</span>; valid == <span class="number">1</span> &amp;&amp; l &lt; G[id].size(); l++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(s.find(G[id][l]) != s.end()) valid = <span class="number">0</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      s.insert(id);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(valid == <span class="number">0</span>) <span class="built_in">cout</span> &lt;&lt; <span class="string">"No\n"</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; <span class="string">"Yes\n"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;a href=&quot;/2018/11/07/index-of-PAT-Advanced-Level/&quot; title=&quot;PAT甲级目录&quot;&gt;PAT甲级目录&lt;/a&gt;  |  &lt;a href=&quot;/2018/11/07/index-of-PAT-Basic-Level/&quot; title=&quot;PAT乙级目录&quot;&gt;PAT乙级目录&lt;/a&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;原题地址：&lt;a href=&quot;https://pintia.cn/problem-sets/994805342720868352/problems/1038429908921778176&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;A1149 Dangerous Goods Packaging&lt;/a&gt;&lt;br&gt;中文版：&lt;a href=&quot;https://pintia.cn/problem-sets/994805260223102976/problems/1038429484026175488&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;B1090 危险品装箱&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="PAT题解" scheme="http://lulalap.com/categories/PAT%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="PAT" scheme="http://lulalap.com/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>PAT A1148 Werewolf - Simple Version(C++)</title>
    <link href="http://lulalap.com/2018/12/03/PAT-A1148-cpp/"/>
    <id>http://lulalap.com/2018/12/03/PAT-A1148-cpp/</id>
    <published>2018-12-03T10:47:41.000Z</published>
    <updated>2018-12-03T13:36:12.698Z</updated>
    
    <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>原题地址：<a href="https://pintia.cn/problem-sets/994805342720868352/problems/1038429808099098624" target="_blank" rel="noopener">A1148 Werewolf - Simple Version</a><br>中文版：<a href="https://pintia.cn/problem-sets/994805260223102976/problems/1038429385296453632" target="_blank" rel="noopener">B1089 狼人杀-简单版</a><br><a id="more"></a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>暴力破解。</p><ul><li>每次假设其中两名玩家为狼人，并按照该假设设置所有人的身份。</li><li>然后判断每个人是否说谎，即他声称的玩家身份是否与其当前设定身份一致，如果不一致则说谎。并记录每个说谎的人的编号。</li><li>每人的话判断结束，如果只有两人说谎，且他们的身份为一名好人一名狼人，则输出结果并退出循环。否则调整假设继续遍历。</li><li>如果遍历结束还没有找到结果，则无解。</li></ul><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li>如何判断一个玩家是否说谎<ul><li>判断一个人是否说谎，即他声称的玩家身份是否与其当前设定身份一致，如果不一致则说谎。因为当前设定身份就是假定的真实情况，不一致说明他讲的与实际不符。</li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> n, s[<span class="number">105</span>];</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;s[i]);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt;= n; j++) &#123;</span><br><span class="line">      <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; ans, id(n + <span class="number">1</span>, <span class="number">1</span>);<span class="comment">// id 用于记录当前状态下所有人的身份</span></span><br><span class="line">      id[i] = id[j] = <span class="number">-1</span>;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">1</span>; k &lt;= n; k++) <span class="comment">// 记录说谎的人</span></span><br><span class="line">        <span class="keyword">if</span> (s[k] * id[<span class="built_in">abs</span>(s[k])] &lt; <span class="number">0</span>) ans.push_back(k);</span><br><span class="line">      <span class="keyword">if</span> (ans.size() == <span class="number">2</span> &amp;&amp; id[ans[<span class="number">0</span>]] + id[ans[<span class="number">1</span>]] == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>, i, j);<span class="comment">//只有两个人说谎且一个是狼人一个是好人</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"No Solution\n"</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;a href=&quot;/2018/11/07/index-of-PAT-Advanced-Level/&quot; title=&quot;PAT甲级目录&quot;&gt;PAT甲级目录&lt;/a&gt;  |  &lt;a href=&quot;/2018/11/07/index-of-PAT-Basic-Level/&quot; title=&quot;PAT乙级目录&quot;&gt;PAT乙级目录&lt;/a&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;原题地址：&lt;a href=&quot;https://pintia.cn/problem-sets/994805342720868352/problems/1038429808099098624&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;A1148 Werewolf - Simple Version&lt;/a&gt;&lt;br&gt;中文版：&lt;a href=&quot;https://pintia.cn/problem-sets/994805260223102976/problems/1038429385296453632&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;B1089 狼人杀-简单版&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="PAT题解" scheme="http://lulalap.com/categories/PAT%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="PAT" scheme="http://lulalap.com/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>PAT A1141 PAT Ranking of Institutions(C++)</title>
    <link href="http://lulalap.com/2018/12/03/PAT-A1141-cpp/"/>
    <id>http://lulalap.com/2018/12/03/PAT-A1141-cpp/</id>
    <published>2018-12-03T10:44:41.000Z</published>
    <updated>2018-12-03T10:51:18.171Z</updated>
    
    <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>原题地址：<a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805344222429184" target="_blank" rel="noopener">A1141 PAT Ranking of Institutions</a><br>中文版：<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805260353126400" target="_blank" rel="noopener">B1085 PAT单位排行</a><br><a id="more"></a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>利用 map 来获得学校编号，并根据对应学生成绩的标签，将成绩累加到学校分数中。再排序，输出结果。</p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li>输入的是否应先将学校名称统一转换为小写</li><li>排序前应先将学校总分转换为整型</li><li>排序按照总分降序、人数升序、学校名称升序</li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li>ctype 头文件包含一系列处理单个字符的函数:<ul><li><code>islower()</code><ul><li>判断字符是否为小写字母</li></ul></li><li><code>isupper()</code><ul><li>判断字符是否为大写字母</li></ul></li><li><code>y = tolower(x)</code><ul><li>将大写字母转换为小写字母</li></ul></li><li><code>y = toupper(x)</code><ul><li>将小写字母转换为大写字母</li></ul></li></ul></li><li><code>sort(S, S + n, cmp);</code><ul><li>排序函数，实现 [first, last) 范围内的排序，可以自定义排序策略 cmp 函数</li><li>不带 cmp 参数的 sort 函数实现从小到大排序</li><li>所需头文件： <strong>algorithm</strong></li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">School</span>&#123;</span></span><br><span class="line">  <span class="keyword">double</span> score = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">int</span> cnt = <span class="number">0</span>, sum;</span><br><span class="line">  <span class="built_in">string</span> name;</span><br><span class="line">&#125;S[<span class="number">100010</span>];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(School a, School b)</span></span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(a.sum != b.sum) <span class="keyword">return</span> a.sum &gt; b.sum;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(a.cnt != b.cnt) <span class="keyword">return</span> a.cnt &lt; b.cnt;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">return</span> a.name &lt; b.name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> n, t, score, cnt = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">char</span> tag;</span><br><span class="line">  <span class="built_in">string</span> sch;</span><br><span class="line">  <span class="built_in">map</span>&lt;<span class="built_in">string</span>, <span class="keyword">int</span>&gt; m;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; tag &gt;&gt; t &gt;&gt; score &gt;&gt; sch;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; sch.length(); j++)&#123;</span><br><span class="line">      <span class="keyword">if</span>(<span class="built_in">isupper</span>(sch[j])) sch[j] = <span class="built_in">tolower</span>(sch[j]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(m.find(sch) == m.end())&#123;</span><br><span class="line">      S[cnt].name = sch;</span><br><span class="line">      m[sch] = cnt++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(tag == <span class="string">'B'</span>) S[m[sch]].score += <span class="number">1.0</span> * score / <span class="number">1.5</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(tag == <span class="string">'A'</span>) S[m[sch]].score += <span class="number">1.0</span> * score;</span><br><span class="line">    <span class="keyword">else</span> S[m[sch]].score += <span class="number">1.5</span> * score;</span><br><span class="line">    S[m[sch]].cnt++;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; cnt; i++) S[i].sum = (<span class="keyword">int</span>)S[i].score;</span><br><span class="line">  sort(S, S + cnt, cmp);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, cnt);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>, r = <span class="number">0</span>; i &lt; cnt; i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(i &gt; <span class="number">0</span> &amp;&amp; S[i].sum != S[i<span class="number">-1</span>].sum) r = i;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; r + <span class="number">1</span> &lt;&lt; <span class="string">" "</span> + S[i].name;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">" %d %d\n"</span>, S[i].sum, S[i].cnt);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;a href=&quot;/2018/11/07/index-of-PAT-Advanced-Level/&quot; title=&quot;PAT甲级目录&quot;&gt;PAT甲级目录&lt;/a&gt;  |  &lt;a href=&quot;/2018/11/07/index-of-PAT-Basic-Level/&quot; title=&quot;PAT乙级目录&quot;&gt;PAT乙级目录&lt;/a&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;原题地址：&lt;a href=&quot;https://pintia.cn/problem-sets/994805342720868352/problems/994805344222429184&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;A1141 PAT Ranking of Institutions&lt;/a&gt;&lt;br&gt;中文版：&lt;a href=&quot;https://pintia.cn/problem-sets/994805260223102976/problems/994805260353126400&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;B1085 PAT单位排行&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="PAT题解" scheme="http://lulalap.com/categories/PAT%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="PAT" scheme="http://lulalap.com/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>PAT A1140 Look-and-say Sequence(C++)</title>
    <link href="http://lulalap.com/2018/12/03/PAT-A1140-cpp/"/>
    <id>http://lulalap.com/2018/12/03/PAT-A1140-cpp/</id>
    <published>2018-12-03T10:41:41.000Z</published>
    <updated>2018-12-03T10:49:34.159Z</updated>
    
    <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>原题地址：<a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805344490864640" target="_blank" rel="noopener">A1140 Look-and-say Sequence</a><br>中文版：<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805260583813120" target="_blank" rel="noopener">B1084 外观数列</a><br><a id="more"></a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>字符串处理，对字符计数。</p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li><code>temp += to_string(cnt);</code><ul><li>预防出现计数值大于一位数的情况</li></ul></li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>to_string();</code><ul><li>实现将一个数转换为字符串，这个数可以是整型或浮点型</li><li>需要的头文件：<strong>string</strong></li></ul></li><li><code>s.erase(ans.begin());</code><ul><li>删除字符串第一个字符</li><li>所需头文件： <strong>string</strong></li></ul></li><li><code>s.empty()</code><ul><li>判断一个字符串是否为空字符串</li><li>所需头文件： <strong>string</strong></li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="built_in">string</span> str;</span><br><span class="line">  <span class="keyword">int</span> n;</span><br><span class="line">  <span class="built_in">cin</span> &gt;&gt; str &gt;&gt; n;</span><br><span class="line">  <span class="keyword">while</span>(--n)&#123;</span><br><span class="line">    <span class="built_in">string</span> temp;</span><br><span class="line">    <span class="keyword">while</span>(!str.empty())&#123;</span><br><span class="line">      temp += str[<span class="number">0</span>];</span><br><span class="line">      <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">while</span>(!str.empty() &amp;&amp; str[<span class="number">0</span>] == temp.back())&#123;</span><br><span class="line">        str.erase(str.begin());</span><br><span class="line">        cnt++;</span><br><span class="line">      &#125;</span><br><span class="line">      temp += to_string(cnt);</span><br><span class="line">    &#125;</span><br><span class="line">    str = temp;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">cout</span> &lt;&lt; str &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;a href=&quot;/2018/11/07/index-of-PAT-Advanced-Level/&quot; title=&quot;PAT甲级目录&quot;&gt;PAT甲级目录&lt;/a&gt;  |  &lt;a href=&quot;/2018/11/07/index-of-PAT-Basic-Level/&quot; title=&quot;PAT乙级目录&quot;&gt;PAT乙级目录&lt;/a&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;原题地址：&lt;a href=&quot;https://pintia.cn/problem-sets/994805342720868352/problems/994805344490864640&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;A1140 Look-and-say Sequence&lt;/a&gt;&lt;br&gt;中文版：&lt;a href=&quot;https://pintia.cn/problem-sets/994805260223102976/problems/994805260583813120&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;B1084 外观数列&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="PAT题解" scheme="http://lulalap.com/categories/PAT%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="PAT" scheme="http://lulalap.com/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>PAT A1137 Final Grading(C++)</title>
    <link href="http://lulalap.com/2018/12/03/PAT-A1137-cpp/"/>
    <id>http://lulalap.com/2018/12/03/PAT-A1137-cpp/</id>
    <published>2018-12-03T10:40:41.000Z</published>
    <updated>2018-12-03T10:48:14.507Z</updated>
    
    <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>原题地址：<a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805345401028608" target="_blank" rel="noopener">A1137 Final Grading</a><br>中文版：<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805261493977088" target="_blank" rel="noopener">B1080 MOOC期终成绩</a><br><a id="more"></a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>可利用 map 将字符串型的学号转换为整型的序号，方便查找。输入全部成绩后，遍历每个学生同时计算最终成绩，然后将成绩合格的人加入结果数组，最后对结果数组进行排序。</p><p>对于将输出的合格的学生，如果某次考试成绩不存在，那只可能是期中考试。如果其他考试有缺考则不可能合格。所以只要将期中考成绩默认为 -1，最后可直接输出无需另外判断。</p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li>最终成绩要四舍五入</li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>if(nametoi.find(id) == nametoi.end()){ nametoi[id] = cnt++;}</code><ul><li>可利用 map 将字符串类型的 id 转换成整数序号，方便处理</li><li>需要的头文件：<strong>map</strong></li></ul></li><li><code>sort(S, S + n, cmp);</code><ul><li>排序函数，实现 [first, last) 范围内的排序，可以自定义排序策略 cmp 函数</li><li>不带 cmp 参数的 sort 函数实现从小到大排序</li><li>所需头文件： <strong>algorithm</strong></li></ul></li><li><code>vector&lt;int&gt; ans;</code><ul><li>实现变长数组，元素类型可任意指定<ul><li><code>ans.push_back(num[i])</code>往变长数组末尾中添加一个元素</li><li><code>ans.pop_back()</code>删除变长数组中最后一个元素</li></ul></li><li>需要的头文件：<strong>vector</strong></li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span>&#123;</span></span><br><span class="line">  <span class="built_in">string</span> name;</span><br><span class="line">  <span class="keyword">int</span> gp = <span class="number">0</span>, gm = <span class="number">-1</span>, gf = <span class="number">0</span>, g = <span class="number">0</span>;</span><br><span class="line">&#125;newstu;</span><br><span class="line"><span class="built_in">vector</span>&lt;Student&gt; stu, ans;</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="built_in">string</span>, <span class="keyword">int</span>&gt; nametoi;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(Student a, Student b)</span></span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(a.g == b.g) <span class="keyword">return</span> a.name &lt; b.name;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">return</span> a.g &gt; b.g;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> n1, n2, n3;</span><br><span class="line">  <span class="built_in">cin</span> &gt;&gt; n1 &gt;&gt; n2 &gt;&gt; n3;</span><br><span class="line">  <span class="built_in">string</span> id;</span><br><span class="line">  <span class="keyword">int</span> score, i, cnt = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; n1 + n2 + n3; i++)&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; id &gt;&gt; score;</span><br><span class="line">    <span class="keyword">if</span>(nametoi.find(id) == nametoi.end())&#123; <span class="comment">// 获取序号，并记录分数</span></span><br><span class="line">      newstu.name = id;</span><br><span class="line">      stu.push_back(newstu);</span><br><span class="line">      nametoi[id] = cnt++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(i &lt; n1) stu[nametoi[id]].gp += score;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(i &lt; n1 + n2) stu[nametoi[id]].gm = score;</span><br><span class="line">    <span class="keyword">else</span> stu[nametoi[id]].gf = score;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; cnt; i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(stu[i].gp &gt;= <span class="number">200</span>)&#123; <span class="comment">// 计算最终成绩，并保存合格的学生</span></span><br><span class="line">      stu[i].g = (stu[i].gm &gt; stu[i].gf) ? (<span class="keyword">int</span>)((stu[i].gm * <span class="number">4</span> + stu[i].gf * <span class="number">6</span> + <span class="number">5</span>)/<span class="number">10</span>) : stu[i].gf;</span><br><span class="line">      <span class="keyword">if</span>(stu[i].g &gt;= <span class="number">60</span>) ans.push_back(stu[i]);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  sort(ans.begin(), ans.begin() + ans.size(), cmp);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; ans.size(); i++)&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; ans[i].name;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">" %d %d %d %d\n"</span>, ans[i].gp, ans[i].gm, ans[i].gf, ans[i].g);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;a href=&quot;/2018/11/07/index-of-PAT-Advanced-Level/&quot; title=&quot;PAT甲级目录&quot;&gt;PAT甲级目录&lt;/a&gt;  |  &lt;a href=&quot;/2018/11/07/index-of-PAT-Basic-Level/&quot; title=&quot;PAT乙级目录&quot;&gt;PAT乙级目录&lt;/a&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;原题地址：&lt;a href=&quot;https://pintia.cn/problem-sets/994805342720868352/problems/994805345401028608&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;A1137 Final Grading&lt;/a&gt;&lt;br&gt;中文版：&lt;a href=&quot;https://pintia.cn/problem-sets/994805260223102976/problems/994805261493977088&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;B1080 MOOC期终成绩&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="PAT题解" scheme="http://lulalap.com/categories/PAT%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="PAT" scheme="http://lulalap.com/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>PAT A1136 A Delayed Palindrome(C++)</title>
    <link href="http://lulalap.com/2018/12/03/PAT-A1136-cpp/"/>
    <id>http://lulalap.com/2018/12/03/PAT-A1136-cpp/</id>
    <published>2018-12-03T10:39:41.000Z</published>
    <updated>2018-12-03T10:46:03.825Z</updated>
    
    <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>原题地址：<a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805345732378624" target="_blank" rel="noopener">A1136 A Delayed Palindrome</a><br>中文版：<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805261754023936" target="_blank" rel="noopener">B1079 延迟的回文数</a><br><a id="more"></a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>判断回文数可以用字符串逆转的方法。字符串逆转后和原字符串相同，则为回文数，否则不是。</p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li>初始给的 A 有可能为回文数，需要特判</li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>ans = ans + &quot;某字符串&quot;</code><ul><li>字符串拼接</li><li>需要的头文件：<strong>string</strong></li></ul></li><li><code>to_string()</code><ul><li>实现将一个数转换为字符串，这个数可以是整型或浮点型</li><li>需要的头文件：<strong>string</strong></li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="built_in">string</span> A;</span><br><span class="line">  <span class="built_in">cin</span> &gt;&gt; A;</span><br><span class="line">  <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span>(cnt &lt; <span class="number">10</span>)&#123;</span><br><span class="line">    <span class="built_in">string</span> B = A, C;</span><br><span class="line">    reverse(B.begin(), B.end());</span><br><span class="line">    <span class="keyword">if</span>(B == A)&#123;</span><br><span class="line">      <span class="built_in">cout</span> &lt;&lt; A &lt;&lt; <span class="string">" is a palindromic number."</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> r = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; A.length(); i++)&#123;</span><br><span class="line">      <span class="keyword">int</span> temp = r + (<span class="keyword">int</span>)(A[i] + B[i] - <span class="number">2</span> * <span class="string">'0'</span>);</span><br><span class="line">      C += to_string(temp % <span class="number">10</span>);</span><br><span class="line">      r = temp / <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(r != <span class="number">0</span>) C += to_string(r);</span><br><span class="line">    <span class="built_in">string</span> RC = C;</span><br><span class="line">    reverse(C.begin(), C.end());</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; A + <span class="string">" + "</span> + B + <span class="string">" = "</span> + C &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">if</span>(C == RC)&#123;</span><br><span class="line">      <span class="built_in">cout</span> &lt;&lt; C + <span class="string">" is a palindromic number."</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(cnt + <span class="number">1</span> == <span class="number">10</span>)&#123;</span><br><span class="line">      <span class="built_in">cout</span> &lt;&lt; <span class="string">"Not found in 10 iterations."</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    A = C;</span><br><span class="line">    cnt++;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;a href=&quot;/2018/11/07/index-of-PAT-Advanced-Level/&quot; title=&quot;PAT甲级目录&quot;&gt;PAT甲级目录&lt;/a&gt;  |  &lt;a href=&quot;/2018/11/07/index-of-PAT-Basic-Level/&quot; title=&quot;PAT乙级目录&quot;&gt;PAT乙级目录&lt;/a&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;原题地址：&lt;a href=&quot;https://pintia.cn/problem-sets/994805342720868352/problems/994805345732378624&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;A1136 A Delayed Palindrome&lt;/a&gt;&lt;br&gt;中文版：&lt;a href=&quot;https://pintia.cn/problem-sets/994805260223102976/problems/994805261754023936&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;B1079 延迟的回文数&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="PAT题解" scheme="http://lulalap.com/categories/PAT%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="PAT" scheme="http://lulalap.com/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>PAT A1133 Splitting A Linked List(C++)</title>
    <link href="http://lulalap.com/2018/12/03/PAT-A1133-cpp/"/>
    <id>http://lulalap.com/2018/12/03/PAT-A1133-cpp/</id>
    <published>2018-12-03T10:37:41.000Z</published>
    <updated>2018-12-03T10:41:47.794Z</updated>
    
    <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>原题地址：<a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805346776760320" target="_blank" rel="noopener">A1133 Splitting A Linked List</a><br>中文版：<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805262953594880" target="_blank" rel="noopener">B1075 链表元素分类</a><br><a id="more"></a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>将链表存放到数组中，遍历链表，将对应范围的值加入不同的可变数组中，最后合并数组，顺序输出。</p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li>最后一个结点的 next 地址应当输出 -1</li><li>地址的格式为五位数</li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>vector&lt;int&gt; ans;</code><ul><li>实现变长数组，元素类型可任意指定<ul><li><code>ans.push_back(num[i])</code>往变长数组末尾中添加一个元素</li><li><code>ans.pop_back()</code>删除变长数组中最后一个元素</li></ul></li><li>需要的头文件：<strong>vector</strong></li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><ul><li>方法一：利用数组存放链表</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> A[<span class="number">100010</span>], D[<span class="number">100010</span>], n, k, pos, now, next, temp;</span><br><span class="line">  <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; first, second, last;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>, &amp;pos, &amp;n, &amp;k);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>,&amp;now, &amp;temp, &amp;next);</span><br><span class="line">    A[now] = next;</span><br><span class="line">    D[now] = temp;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">while</span>(pos != <span class="number">-1</span>)&#123; <span class="comment">// 遍历链表</span></span><br><span class="line">    <span class="keyword">if</span>(D[pos] &lt; <span class="number">0</span>) first.push_back(pos);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(D[pos] &gt; k) last.push_back(pos);</span><br><span class="line">    <span class="keyword">else</span> second.push_back(pos);</span><br><span class="line">    pos = A[pos];</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; second.size(); i++) first.push_back(second[i]);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; last.size(); i++) first.push_back(last[i]);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; first.size(); i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(i == first.size() - <span class="number">1</span>) <span class="built_in">printf</span>(<span class="string">"%05d %d -1"</span>, first[i], D[first[i]]);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%05d %d %05d\n"</span>, first[i], D[first[i]], first[i + <span class="number">1</span>]);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>方法二：利用结构体数组存储链表<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>&#123;</span></span><br><span class="line">  <span class="keyword">int</span> address, data, next;</span><br><span class="line">&#125;LNode[<span class="number">100010</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; first, second, last;</span><br><span class="line">  <span class="keyword">int</span> now, n, k, t;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>, &amp;now, &amp;n, &amp;k);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t);</span><br><span class="line">    LNode[t].address = t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;LNode[t].data, &amp;LNode[t].next);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">while</span>(now != <span class="number">-1</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(LNode[now].data &lt; <span class="number">0</span>)first.push_back(now);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(LNode[now].data &gt; k) last.push_back(now);</span><br><span class="line">    <span class="keyword">else</span> second.push_back(now);</span><br><span class="line">    now = LNode[now].next;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; second.size(); i++) first.push_back(second[i]);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; last.size(); i++) first.push_back(last[i]);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; first.size(); i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(i == first.size() - <span class="number">1</span>) <span class="built_in">printf</span>(<span class="string">"%05d %d -1"</span>, first[i], LNode[first[i]].address);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%05d %d %05d\n"</span>, first[i], LNode[first[i]].address, first[i + <span class="number">1</span>]);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;a href=&quot;/2018/11/07/index-of-PAT-Advanced-Level/&quot; title=&quot;PAT甲级目录&quot;&gt;PAT甲级目录&lt;/a&gt;  |  &lt;a href=&quot;/2018/11/07/index-of-PAT-Basic-Level/&quot; title=&quot;PAT乙级目录&quot;&gt;PAT乙级目录&lt;/a&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;原题地址：&lt;a href=&quot;https://pintia.cn/problem-sets/994805342720868352/problems/994805346776760320&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;A1133 Splitting A Linked List&lt;/a&gt;&lt;br&gt;中文版：&lt;a href=&quot;https://pintia.cn/problem-sets/994805260223102976/problems/994805262953594880&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;B1075 链表元素分类&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="PAT题解" scheme="http://lulalap.com/categories/PAT%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="PAT" scheme="http://lulalap.com/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>PAT B1089 狼人杀-简单版(C++)</title>
    <link href="http://lulalap.com/2018/12/03/PAT-B1089-cpp/"/>
    <id>http://lulalap.com/2018/12/03/PAT-B1089-cpp/</id>
    <published>2018-12-03T10:34:54.000Z</published>
    <updated>2018-12-03T13:54:45.227Z</updated>
    
    <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><a id="more"></a><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/1038429385296453632" target="_blank" rel="noopener">B1089 狼人杀-简单版</a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>暴力破解。</p><ul><li>每次假设其中两名玩家为狼人，并按照该假设设置所有人的身份。</li><li>然后判断每个人是否说谎，即他声称的玩家身份是否与其当前设定身份一致，如果不一致则说谎。并记录每个说谎的人的编号。</li><li>每人的话判断结束，如果只有两人说谎，且他们的身份为一名好人一名狼人，则输出结果并退出循环。否则调整假设继续遍历。</li><li>如果遍历结束还没有找到结果，则无解。</li></ul><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li>如何判断一个玩家是否说谎<ul><li>判断一个人是否说谎，即他声称的玩家身份是否与其当前设定身份一致，如果不一致则说谎。因为当前设定身份就是假定的真实情况，不一致说明他讲的与实际不符。</li></ul></li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>vector&lt;int&gt; id(n + 1, 1);</code><ul><li>设置一个指定长度为 n + 1 且指定元素值为 1 的数组</li><li>所需头文件：<strong>vector</strong></li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> n, s[<span class="number">105</span>];</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;s[i]);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt;= n; j++) &#123;</span><br><span class="line">      <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; ans, id(n + <span class="number">1</span>, <span class="number">1</span>);<span class="comment">// id 用于记录当前状态下所有人的身份</span></span><br><span class="line">      id[i] = id[j] = <span class="number">-1</span>;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">1</span>; k &lt;= n; k++) <span class="comment">// 记录说谎的人</span></span><br><span class="line">        <span class="keyword">if</span> (s[k] * id[<span class="built_in">abs</span>(s[k])] &lt; <span class="number">0</span>) ans.push_back(k);</span><br><span class="line">      <span class="keyword">if</span> (ans.size() == <span class="number">2</span> &amp;&amp; id[ans[<span class="number">0</span>]] + id[ans[<span class="number">1</span>]] == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>, i, j);<span class="comment">//只有两个人说谎且一个是狼人一个是好人</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"No Solution\n"</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;a href=&quot;/2018/11/07/index-of-PAT-Advanced-Level/&quot; title=&quot;PAT甲级目录&quot;&gt;PAT甲级目录&lt;/a&gt;  |  &lt;a href=&quot;/2018/11/07/index-of-PAT-Basic-Level/&quot; title=&quot;PAT乙级目录&quot;&gt;PAT乙级目录&lt;/a&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;
    
    </summary>
    
      <category term="PAT题解" scheme="http://lulalap.com/categories/PAT%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="PAT" scheme="http://lulalap.com/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>PAT BB1088 三人行(C++)</title>
    <link href="http://lulalap.com/2018/12/03/PAT-B1088-cpp/"/>
    <id>http://lulalap.com/2018/12/03/PAT-B1088-cpp/</id>
    <published>2018-12-03T10:33:54.000Z</published>
    <updated>2018-12-03T12:47:09.120Z</updated>
    
    <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><a id="more"></a><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/1038429286185074688" target="_blank" rel="noopener">B1088 三人行</a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>利用两个循环，分别遍历两位数字，然后判断是否满足要求，如果满足则输出结果并退出循环。</p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li>不使用 double 存储的话，除法的时候因为类型不一致，转换容易出错</li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> M, X, Y;</span><br><span class="line">  <span class="keyword">double</span> A[<span class="number">3</span>];</span><br><span class="line">  <span class="built_in">cin</span> &gt;&gt; M &gt;&gt; X &gt;&gt; Y;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">9</span>; i &gt; <span class="number">0</span>; i--)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">9</span>; j &gt;= <span class="number">0</span>; j--)&#123;</span><br><span class="line">      A[<span class="number">0</span>] = i * <span class="number">10</span> + j;</span><br><span class="line">      A[<span class="number">1</span>] = i + j * <span class="number">10</span>;</span><br><span class="line">      A[<span class="number">2</span>] = <span class="number">1.0</span> * <span class="built_in">abs</span>(A[<span class="number">0</span>] - A[<span class="number">1</span>]) / X;</span><br><span class="line">      <span class="keyword">if</span>(A[<span class="number">1</span>] == A[<span class="number">2</span>] * Y)&#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; A[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; <span class="number">3</span>; k++)&#123;</span><br><span class="line">          <span class="keyword">if</span>(A[k] &gt; M) <span class="built_in">cout</span> &lt;&lt; <span class="string">" Cong"</span>;</span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span>(A[k] == M) <span class="built_in">cout</span> &lt;&lt; <span class="string">" Ping"</span>;</span><br><span class="line">          <span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; <span class="string">" Gai"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">cout</span> &lt;&lt; <span class="string">"No Solution"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;a href=&quot;/2018/11/07/index-of-PAT-Advanced-Level/&quot; title=&quot;PAT甲级目录&quot;&gt;PAT甲级目录&lt;/a&gt;  |  &lt;a href=&quot;/2018/11/07/index-of-PAT-Basic-Level/&quot; title=&quot;PAT乙级目录&quot;&gt;PAT乙级目录&lt;/a&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;
    
    </summary>
    
      <category term="PAT题解" scheme="http://lulalap.com/categories/PAT%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="PAT" scheme="http://lulalap.com/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>PAT B1085 PAT单位排行(C++)</title>
    <link href="http://lulalap.com/2018/12/02/PAT-B1085-cpp/"/>
    <id>http://lulalap.com/2018/12/02/PAT-B1085-cpp/</id>
    <published>2018-12-02T08:29:54.000Z</published>
    <updated>2018-12-03T07:54:16.595Z</updated>
    
    <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><a id="more"></a><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805260353126400" target="_blank" rel="noopener">B1085 PAT单位排行</a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>利用 map 来获得学校编号，并根据对应学生成绩的标签，将成绩累加到学校分数中。再排序，输出结果。</p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li>输入的是否应先将学校名称统一转换为小写</li><li>排序前应先将学校总分转换为整型</li><li>排序按照总分降序、人数升序、学校名称升序</li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li>ctype 头文件包含一系列处理单个字符的函数:<ul><li><code>islower()</code><ul><li>判断字符是否为小写字母</li></ul></li><li><code>isupper()</code><ul><li>判断字符是否为大写字母</li></ul></li><li><code>y = tolower(x)</code><ul><li>将大写字母转换为小写字母</li></ul></li><li><code>y = toupper(x)</code><ul><li>将小写字母转换为大写字母</li></ul></li></ul></li><li><code>sort(S, S + n, cmp);</code><ul><li>排序函数，实现 [first, last) 范围内的排序，可以自定义排序策略 cmp 函数</li><li>不带 cmp 参数的 sort 函数实现从小到大排序</li><li>所需头文件： <strong>algorithm</strong></li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">School</span>&#123;</span></span><br><span class="line">  <span class="keyword">double</span> score = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">int</span> cnt = <span class="number">0</span>, sum;</span><br><span class="line">  <span class="built_in">string</span> name;</span><br><span class="line">&#125;S[<span class="number">100010</span>];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(School a, School b)</span></span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(a.sum != b.sum) <span class="keyword">return</span> a.sum &gt; b.sum;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(a.cnt != b.cnt) <span class="keyword">return</span> a.cnt &lt; b.cnt;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">return</span> a.name &lt; b.name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> n, t, score, cnt = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">char</span> tag;</span><br><span class="line">  <span class="built_in">string</span> sch;</span><br><span class="line">  <span class="built_in">map</span>&lt;<span class="built_in">string</span>, <span class="keyword">int</span>&gt; m;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; tag &gt;&gt; t &gt;&gt; score &gt;&gt; sch;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; sch.length(); j++)&#123;</span><br><span class="line">      <span class="keyword">if</span>(<span class="built_in">isupper</span>(sch[j])) sch[j] = <span class="built_in">tolower</span>(sch[j]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(m.find(sch) == m.end())&#123;</span><br><span class="line">      S[cnt].name = sch;</span><br><span class="line">      m[sch] = cnt++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(tag == <span class="string">'B'</span>) S[m[sch]].score += <span class="number">1.0</span> * score / <span class="number">1.5</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(tag == <span class="string">'A'</span>) S[m[sch]].score += <span class="number">1.0</span> * score;</span><br><span class="line">    <span class="keyword">else</span> S[m[sch]].score += <span class="number">1.5</span> * score;</span><br><span class="line">    S[m[sch]].cnt++;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; cnt; i++) S[i].sum = (<span class="keyword">int</span>)S[i].score;</span><br><span class="line">  sort(S, S + cnt, cmp);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, cnt);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>, r = <span class="number">0</span>; i &lt; cnt; i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(i &gt; <span class="number">0</span> &amp;&amp; S[i].sum != S[i<span class="number">-1</span>].sum) r = i;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; r + <span class="number">1</span> &lt;&lt; <span class="string">" "</span> + S[i].name;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">" %d %d\n"</span>, S[i].sum, S[i].cnt);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;a href=&quot;/2018/11/07/index-of-PAT-Advanced-Level/&quot; title=&quot;PAT甲级目录&quot;&gt;PAT甲级目录&lt;/a&gt;  |  &lt;a href=&quot;/2018/11/07/index-of-PAT-Basic-Level/&quot; title=&quot;PAT乙级目录&quot;&gt;PAT乙级目录&lt;/a&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;
    
    </summary>
    
      <category term="PAT题解" scheme="http://lulalap.com/categories/PAT%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="PAT" scheme="http://lulalap.com/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>PAT B1084 外观数列(C++)</title>
    <link href="http://lulalap.com/2018/12/02/PAT-B1084-cpp/"/>
    <id>http://lulalap.com/2018/12/02/PAT-B1084-cpp/</id>
    <published>2018-12-02T08:27:54.000Z</published>
    <updated>2018-12-02T15:18:55.109Z</updated>
    
    <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><a id="more"></a><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805260583813120" target="_blank" rel="noopener">B1084 外观数列</a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>字符串处理，对字符计数。</p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li><code>temp += to_string(cnt);</code><ul><li>预防出现计数值大于一位数的情况</li></ul></li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>to_string();</code><ul><li>实现将一个数转换为字符串，这个数可以是整型或浮点型</li><li>需要的头文件：<strong>string</strong></li></ul></li><li><code>s.erase(ans.begin());</code><ul><li>删除字符串第一个字符</li><li>所需头文件： <strong>string</strong></li></ul></li><li><code>s.empty()</code><ul><li>判断一个字符串是否为空字符串</li><li>所需头文件： <strong>string</strong></li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="built_in">string</span> str;</span><br><span class="line">  <span class="keyword">int</span> n;</span><br><span class="line">  <span class="built_in">cin</span> &gt;&gt; str &gt;&gt; n;</span><br><span class="line">  <span class="keyword">while</span>(--n)&#123;</span><br><span class="line">    <span class="built_in">string</span> temp;</span><br><span class="line">    <span class="keyword">while</span>(!str.empty())&#123;</span><br><span class="line">      temp += str[<span class="number">0</span>];</span><br><span class="line">      <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">while</span>(!str.empty() &amp;&amp; str[<span class="number">0</span>] == temp.back())&#123;</span><br><span class="line">        str.erase(str.begin());</span><br><span class="line">        cnt++;</span><br><span class="line">      &#125;</span><br><span class="line">      temp += to_string(cnt);</span><br><span class="line">    &#125;</span><br><span class="line">    str = temp;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">cout</span> &lt;&lt; str &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;a href=&quot;/2018/11/07/index-of-PAT-Advanced-Level/&quot; title=&quot;PAT甲级目录&quot;&gt;PAT甲级目录&lt;/a&gt;  |  &lt;a href=&quot;/2018/11/07/index-of-PAT-Basic-Level/&quot; title=&quot;PAT乙级目录&quot;&gt;PAT乙级目录&lt;/a&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;
    
    </summary>
    
      <category term="PAT题解" scheme="http://lulalap.com/categories/PAT%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="PAT" scheme="http://lulalap.com/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>PAT B1083 是否存在相等的差(C++)</title>
    <link href="http://lulalap.com/2018/11/29/PAT-B1083-cpp/"/>
    <id>http://lulalap.com/2018/11/29/PAT-B1083-cpp/</id>
    <published>2018-11-29T08:27:54.000Z</published>
    <updated>2018-12-02T15:16:29.483Z</updated>
    
    <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><a id="more"></a><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805260780945408" target="_blank" rel="noopener">B1083 是否存在相等的差</a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>利用一个 hash 数组记录每个差出现的次数，最后倒序输出。</p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li>只有出现次数大于 1 的差才被输出</li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>map&lt;int, int&gt; m;</code><ul><li>用于映射，键和值可以是任意类型</li><li>直接使用 <code>m[&lt;键&gt;] = &lt;值&gt;</code> 即可向map中添加一组键值对</li><li>需要的头文件：<strong>map</strong></li></ul></li><li><code>for(auto it = m.begin(); it != m.end(); it++){}</code><ul><li>可用于遍历 map/vector/set 等容器， <code>auto</code> 实现自动匹配对应迭代器类型</li><li>如果不用 <code>auto it = m.begin()</code> 则要写成 <code>std::map&lt;char, int&gt;::iterator it = m.begin()</code></li><li><code>m.rbegin()</code> 和 <code>m.rend()</code> 可实现逆向遍历</li><li><code>map&lt;char,int&gt;</code> 在其他情况下可替换成对应元素的类型如 <code>vector&lt;int&gt;</code></li><li>包含该函数的容器： <strong>map / set / vector</strong></li></ul></li><li><code>it-&gt;first</code> 和 <code>it-&gt;second</code><ul><li><code>it-&gt;first</code> 为 map 中对应元素的关键字</li><li><code>it-&gt;second</code> 为 map 中对应关键字的值</li><li>所需头文件： <strong>map</strong></li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> N, x;</span><br><span class="line">  <span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; h;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;N);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; i++)&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;x);</span><br><span class="line">    h[<span class="built_in">abs</span>(x - i)]++;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">auto</span> it = h.rbegin(); it != h.rend(); it++)&#123;</span><br><span class="line">    <span class="keyword">if</span>((it-&gt;second) &gt; <span class="number">1</span>) <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>, it-&gt;first, it-&gt;second);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;a href=&quot;/2018/11/07/index-of-PAT-Advanced-Level/&quot; title=&quot;PAT甲级目录&quot;&gt;PAT甲级目录&lt;/a&gt;  |  &lt;a href=&quot;/2018/11/07/index-of-PAT-Basic-Level/&quot; title=&quot;PAT乙级目录&quot;&gt;PAT乙级目录&lt;/a&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;
    
    </summary>
    
      <category term="PAT题解" scheme="http://lulalap.com/categories/PAT%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="PAT" scheme="http://lulalap.com/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>PAT B1082 射击比赛(C++)</title>
    <link href="http://lulalap.com/2018/11/29/PAT-B1082-cpp/"/>
    <id>http://lulalap.com/2018/11/29/PAT-B1082-cpp/</id>
    <published>2018-11-29T08:22:54.000Z</published>
    <updated>2018-11-29T08:40:07.043Z</updated>
    
    <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><a id="more"></a><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805260990660608" target="_blank" rel="noopener">B1082 射击比赛</a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>在输入数据的同时更新当前“冠军/菜鸟”的射击距离和id，遍历结束答案就出来了。可以直接使用距离的平方作为长度，省去类型转换的麻烦。</p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li>输出的 id 为四位数字</li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> N, id_win, len_win = <span class="number">10000</span>, id_lose, len_lose = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;N);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)&#123;</span><br><span class="line">    <span class="keyword">int</span> id, x, y, len;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>, &amp;id, &amp;x, &amp;y);</span><br><span class="line">    len = x * x + y * y;</span><br><span class="line">    <span class="keyword">if</span>(len &gt; len_lose)&#123;</span><br><span class="line">      len_lose = len;</span><br><span class="line">      id_lose = id;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(len &lt; len_win)&#123;</span><br><span class="line">      len_win = len;</span><br><span class="line">      id_win = id;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%04d %04d\n"</span>, id_win, id_lose);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;a href=&quot;/2018/11/07/index-of-PAT-Advanced-Level/&quot; title=&quot;PAT甲级目录&quot;&gt;PAT甲级目录&lt;/a&gt;  |  &lt;a href=&quot;/2018/11/07/index-of-PAT-Basic-Level/&quot; title=&quot;PAT乙级目录&quot;&gt;PAT乙级目录&lt;/a&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;
    
    </summary>
    
      <category term="PAT题解" scheme="http://lulalap.com/categories/PAT%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="PAT" scheme="http://lulalap.com/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>PAT B1081 检查密码(C++)</title>
    <link href="http://lulalap.com/2018/11/29/PAT-B1081-cpp/"/>
    <id>http://lulalap.com/2018/11/29/PAT-B1081-cpp/</id>
    <published>2018-11-29T08:07:54.000Z</published>
    <updated>2018-11-29T08:23:04.140Z</updated>
    
    <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><a id="more"></a><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805261217153024" target="_blank" rel="noopener">B1081 检查密码</a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>字符串处理，可以用 ctype 头文件中的函数。</p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li>当密码太短不考虑是否合法</li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>s.erase(ans.begin());</code><ul><li>删除字符串第一个字符</li><li>所需头文件： <strong>string</strong></li></ul></li><li><p><code>s.empty()</code></p><ul><li>判断一个字符串是否为空字符串</li><li>所需头文件： <strong>string</strong></li></ul></li><li><p>ctype 头文件中包含的一系列处理单个字符的函数:</p><ul><li><code>isalnum()</code><ul><li>判断字符是否为字母或者数字</li></ul></li><li><code>isalpha()</code><ul><li>判断字符是否为字母</li></ul></li><li><code>isblank()</code><ul><li>判断字符是否为空格</li></ul></li><li><code>isdigit()</code><ul><li>判断字符是否为数字</li></ul></li><li><code>islower()</code><ul><li>判断字符是否为小写字母</li></ul></li><li><code>isupper()</code><ul><li>判断字符是否为大写字母</li></ul></li><li><code>y = tolower(x)</code><ul><li>将大写字母转换为小写字母</li></ul></li><li><code>y = toupper(x)</code><ul><li>将小写字母转换为大写字母</li></ul></li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> N;</span><br><span class="line">  <span class="built_in">string</span> str;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d\n"</span>, &amp;N);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)&#123;</span><br><span class="line">    <span class="keyword">int</span> len = <span class="number">0</span>, hasdigit = <span class="number">0</span>, hasalpha = <span class="number">0</span>, valid = <span class="number">1</span>;</span><br><span class="line">    getline(<span class="built_in">cin</span>, str);</span><br><span class="line">    <span class="keyword">if</span>(str.length() &lt; <span class="number">6</span>) <span class="built_in">cout</span> &lt;&lt; <span class="string">"Your password is tai duan le."</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">while</span>(!str.empty() &amp;&amp; valid)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="built_in">isalnum</span>(str[<span class="number">0</span>]) &amp;&amp; str[<span class="number">0</span>] != <span class="string">'.'</span>) valid = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">isdigit</span>(str[<span class="number">0</span>])) hasdigit = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">isalpha</span>(str[<span class="number">0</span>])) hasalpha = <span class="number">1</span>;</span><br><span class="line">        str.erase(str.begin());</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span>(!valid) <span class="built_in">cout</span> &lt;&lt; <span class="string">"Your password is tai luan le."</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span>(hasalpha == <span class="number">1</span> &amp;&amp; hasdigit == <span class="number">0</span>) <span class="built_in">cout</span> &lt;&lt; <span class="string">"Your password needs shu zi."</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span>(hasalpha == <span class="number">0</span> &amp;&amp; hasdigit == <span class="number">1</span>) <span class="built_in">cout</span> &lt;&lt; <span class="string">"Your password needs zi mu."</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">      <span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; <span class="string">"Your password is wan mei."</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;a href=&quot;/2018/11/07/index-of-PAT-Advanced-Level/&quot; title=&quot;PAT甲级目录&quot;&gt;PAT甲级目录&lt;/a&gt;  |  &lt;a href=&quot;/2018/11/07/index-of-PAT-Basic-Level/&quot; title=&quot;PAT乙级目录&quot;&gt;PAT乙级目录&lt;/a&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;
    
    </summary>
    
      <category term="PAT题解" scheme="http://lulalap.com/categories/PAT%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="PAT" scheme="http://lulalap.com/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>PAT A1125 Chain the Ropes(C++)</title>
    <link href="http://lulalap.com/2018/11/28/PAT-A1125-cpp/"/>
    <id>http://lulalap.com/2018/11/28/PAT-A1125-cpp/</id>
    <published>2018-11-28T15:35:41.000Z</published>
    <updated>2018-11-28T15:11:25.447Z</updated>
    
    <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>原题地址：<a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805350316752896" target="_blank" rel="noopener">A1125 Chain the Ropes</a><br>中文版：<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805264706813952" target="_blank" rel="noopener">B1070 结绳 </a><br><a id="more"></a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>每次都将两段绳子对折，再相连，会使得先连接上的绳子在最后占据的长度最短。所以要使得最终绳子最长，应该先连接长度最较短的，再连接长度较长的。</p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li>首先将绳子初始长度设置为第一段绳子，循环开始时直接连接第二段。<ul><li>若初始长度为 0，则第一段绳子将会多除以 2 .</li></ul></li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>sort(S, S + n, cmp);</code><ul><li>排序函数，实现 [first, last) 范围内的排序，可以自定义排序策略 cmp 函数</li><li>不带 cmp 参数的 sort 函数实现从小到大排序</li><li>所需头文件： <strong>algorithm</strong></li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> N, r[<span class="number">10010</span>];</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;N);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)&#123; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;r[i]); &#125;</span><br><span class="line">  sort(r, r + N);</span><br><span class="line">  <span class="keyword">double</span> ans = r[<span class="number">0</span>];</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; N; i++) ans = (ans + r[i]) / <span class="number">2</span>;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, (<span class="keyword">int</span>)ans);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;a href=&quot;/2018/11/07/index-of-PAT-Advanced-Level/&quot; title=&quot;PAT甲级目录&quot;&gt;PAT甲级目录&lt;/a&gt;  |  &lt;a href=&quot;/2018/11/07/index-of-PAT-Basic-Level/&quot; title=&quot;PAT乙级目录&quot;&gt;PAT乙级目录&lt;/a&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;原题地址：&lt;a href=&quot;https://pintia.cn/problem-sets/994805342720868352/problems/994805350316752896&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;A1125 Chain the Ropes&lt;/a&gt;&lt;br&gt;中文版：&lt;a href=&quot;https://pintia.cn/problem-sets/994805260223102976/problems/994805264706813952&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;B1070 结绳 &lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="PAT题解" scheme="http://lulalap.com/categories/PAT%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="PAT" scheme="http://lulalap.com/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>PAT A1124 Raffle for Weibo Followers(C++)</title>
    <link href="http://lulalap.com/2018/11/28/PAT-A1124-cpp/"/>
    <id>http://lulalap.com/2018/11/28/PAT-A1124-cpp/</id>
    <published>2018-11-28T15:33:41.000Z</published>
    <updated>2018-11-28T15:10:16.947Z</updated>
    
    <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>原题地址：<a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805350803292160" target="_blank" rel="noopener">A1124 Raffle for Weibo Followers</a><br>中文版：<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805265159798784" target="_blank" rel="noopener">B1069 微博转发抽奖 </a><br><a id="more"></a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>模拟题。用 map 来记录中奖账号，并设置一个锚点指示下一个中奖编号，当遍历到该中奖编号。若该账户已经中过奖，则跳过此账号且锚点后移一位；若未中奖，则输出中奖信息，且将该账号录入 map 数组。</p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li>遇到中过奖的账号要跳过，顺次取其下一位。</li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>map&lt;string, int&gt; h;</code><ul><li>用于映射，键和值可以是任意类型</li><li>直接使用 <code>m[&lt;键&gt;] = &lt;值&gt;</code> 即可向map中添加一组键值对</li><li>需要的头文件：<strong>map</strong></li></ul></li><li><code>if(h.find(id1) == h.end()){ }</code><ul><li><code>h.find(x)</code> 函数可用于查找序列中是否有某元素，如找到则返回元素迭代器，如未找到则返回 <code>h.end()</code></li><li>包含该函数的容器：<strong>map</strong>, <strong>set</strong></li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> m, n, s, flag = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">string</span> temp;</span><br><span class="line">  <span class="built_in">map</span>&lt;<span class="built_in">string</span>, <span class="keyword">int</span>&gt; h;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>, &amp;m, &amp;n, &amp;s);</span><br><span class="line">  <span class="keyword">int</span> next = s; <span class="comment">// 锚点，用于指示下一个中奖编号</span></span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++)&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; temp;</span><br><span class="line">    <span class="keyword">if</span>(i == next)&#123;</span><br><span class="line">      <span class="keyword">if</span>(h.find(temp) == h.end())&#123;<span class="comment">// 没过中奖，则中将</span></span><br><span class="line">        h[temp] = <span class="number">1</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; temp &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        next += n;</span><br><span class="line">        flag = <span class="number">1</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> next++; <span class="comment">// 已经中过奖，编号后移一位</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(flag == <span class="number">0</span>) <span class="built_in">cout</span> &lt;&lt; <span class="string">"Keep going..."</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;a href=&quot;/2018/11/07/index-of-PAT-Advanced-Level/&quot; title=&quot;PAT甲级目录&quot;&gt;PAT甲级目录&lt;/a&gt;  |  &lt;a href=&quot;/2018/11/07/index-of-PAT-Basic-Level/&quot; title=&quot;PAT乙级目录&quot;&gt;PAT乙级目录&lt;/a&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;原题地址：&lt;a href=&quot;https://pintia.cn/problem-sets/994805342720868352/problems/994805350803292160&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;A1124 Raffle for Weibo Followers&lt;/a&gt;&lt;br&gt;中文版：&lt;a href=&quot;https://pintia.cn/problem-sets/994805260223102976/problems/994805265159798784&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;B1069 微博转发抽奖 &lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="PAT题解" scheme="http://lulalap.com/categories/PAT%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="PAT" scheme="http://lulalap.com/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>PAT A1121 Damn Single(C++)</title>
    <link href="http://lulalap.com/2018/11/28/PAT-A1121-cpp/"/>
    <id>http://lulalap.com/2018/11/28/PAT-A1121-cpp/</id>
    <published>2018-11-28T15:31:41.000Z</published>
    <updated>2018-11-28T15:07:58.320Z</updated>
    
    <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>原题地址：<a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805352359378944" target="_blank" rel="noopener">A1121 Damn Single</a><br>中文版：<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805266942377984" target="_blank" rel="noopener">B1065 单身狗 </a></p><a id="more"></a><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>方法一：利用 map 记录每对对象的编号。然后遍历全部客人，如果其没有对象或者其对象没来，则加入落单名单。</p><p>方法二：假设所有客人都落单。在遍历客人的时候，如果在落单名单中找到了自己对象，则移除其对象编号，否则当作落单加入名单。遍历结束时，名单中的人要么没有对象，要么对象没来，也就正好落单了。</p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li>客人编号有 00000 ，所以不能通过 map 对应的值是否大于零来判断其是否单身</li><li>输出的编号应为格式化为五位数 <code>printf(&quot;%05d&quot;, *it);</code></li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>map&lt;int, int&gt; m;</code><ul><li>用于映射，键和值可以是任意类型</li><li>直接使用 <code>m[&lt;键&gt;] = &lt;值&gt;</code> 即可向map中添加一组键值对</li><li>需要的头文件：<strong>map</strong></li></ul></li><li><code>for(auto it = m.begin(); it != m.end(); it++){}</code><ul><li>可用于遍历 map/vector/set 等容器， <code>auto</code> 实现自动匹配对应迭代器类型</li><li>如果不用 <code>auto it = m.begin()</code> 则要写成 <code>std::map&lt;char, int&gt;::iterator it = m.begin()</code></li><li><code>map&lt;char,int&gt;</code> 在其他情况下可替换成对应元素的类型如 <code>vector&lt;int&gt;</code></li><li>所需头文件： <strong>map / set / vector</strong></li></ul></li><li><code>it-&gt;first</code> 和 <code>it-&gt;second</code><ul><li><code>it-&gt;first</code> 为 map 中对应元素的关键字</li><li><code>it-&gt;second</code> 为 map 中对应关键字的值</li><li>所需头文件： <strong>map</strong></li></ul></li><li><code>if(couple.find(id1) == couple.end()){ }</code><ul><li><code>couple.find(id1)</code> 函数可用于查找序列中是否有某元素，如找到则返回元素迭代器，如未找到则返回 <code>couple.end()</code></li><li>包含该函数的容器：<strong>map</strong>, <strong>set</strong></li></ul></li><li><code>ans.insert(S[i])</code><ul><li>向容器中插入一个元素</li></ul></li><li>所需头文件： <strong>set</strong></li><li><code>ans.erase(it)</code><ul><li>删除集合中某元素，<code>it</code> 为迭代器</li></ul></li><li>需要头文件： <strong>set</strong></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><ul><li>方法一</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> n, m, id1, id2;</span><br><span class="line">  <span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; couple, present;</span><br><span class="line">  <span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt; ans;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;id1, &amp;id2);</span><br><span class="line">    couple[id1] = id2;</span><br><span class="line">    couple[id2] = id1;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;m);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++)&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;id1);</span><br><span class="line">    present[id1] = <span class="number">1</span>; <span class="comment">// 记录每个出现的客人编号</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">auto</span> it = present.begin(); it != present.end(); it++)&#123;</span><br><span class="line">    id1 = it-&gt;first;</span><br><span class="line">    id2 = couple[id1];</span><br><span class="line">    <span class="keyword">if</span>(couple.find(id1) == couple.end() || !present[id2]) ans.insert(id1);<span class="comment">//客人没有对象或者对象没来就加入清单</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans.size());</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">auto</span> it = ans.begin(); it != ans.end(); it++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(it != ans.begin()) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%05d"</span>, *it);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>方法二：<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> n, m, id1, id2;</span><br><span class="line">  <span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; couple;</span><br><span class="line">  <span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt; ans;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;id1, &amp;id2);</span><br><span class="line">    couple[id1] = id2;</span><br><span class="line">    couple[id2] = id1;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;m);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++)&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;id1);</span><br><span class="line">    id2 = couple[id1];</span><br><span class="line">    <span class="comment">// 新来的客人在此派对中找到了对象，将对方名字从名单中抹去，否则将其加入名单</span></span><br><span class="line">    <span class="keyword">if</span>(!ans.empty() &amp;&amp; ans.find(id2) != ans.end()) ans.erase(ans.find(id2));</span><br><span class="line">    <span class="keyword">else</span> ans.insert(id1);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans.size());</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">auto</span> it = ans.begin(); it != ans.end(); it++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(it != ans.begin()) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%05d"</span>, *it);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;a href=&quot;/2018/11/07/index-of-PAT-Advanced-Level/&quot; title=&quot;PAT甲级目录&quot;&gt;PAT甲级目录&lt;/a&gt;  |  &lt;a href=&quot;/2018/11/07/index-of-PAT-Basic-Level/&quot; title=&quot;PAT乙级目录&quot;&gt;PAT乙级目录&lt;/a&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;原题地址：&lt;a href=&quot;https://pintia.cn/problem-sets/994805342720868352/problems/994805352359378944&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;A1121 Damn Single&lt;/a&gt;&lt;br&gt;中文版：&lt;a href=&quot;https://pintia.cn/problem-sets/994805260223102976/problems/994805266942377984&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;B1065 单身狗 &lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="PAT题解" scheme="http://lulalap.com/categories/PAT%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="PAT" scheme="http://lulalap.com/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>PAT A1120 Friend Numbers(C++)</title>
    <link href="http://lulalap.com/2018/11/28/PAT-A1120-cpp/"/>
    <id>http://lulalap.com/2018/11/28/PAT-A1120-cpp/</id>
    <published>2018-11-28T15:30:41.000Z</published>
    <updated>2018-11-28T14:55:35.781Z</updated>
    
    <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>原题地址：<a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805352925609984" target="_blank" rel="noopener">A1120 Friend Numbers</a><br>中文版：<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805267416334336" target="_blank" rel="noopener">B1064 朋友数 </a></p><a id="more"></a><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>方法一：利用 map，每出现一个新的朋友证号就会在 map 中增加一个元素。最后遍历 map 输出即可得到有序结果序列。和方法二相比，主要优势在于节约了内存空间。</p><p>方法二：利用 hash 数组，记录每个数是否是朋友证号，如是设为 true，最后按顺序遍历数组，输出值为 true 的序号。</p><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>map&lt;int, int&gt; m;</code><ul><li>用于映射，键和值可以是任意类型</li><li>直接使用 <code>m[&lt;键&gt;] = &lt;值&gt;</code> 即可向map中添加一组键值对</li><li>需要的头文件：<strong>map</strong></li></ul></li><li><code>for(auto it = m.begin(); it != m.end(); it++){}</code><ul><li>可用于遍历 map/vector/set 等容器， <code>auto</code> 实现自动匹配对应迭代器类型</li><li>如果不用 <code>auto it = m.begin()</code> 则要写成 <code>std::map&lt;char, int&gt;::iterator it = m.begin()</code></li><li><code>map&lt;char,int&gt;</code> 在其他情况下可替换成对应元素的类型如 <code>vector&lt;int&gt;</code></li><li>所需头文件： <strong>map / set / vector</strong></li></ul></li><li><code>it-&gt;first</code> 和 <code>it-&gt;second</code><ul><li><code>it-&gt;first</code> 为 map 中对应元素的关键字</li><li><code>it-&gt;second</code> 为 map 中对应关键字的值</li><li>所需头文件： <strong>map</strong></li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><ul><li><p>方法一：利用 map</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> n, cnt = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">string</span> temp;</span><br><span class="line">  <span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; m;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; temp;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; temp.length(); j++) sum = sum + (<span class="keyword">int</span>)(temp[j] - <span class="string">'0'</span>);</span><br><span class="line">    m[sum]++;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, m.size());</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">auto</span> it = m.begin(); it != m.end(); it++, cnt++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(cnt != <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>, it-&gt;first);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>方法二：利用 hash 数组</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> n, num = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">bool</span> h[<span class="number">50</span>] = &#123;<span class="literal">false</span>&#125;;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>, temp, sum; i &lt; n; i++, sum = <span class="number">0</span>)&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;temp);</span><br><span class="line">    <span class="keyword">while</span>(temp!=<span class="number">0</span>)&#123;</span><br><span class="line">      sum = sum + temp % <span class="number">10</span>;</span><br><span class="line">      temp /= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(h[sum] == <span class="literal">false</span>)&#123;</span><br><span class="line">      num++;</span><br><span class="line">      h[sum] = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, num);</span><br><span class="line">  <span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; <span class="number">50</span>; i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(h[i]) &#123;</span><br><span class="line">      <span class="keyword">if</span>(flag != <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">"%d"</span>, i);</span><br><span class="line">      flag++;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;a href=&quot;/2018/11/07/index-of-PAT-Advanced-Level/&quot; title=&quot;PAT甲级目录&quot;&gt;PAT甲级目录&lt;/a&gt;  |  &lt;a href=&quot;/2018/11/07/index-of-PAT-Basic-Level/&quot; title=&quot;PAT乙级目录&quot;&gt;PAT乙级目录&lt;/a&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;原题地址：&lt;a href=&quot;https://pintia.cn/problem-sets/994805342720868352/problems/994805352925609984&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;A1120 Friend Numbers&lt;/a&gt;&lt;br&gt;中文版：&lt;a href=&quot;https://pintia.cn/problem-sets/994805260223102976/problems/994805267416334336&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;B1064 朋友数 &lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="PAT题解" scheme="http://lulalap.com/categories/PAT%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="PAT" scheme="http://lulalap.com/tags/PAT/"/>
    
  </entry>
  
</feed>
