<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>未知的世界</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://lulalap.com/"/>
  <updated>2020-01-01T14:12:26.154Z</updated>
  <id>http://lulalap.com/</id>
  
  <author>
    <name>Philo</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello 2020</title>
    <link href="http://lulalap.com/2020/01/01/hello-2020/"/>
    <id>http://lulalap.com/2020/01/01/hello-2020/</id>
    <published>2020-01-01T08:02:22.000Z</published>
    <updated>2020-01-01T14:12:26.154Z</updated>
    
    <content type="html"><![CDATA[<p>一年的结束听起来略显伤感，而新年的开始就给人一种充满希望和活力的感觉，所以我总将「Hello XXXX」作为年度总结的标题，这是该系列博客的第二篇。</p><p>很多人的一生中难免要逃离点什么，有人逃离父母家庭，有人逃离学校，有人逃离朋友……而我在过去的一年里主要在做一件事，那便是逃离时间。</p><a id="more"></a><h2 id="这一年我做了什么？"><a href="#这一年我做了什么？" class="headerlink" title="这一年我做了什么？"></a>这一年我做了什么？</h2><p>简而言之就是，什么也没做。</p><p>所谓逃离时间，说好听点叫做不愿随波逐流，说不好听点叫做不务正业，做一名社会闲散人士。不想遵从「毕业就该工作」这样的逻辑，我需要对自己的人生有掌控感，需要从工作中找到除了赚钱之外的其他意义，否则被时间的洪流强行推着往前走，只会燃烧我对生活的热情。</p><p>这一年我来到了杭州，开启了真正的独居生活，我拥有了大段的不被打扰的独处时光，有了面对自我的机会。</p><p>期间我有幸找到了一份远程兼职，虽说仍是入不敷出的状态（主要我的工作意愿不是很强烈），但这成为了我的一颗定心丸，让我即使没收入也能心安理得地潇洒度日。（真正没让我饿死的，还是支付宝和京东金条，笑。）</p><p>独居的日子像是在过退休生活，一切都变得非常慢。每天花好几个小时胡思乱想，看书写字画画散步，在推特上自言自语，花很多时间审视过往人生，偶尔和朋友聚会，约陌生人拍照。也感受着寒来暑往，每日的风云变幻。</p><p>在自我审视的过程中，我得到了一个非常重要的结论：我一直以为自己很缺爱，并且在很长一段时间内认为自己不值得被爱。但实际上不是这样，我能成长得这么好，这么乐观自信充满快乐，那一定是被爱滋养着长大的。我收获过来自家人、朋友、同学、老师的爱，还有很多陌生人的爱，虽然接触过的人不算很多，但是我遇到的他们总是友善又可爱。我自觉已经相当幸运，并时刻感激着这一切。</p><p>我感受到自己充满力量，</p><p>正如推友 @wjianjvn 的推文所述：所以人生最重要的任务就是重心整合过去的人生经验，在这些人生经验中找到那些来自父母和家人爱的证据，对那些来自他人的关心和帮助心存感激之情，这样的经历可以重新使你生活在联系和爱之中，让你重新获得自信和安全感，然后义无反顾的去探索人生的意义和不确定性。</p><p>我想，我可以迈向下一个阶段了。</p><h2 id="我想做什么？"><a href="#我想做什么？" class="headerlink" title="我想做什么？"></a>我想做什么？</h2><p>这一年来，我一直会时不时地问自己，我真正想要什么，我真正想做的事情是什么？至少在好几个月的时间里，我的答案都是：我不想工作（笑）。</p><p>我的终极目标是不工作，其次是自由职业，再次是远程工作，最后才是朝九晚五上班。我希望有一天靠不务正业也能养活自己。</p><p>其实这一年我还坚持做了一件事，就是每天发冷知识，除了这个月有点懈怠平均两天一条，之前一直是每日更新，从未中断，至今累计300多条。别人的冷知识账号需要投稿才能保持每日更新，而我一个人就能做到，因为对万事万物的好奇心就是我的日常。</p><p>我想做的，就是想一直去体验，去学习各种有用的没用的知识和技能，像这样一直保持无穷的好奇心，了解更多我身处的这个世界，学会爱更多的人，爱更多的事物，这也是Philo这个名字的含义。如果顺便能给其他人带来快乐和能量，那便是我最大的福气。</p><p>我还希望能帮助到别人，想让更多人爱上阅读，也想让他们体会到求知的乐趣；我想激发人们对未知事物的好奇心，帮助他们找到心中所爱，燃起对生活的热情；我想让他们知道，这个世界上有趣的事物还是有很多的呀。</p><h2 id="我可以做什么？"><a href="#我可以做什么？" class="headerlink" title="我可以做什么？"></a>我可以做什么？</h2><p>我很清楚自己不想当一枚螺丝钉，我需要从工作中找到乐趣和价值感，我想成为一名内容创作者。</p><p>目标过于空泛是没有意义的。现阶段对我而言，切实可行的目标便是成为一名泛科普视频博主，用动画的形式科普人文、社科、自然科学等一切知识。这即符合了我爱给人科普的兴趣，也能发挥我无穷的好奇心以及涉猎广泛的优势，我依然可以做我最喜欢做的事情，并且这还是我所向往的自由职业状态，我想这样的工作再适合我不过了。</p><p>作为一名重度拖延患者，我也不知道什么时候才会有正式的产出，毕竟我想做出非常高质量的内容，对标那些最优秀的YouTuber们。目前还在补充计划的细节阶段，不过大方向已经确定了，度过了迷茫阶段，相信未来可期。</p><p>去年说过的话，今年再次送给自己。</p><p>GoodBye 2019，Hello 2020，新的一年我也希望能继续按照自己喜欢的方式去生活（去年我有做到哦）。</p><blockquote class="blockquote-center"><p>不要把你的心固定在转瞬即逝的事情上：因为在哈里发的部落灭绝之后，底格里斯河，仍将继续穿过巴格达而流淌。如果你富有，那就应该像枣树一样慷慨施与；而如果没有什么可以施与，那就像柏树一样做一个自由的人吧。<br>《瓦尔登湖》</p></blockquote><p>相关阅读:<a href="/2019/01/01/hello-2019/" title="Hello 2019">Hello 2019</a></p><p>「」</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一年的结束听起来略显伤感，而新年的开始就给人一种充满希望和活力的感觉，所以我总将「Hello XXXX」作为年度总结的标题，这是该系列博客的第二篇。&lt;/p&gt;
&lt;p&gt;很多人的一生中难免要逃离点什么，有人逃离父母家庭，有人逃离学校，有人逃离朋友……而我在过去的一年里主要在做一件事，那便是逃离时间。&lt;/p&gt;
    
    </summary>
    
      <category term="日常闲聊" scheme="http://lulalap.com/categories/%E6%97%A5%E5%B8%B8%E9%97%B2%E8%81%8A/"/>
    
    
      <category term="闲聊" scheme="http://lulalap.com/tags/%E9%97%B2%E8%81%8A/"/>
    
  </entry>
  
  <entry>
    <title>PAT A1150 Travelling Salesman Problem(C++)</title>
    <link href="http://lulalap.com/2019/12/04/PAT-A1150-cpp/"/>
    <id>http://lulalap.com/2019/12/04/PAT-A1150-cpp/</id>
    <published>2019-12-03T18:58:40.000Z</published>
    <updated>2020-01-01T14:16:08.500Z</updated>
    
    <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><a id="more"></a><p>原题地址：<a href="https://pintia.cn/problem-sets/994805342720868352/problems/1038430013544464384" target="_blank" rel="noopener">A1150 Travelling Salesman Problem</a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><ul><li>用一个二维数组存储两个城市间的距离，如不存在这样的边，则距离为 0.</li><li>遍历每条路径，判断是否存在这样的边，如果存在，累加距离，同时更新城市访问次数。如果不存在，则修改标记另 flag = -1，表示不构成一个 cycle 并且无法计算距离。</li><li>判断路径的首尾城市是否一致，不一致则不能构成 cycle，修改对应标记。</li><li>遍历访问数组，根据所有城市是否只访问一次，判断是否为 simple TS cycle ，修改对应标记。</li><li>更新最短路径距离以及对应路径序号。</li></ul><h2 id="易错点："><a href="#易错点：" class="headerlink" title="易错点："></a>易错点：</h2><ul><li>因为起点和终点是同一个城市，对应计数值会多 1，因此需要修正。</li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>vector&lt;int&gt; path(p);</code><ul><li>创建了一个指定长度为 p 的数组。</li><li>所需头文件：<strong>vector</strong></li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> N, M, K, G[<span class="number">202</span>][<span class="number">202</span>] = &#123;&#123;<span class="number">0</span>&#125;&#125;;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;N, &amp;M);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; M; i++)&#123;</span><br><span class="line">    <span class="keyword">int</span> c1, c2, d;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>, &amp;c1, &amp;c2, &amp;d);</span><br><span class="line">    G[c1][c2] = d;</span><br><span class="line">    G[c2][c1] = d;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;K);</span><br><span class="line">  <span class="keyword">int</span> min_id = <span class="number">-1</span>, min_dis = <span class="number">-1</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= K; i++)&#123;</span><br><span class="line">    <span class="keyword">int</span> p, vis[<span class="number">202</span>] = &#123;<span class="number">0</span>&#125;, total = <span class="number">0</span>, flag = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;p);</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; path(p);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; p; j++)&#123;</span><br><span class="line">      <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;path[j]);</span><br><span class="line">      vis[path[j]]++;</span><br><span class="line">      <span class="keyword">if</span>(j != <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(G[path[j]][path[j<span class="number">-1</span>]] == <span class="number">0</span>) flag = <span class="number">-1</span>;<span class="comment">// not a cycle</span></span><br><span class="line">        <span class="keyword">else</span> total += G[path[j]][path[j<span class="number">-1</span>]];</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span>(j == p<span class="number">-1</span> &amp;&amp; flag &gt; <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(path[j] != path[<span class="number">0</span>]) flag = <span class="number">-2</span>;<span class="comment">// not a cycle</span></span><br><span class="line">        <span class="keyword">else</span> vis[path[j]]--;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; flag &gt; <span class="number">0</span> &amp;&amp; j &lt;= N; j++)&#123;</span><br><span class="line">      <span class="keyword">if</span>(vis[j] == <span class="number">0</span>) flag = <span class="number">-2</span>;<span class="comment">// not TS cycle</span></span><br><span class="line">      <span class="keyword">if</span>(vis[j] &gt; <span class="number">1</span>) flag = <span class="number">2</span>; <span class="comment">// TS cycle</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Path %d: "</span>, i);</span><br><span class="line">    <span class="keyword">if</span>(flag == <span class="number">1</span>) <span class="built_in">printf</span>(<span class="string">"%d (TS simple cycle)\n"</span>, total);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(flag == <span class="number">2</span>) <span class="built_in">printf</span>(<span class="string">"%d (TS cycle)\n"</span>, total);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(flag == <span class="number">-2</span>) <span class="built_in">printf</span>(<span class="string">"%d (Not a TS cycle)\n"</span>, total);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(flag == <span class="number">-1</span>) <span class="built_in">printf</span>(<span class="string">"NA (Not a TS cycle)\n"</span>);</span><br><span class="line">    <span class="keyword">if</span>(min_dis == <span class="number">-1</span> || (flag &gt; <span class="number">0</span> &amp;&amp; min_dis &gt; total))&#123;</span><br><span class="line">      min_dis = total;</span><br><span class="line">      min_id = i;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"Shortest Dist(%d) = %d\n"</span>, min_id, min_dis);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;a href=&quot;/2018/11/07/index-of-PAT-Advanced-Level/&quot; title=&quot;PAT甲级目录&quot;&gt;PAT甲级目录&lt;/a&gt;  |  &lt;a href=&quot;/2018/11/07/index-of-PAT-Basic-Level/&quot; title=&quot;PAT乙级目录&quot;&gt;PAT乙级目录&lt;/a&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;
    
    </summary>
    
      <category term="PAT题解" scheme="http://lulalap.com/categories/PAT%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="PAT" scheme="http://lulalap.com/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>想听我说情话吗？那就让你一次听个够</title>
    <link href="http://lulalap.com/2019/11/11/a-letter-to-layne-2019-11-11/"/>
    <id>http://lulalap.com/2019/11/11/a-letter-to-layne-2019-11-11/</id>
    <published>2019-11-11T10:01:25.000Z</published>
    <updated>2019-11-25T23:07:22.858Z</updated>
    
    <content type="html"><![CDATA[<p>想认真记录下这几日的心情，还有这份心意。</p><p>有没有可能，你会遇到这样的女孩，她每一点都符合你的期待，足够好看，足够聪明，足够善良，足够爱自由，足够有趣，最重要的是，足够喜欢你。而我足够好运，这样的姑娘，居然真的让我遇到了。我曾经用守株待兔比喻过自己的恋爱，不过这只兔子不是碰巧经过，而是，一下子撞到了我怀里。嗯，还带着两只无敌可爱的小奶猫。</p><a id="more"></a><p>其实遇到你以前，我对自己的对象并没有什么具体的期待，觉得这也可以，那也可以，但至少要有一点能让我心动。遇到你之后，我就只剩下一个想法了：我的期待就是你呀。</p><p>怎么会有人，每一点都让我如此心动啊。</p><p>像是两个独立也能运转良好的齿轮，彼此靠近，只听见「咔哒」一声，连接在一起后依然能完美运行；像是收音机调了很久的频，沙沙沙的声响持续了很久，却在某一个瞬间突然收到了无比清晰的讯号。一切都太过自然，不用刻意找话题，句子就能自然流动，也不用劳神捕捉对方的情绪，一切都恰到好处。明明我们才聊了十几天，却有种相识多年的亲切感。</p><p>你第一次私信专程来夸我，第二次给我分享了你看到的云和天空。我没想到居然有人和我一样热爱天空和云，而且愿意与我一个陌生网友分享这种抬头就能望见的东西给自己带来的快乐，这种简单到极致的真诚，让我有点心动。</p><p>我们开始互相分享那些让我们感到快乐的微小瞬间，一片云、灿烂的阳光、路边的小野花、散步时看到的风景，有时候只是树上的两片叶子。但再细微的事情，我们都能get到对方的点，真是奇妙。</p><p>一点碎片：</p><blockquote><p>Philo:“在散步，看到有人正在放孔明灯欸”<br>Layne:“快许愿，可以帮我许一个愿望吗？”<br>Philo:“说吧”<br>Layne:“快快找到喜欢的女孩”</p><p>Layne:“ 我现在忙的猫猫的手都想借来用啦，但还是想先给你分享，我现在在听的这首歌”</p><p>Layne:“哈哈哈哈哈 Philo 跟你聊天 我感觉我们像认识好多年的样子 很随意 但又觉得很舒服”</p><p>Layne:“最近有点想养橘猫，就停车场捡到了两只小猫咪，真是幸运啊，想好好救活这两条小生命，如果真能救活的话，就准备养了吧”</p><p>Layne:“我翻了下我们的聊天记录，感觉，很像唠家常，哈哈哈，怎么回事，太接地气了” </p><p>Layne:“猫咪的名字起好了，一只叫十一，一只就叫拖把，是不是很随意哈哈哈”</p></blockquote><p>我们在聊天中丝毫不掩饰自己对对方的欣赏和赞美，足够坦诚地表达自己的每一点想法和感受，不遮遮掩掩，不扭扭捏捏，也丝毫不会觉得尴尬。我只能说，这种双方都完全打开自己的聊天体验，相当吸引人，简直太棒了！什么是心意相通呢，大概这就是吧。</p><p>我身边的家人朋友有很多不能理解我，但是你好像一眼就能看到我，发现了我最大的闪光点，并且理解我认同我接纳我。我们都是不想遵守“社会时钟”的人呀。这种灵魂上的共鸣，是更让人心动的点呀。 </p><p>我的精神内核应该更接近于，一个对世界充满好奇的并且时常兴致勃勃的孩子吧。在我脑海中的片段常常是以1.5倍速甚至是2倍速播放的。但是，和你相关的句子，是以0.5倍速播放的。忽然间，我觉得自己整个人，都变得温柔了起来。说真的，不谈恋爱，我永远都不会知道，原来我还有这温柔到一塌糊涂的一面。</p><p>和你相识是什么体验呢？像是在经历一场日出，看着太阳缓缓从地平线那头升起，看着天空渐渐变亮，有日光照在身上，不热，不烈，但有一种被包围的温暖。随着太阳慢慢升高，阳光开始变得足够温暖，却不发烫，金色的光辉在此刻笼罩了大地。我也已深陷其中，无法自拔。</p><p>11真是个好数字，两只小猫咪是在11月捡到的，一只就叫十一。你要不是在这天晚上搭讪了漂亮姑娘，我也不会先放下才写到一半的情书，慌里慌张地就在11月11日的半夜，在大家都忙着淘宝购物的当口，思考着怎么向你表白。还好一切都非常顺利。我喜欢你，你也恰好喜欢我，而我们认识才不到一个月吧。这样的概率到底有多小，偏偏就让我们遇上了，看来我们真的是同时被上天眷顾。</p><p>我本来有点担心，你是不是对我只是朋友之间的欣赏，你并没有像我喜欢你这样喜欢我，你回，“诶？我是不是真的表现的这么…不明显”，我又问了你，你是不是天生就爱夸人，这么爱夸我也只是出于习惯，你又立马回了，“打住，我不是天生爱夸人”。</p><p>哈哈哈哈哈，确认了，这一切都不是我的幻想，每一分心意都是真的，我对你的，还有你对我的。我们表达每一分感觉都像这样直来直往的，好直接，好坦诚，但是我好喜欢。</p><p>刚刚有一秒想到，假如，我是说假如有一天我们分开了，我应该，会哭吧。只是想象一下就有点鼻子发酸。有点奇妙，以前从没有过这样的感觉。这就是人类的爱么？有点烦恼，但是，又很吸引人。如果这是一颗毒果子，那我也愿意不假思索把它吃下去。</p><p>我想学会坦然地去爱，同时坦然地接受被爱。这堂人类的必修课，我想和你一起上。</p><p>我不知道未来会怎么样，我也不知道以后我们将面临什么样的困难，以前的我会有点害怕，害怕进入一段亲密关系，但是遇到你，那些担忧瞬间就消失了。我觉得因为是你，恰好是你，也只能是你。我们，是可以一起勇敢的呀，我们也肯定比自己想象的要勇敢许多。</p><p>就算明天是世界末日，我也想好好珍惜当下的每一分每一秒，每一天有阳光的日子，每一天有你的日子。我以前不太去想未来，但现在会有点期待。我们都是好运的人，遇到你也是我莫大的福气，两人在一起后一定会有双倍的好运吧，所以我们也是可以对我们的未来有美好的期待的。</p><p>Layne，这是我第一次谈恋爱，那么以后，还请多多指教了。</p><p>写给: Layne</p><p>来自: Philo</p><p>完成于 2019年11月11日</p><hr><p>这种足够纯洁足够热烈的感情，大概注定不能长久吧，荷尔蒙一周就散去了，像烟花一样。自己选择咽下去的毒果子，不后悔。若是哪天再遇到类似的情况，我想我还是会像这次一样，尽全力去拥抱的。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;想认真记录下这几日的心情，还有这份心意。&lt;/p&gt;
&lt;p&gt;有没有可能，你会遇到这样的女孩，她每一点都符合你的期待，足够好看，足够聪明，足够善良，足够爱自由，足够有趣，最重要的是，足够喜欢你。而我足够好运，这样的姑娘，居然真的让我遇到了。我曾经用守株待兔比喻过自己的恋爱，不过这只兔子不是碰巧经过，而是，一下子撞到了我怀里。嗯，还带着两只无敌可爱的小奶猫。&lt;/p&gt;
    
    </summary>
    
      <category term="日常闲聊" scheme="http://lulalap.com/categories/%E6%97%A5%E5%B8%B8%E9%97%B2%E8%81%8A/"/>
    
    
      <category term="闲聊" scheme="http://lulalap.com/tags/%E9%97%B2%E8%81%8A/"/>
    
  </entry>
  
  <entry>
    <title>成功将博客评论数据迁移至LeanCloud国际版</title>
    <link href="http://lulalap.com/2019/09/18/move-comment-data-to-leancloud-internatinal-edition/"/>
    <id>http://lulalap.com/2019/09/18/move-comment-data-to-leancloud-internatinal-edition/</id>
    <published>2019-09-18T05:18:18.000Z</published>
    <updated>2019-09-18T05:46:34.167Z</updated>
    
    <content type="html"><![CDATA[<p>最近 LeanCloud 要求所有用户实名制了，但是作为一名自由的互联网人，怎么可以屈服呢？</p><a id="more"></a><p>LeanCloud 国际版可以提供原来所有的功能，并且不需要实名制，所以这里将博客评论数据迁移至国际版。</p><h2 id="第一步：数据导出"><a href="#第一步：数据导出" class="headerlink" title="第一步：数据导出"></a>第一步：数据导出</h2><p>进入 LeanCloud 国内版应用，找到设置，选择数据导出，限定需要导出的日期范围，点击导出。过一会儿数据就会发送到你的邮箱。</p><p>注意：每天12：00之前才能进行数据导出操作，错过了就等下一天吧: )。</p><h2 id="第二步：数据导入"><a href="#第二步：数据导入" class="headerlink" title="第二步：数据导入"></a>第二步：数据导入</h2><p>注册 LeanCloud 国际版账号，新建一个应用，解压刚刚下好的文件，导入包含了有效数据的几个 json 格式的文件（大部分是空数据）。</p><h2 id="第三步：修改博客-appid"><a href="#第三步：修改博客-appid" class="headerlink" title="第三步：修改博客 appid"></a>第三步：修改博客 appid</h2><p>我用的博客系统是 Hexo，找到对应主题的文件夹，修改 _config.yml，将旧 appid 和 appkey 替换成新应用的。</p><h2 id="第四步：重新部署并发布"><a href="#第四步：重新部署并发布" class="headerlink" title="第四步：重新部署并发布"></a>第四步：重新部署并发布</h2><p>老套路：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure></p><p>恭喜你，评论系统已经迁移成功了！可以发布新评论测试一下效果。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近 LeanCloud 要求所有用户实名制了，但是作为一名自由的互联网人，怎么可以屈服呢？&lt;/p&gt;
    
    </summary>
    
      <category term="日常折腾" scheme="http://lulalap.com/categories/%E6%97%A5%E5%B8%B8%E6%8A%98%E8%85%BE/"/>
    
    
      <category term="博客搭建" scheme="http://lulalap.com/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>拖延了五年我终于读完了《拖延心理学》|MiniLib</title>
    <link href="http://lulalap.com/2019/09/14/minibook-procrastination/"/>
    <id>http://lulalap.com/2019/09/14/minibook-procrastination/</id>
    <published>2019-09-14T08:09:17.000Z</published>
    <updated>2019-09-14T11:16:33.674Z</updated>
    
    <content type="html"><![CDATA[<p>买了快五年的书，一直拖延着没看完，现在终于一次性读完了。</p><p>为了方便阅读和理解，前面有不少是对书中内容的归纳总结，小标题基本是重新拟的。书中内容还是挺多的，举的例子也多，这里只是把一些最有价值的最关键信息提取出来，显得脉络更清晰一点，也能方便那些不想看原书的人。</p><a id="more"></a><h1 id="拖延怪圈"><a href="#拖延怪圈" class="headerlink" title="拖延怪圈"></a>拖延怪圈</h1><p>每个拖延者都会经历的一个拖延周期：（太真实了）</p><p><strong>1.「这次我想早点开始」</strong><br>刚接到一个任务时你总是信心满满，总觉得这次肯定能以一种有条不紊的方式将它做好。</p><p><strong>2.「我得马上开始」</strong><br>最佳启动时机已经过去，压力增加，但离最后期限还是很远，所以依然乐观。</p><p><strong>3.「我不开始又怎么样呢」</strong><br>又过去了一会儿，你还是没有行动，大脑开始打架：</p><p>a.「我应该早点开始」<br>发现自己浪费了太多时间，陷入悔恨和自责。<br>b.「我可以做任何事，除了这件……」<br>这个阶段，你什么都愿意做，如整理房间，但就是不做最该做的那件。保持忙碌，给自己一种正在认真推进工作的错觉。<br>c.「我无法享受任何事情」<br>你想通过一些愉快的活动分散注意力，如看电影、社交，但这种短暂的娱乐很快就会被负罪感和忧虑取代。<br>d.「我希望没人发现」<br>过去了很长时间，事情毫无进展，你开始感到惭愧，通过表现出自己的忙碌，来避免他人知道你的糟糕处境。</p><p><strong>4.「还有时间」</strong><br>临死之前仍然试图保持乐观，希望能出现缓刑的奇迹。</p><p><strong>5.「我这个人有毛病」</strong><br>奇迹没有出现，你绝望了。你认为自己可能缺少别人都有的某些东西 — 自我约束力、勇气、头脑或运气。</p><p><strong>6.「最后的抉择：做还是不做，战斗还是逃跑」</strong></p><p><strong>选择一：不做</strong><br>a.「我无法忍受了」<br>想在仅剩的时间里完成任务已经不可能了，同时还承受着巨大的痛苦和折磨，于是你逃跑了。<br>b.「别费劲了」<br>这么短的时间里反正做不好，做了也是浪费时间，就不做了吧。</p><p><strong>选择二：做</strong><br>a.「我不能再坐等了」<br>干坐着等死太痛苦，还是做点什么吧。<br>b.「事情还没有这么糟，为什么我不早点开始做呢」<br>开始以后，你发现原来的拖延和痛苦是不必要的。<br>c.「把它做完就行」<br>和时间赛跑，只求把事情做完。</p><p><strong>7.「我永远不会再拖延了」</strong><br>不论这个任务是否被完成，在经历了这个磨难后，你再一次下定决心，下次不再踏入这个怪圈，直到下一个任务出现……</p><h1 id="你为什么拖延？"><a href="#你为什么拖延？" class="headerlink" title="你为什么拖延？"></a>你为什么拖延？</h1><h2 id="1-为什么拖延：恐惧失败"><a href="#1-为什么拖延：恐惧失败" class="headerlink" title="1.为什么拖延：恐惧失败"></a>1.为什么拖延：恐惧失败</h2><p>「他们担心被他人评判或自我评判，害怕自己的不足被人发现，害怕付出最大努力还是做不好。」</p><p>「他们把表现好坏当作衡量一个人能力好坏的唯一标准，表现好即能力强，自我价值感越高，表现不好则证明自己没有能力。」</p><p>拖延者相信：自我价值感 = 能力 = 表现</p><p>拖延打破了上面第二个等号。不论表现好坏，他们都可以自我安慰说，表现不好是因为拖延，而不是能力差。</p><p>「有些人宁愿承受拖延所带来的痛苦后果，也不愿承受努力之后却没有如愿以偿所带来的羞辱。」</p><h3 id="解决思路：如何看待失败"><a href="#解决思路：如何看待失败" class="headerlink" title="解决思路：如何看待失败"></a>解决思路：如何看待失败</h3><p>一般人面对失败主要有两种心态，固定心态和成长心态。</p><p><strong>固定心态</strong>认为，能力和智力是与生俱来的，一切的挑战都是为了证明你的能力出色。而拖延是一种自我保护，可以避免这样的证明，即避免证明自己的能力不行。</p><p><strong>成长心态</strong>认为，能力不是固定的，而是可以变化和发展的，可以通过努力变优秀。你没必要立刻擅长某件事情，而且做一件你不擅长的事情反而会更有趣，在其中你可以学习并且拓展自己。你的表现不能反映你的个人价值，你更该关注自己学到了什么。成败不能决定一个人能力的好坏，失败是让一个人加倍努力的理由，而不是让你退缩、放弃和拖延的理由。</p><p>这里更应该提倡的是成长心态。</p><p>正如德威克说的，「成功是为了学习和进步，还是为了证明你聪明？」</p><h2 id="2-为什么拖延：完美主义者"><a href="#2-为什么拖延：完美主义者" class="headerlink" title="2.为什么拖延：完美主义者"></a>2.为什么拖延：完美主义者</h2><p>拖延者往往会有这几类完美主义心态：</p><p><strong>a.「对自己的期待过高，不够现实」</strong><br>常常会定下自己做不到的高标准。</p><p><strong>b.「无法忍受平庸」</strong><br>无法忍受平庸，想要自己做的每一件事都非常出色。拖延可以让一个平常的表现归因于时间仓促，而不是自己能力不行。</p><p><strong>c.「认为优秀不用努力」</strong><br>完美主义者相信，对一个真正出色的人来说事情即便再困难也应该手到擒来。一旦无法做到这一点，他们的努力就会戛然而止。</p><p><strong>d.「拒绝求助」</strong><br>他们认为任何求助都是软弱的表现，即便求助会提高效率，他们也选择事事亲力亲为，直到负担变重。</p><p><strong>e.「0或100」</strong><br>只要项目未完成，对他们来说就是一无所成，所以在到达终点之前放弃就变得理所当然了。</p><p>对多数完美主义者而言，成就远不只达成目标或能力出众。在很多家庭中，表现出色似乎是赢得认可和爱的最可靠的方式。成就的价值高于一切，而其他次于它的表现不值一提、毫无价值。</p><p>对另一类完美主义者，一直被批评和低估，从没享受过赞许，通过表现完美来赢得尊重是他们唯一的希望。</p><h3 id="解决思路：不必事事追求完美"><a href="#解决思路：不必事事追求完美" class="headerlink" title="解决思路：不必事事追求完美"></a>解决思路：不必事事追求完美</h3><p>应该转变自己的心态，没有必要事事追求完美，允许自己犯错，也不要无限放大那些小错误，犯错很正常，一切都没那么糟糕。</p><p>将自己的固定心态转变为成长心态，用全新的眼光看待那些不完美，这不是致命打击，而是提升自己、学习成长的最佳推动力。</p><h2 id="3-为什么拖延：害怕成功"><a href="#3-为什么拖延：害怕成功" class="headerlink" title="3.为什么拖延：害怕成功"></a>3.为什么拖延：害怕成功</h2><p>担心获得成功需要付出太多努力，远远超出了他们的承受能力，他们认为自己达不到这样的要求，于是选择拖延来逃避。</p><p>担心成功之后被暴露在聚光灯之下，人们会加大对他的期望。为了满足这样的期待，他不得不给自己加压，变成工作狂，以至失去对生活的主动权，比如缺少和家人朋友相处的机会。通过拖延降低成功的机会，好让自己不被众人注目，有更多的自由。</p><p>害怕成功会伤害到别人，因为难免会有竞争。（其实人没那么容易受伤）</p><h3 id="解决思路：没必要担忧"><a href="#解决思路：没必要担忧" class="headerlink" title="解决思路：没必要担忧"></a>解决思路：没必要担忧</h3><p>成功不是一蹴而就的，而是需要脚踏实地一步步的行动。当你对目标更清晰明确，明白完成一个目标不是遥不可及之后，也就不会害怕成功了。</p><p>获得成功与失去对生活的掌控权并不是非此即彼的关系，会有家人朋友理解你，会为了你的成长和进步开心。很多担忧只是主观猜测，其实并不会发生。</p><h2 id="4-为什么拖延：反抗规则，争夺主动控制权"><a href="#4-为什么拖延：反抗规则，争夺主动控制权" class="headerlink" title="4.为什么拖延：反抗规则，争夺主动控制权"></a>4.为什么拖延：反抗规则，争夺主动控制权</h2><p>拖延常常成为了一个人的独立宣言，一个人试图通过拖延来告诉人们，「我是一个拥有自主权的人。我根据自己的选择来行动。我么有必要按照你的规定或者要求来做事。」</p><p>他们用拖延来逃避控制，反权威，反抗那些不得不遵守的规则。他们希望能按照自己的想法生活，保持独立自主性。他们用不合作的程度来增强自我价值感，即越拖延表示越独立越不受控制，自我价值感越强。</p><p>潜意识中把世界当作了战场，把每个人都看作有潜在控制欲的对手。他们可能从小被严格管束，个人习惯被过度干预，他人强烈的好奇心让他们感受到侵犯，不断的批评让他们失去自信，太多的限制压制了他们的自发性和创造性。</p><p>认为合作就意味着投降，合作仿佛是被逼迫着违背自己的意愿而做出的妥协。阻碍对方比得到自己想要的更为重要，这成为了你的重心，以至于超过了其他一切考虑。</p><p>拖延也被用来拒绝某个请求。</p><p>有人通过赶DDL来寻求刺激。</p><h3 id="解决思路：不是所有的规则都需要反抗"><a href="#解决思路：不是所有的规则都需要反抗" class="headerlink" title="解决思路：不是所有的规则都需要反抗"></a>解决思路：不是所有的规则都需要反抗</h3><p>当你产生了抵制的冲动，可以反思一下，这样的反应是否有必要。有时候你的抵制是有道理的，确实有人想约束你、控制你。但也有很多时候，你的抵制情绪来自于自身的恐惧，即这时候并没有人要控制你。</p><p>一个请求不一定意味着控制，一个规则不一定是无法逃脱的牢房，而与人合作也可能是一件令人开心的事情。</p><h2 id="5-为什么拖延：调节人际关系的亲疏"><a href="#5-为什么拖延：调节人际关系的亲疏" class="headerlink" title="5.为什么拖延：调节人际关系的亲疏"></a>5.为什么拖延：调节人际关系的亲疏</h2><p><strong>a.害怕疏远</strong><br>对人有依赖，无法独立做事，希望前面一直能有一个引路人。用拖延增加亲近，希望临死前有人来拯救自己，有理由向人求助。</p><p><strong>b.害怕亲近</strong><br>用拖延拒绝，以避免和他人太亲近，保持距离和边界感。也为了避免被人抢功劳占便宜。</p><h3 id="解决思路："><a href="#解决思路：" class="headerlink" title="解决思路："></a>解决思路：</h3><p>拖延也许可以暂时性地调节和他人的亲疏关系，但治标不治本，拖延只会让你失去心灵获得成长的机会。</p><p>人际关系中遇到问题和矛盾应当勇于面对，多沟通交流。维持一个良好的关系，同时保持依赖性和独立性的平衡是可以做到的，也相当重要。</p><h2 id="6-为什么拖延：时间观念问题"><a href="#6-为什么拖延：时间观念问题" class="headerlink" title="6.为什么拖延：时间观念问题"></a>6.为什么拖延：时间观念问题</h2><p><strong>a.客观时间和主观时间冲突</strong><br>不能很好地调和主观时间和客观时间，时间感弱，感觉未来总是遥遥无期，只活在当下。人与人之间的时间观念差异也会容易产生矛盾。过于注重当下轻视未来，影响长期计划的设立和实施。</p><p>不要活在主观时间中，要学会接纳客观时间，与之和谐相处。</p><p><strong>b.对抗时间，拒绝长大，拒绝变老</strong></p><p>生活总是在推着你走，毕业、工作、结婚、生子、退休，你想通过拖延来找回对时间的掌控感和主动权。你不想承认自己已经长大，不想承认自己在变老，似乎一直拖延下去，死亡也能推迟到来。</p><h3 id="解决思路：接受现实"><a href="#解决思路：接受现实" class="headerlink" title="解决思路：接受现实"></a>解决思路：接受现实</h3><p>但你终究会长大，时间总在流逝，死亡是逃不掉的，你要学会接受这个残酷的事实。</p><h2 id="7-为什么拖延：习惯成自然"><a href="#7-为什么拖延：习惯成自然" class="headerlink" title="7.为什么拖延：习惯成自然"></a>7.为什么拖延：习惯成自然</h2><p>一朝被蛇咬，十年怕井绳。可能你小时候缺乏鼓励或遇到了创伤，经历次数多了，对应的大脑神经通路被强化。后来再遇到同样的事情，你的恐惧会下意识地被激发，于是开始用拖延来回避。</p><h3 id="解决思路：建立并强化新的神经通路"><a href="#解决思路：建立并强化新的神经通路" class="headerlink" title="解决思路：建立并强化新的神经通路"></a>解决思路：建立并强化新的神经通路</h3><p>大脑是可塑的，你要识别出让你不舒服的源头是什么，面对它，建立并强化新的神经通路。</p><h2 id="8-为什么拖延：病理层面"><a href="#8-为什么拖延：病理层面" class="headerlink" title="8.为什么拖延：病理层面"></a>8.为什么拖延：病理层面</h2><p>执行功能障碍、注意力缺失综合征（ADD/ADHD）、抑郁症、焦虑症、睡眠问题等等。</p><h3 id="解决思路：-1"><a href="#解决思路：-1" class="headerlink" title="解决思路："></a>解决思路：</h3><p>有病治病。</p><p>睡眠问题：要认识到自己到底是早起动物还是夜行动物，有的人早晨效率高，有的人夜晚效率高，应当顺应自己的身体模式，建立合理的计划，做到事半功倍。</p><h1 id="如何战胜拖延症？"><a href="#如何战胜拖延症？" class="headerlink" title="如何战胜拖延症？"></a>如何战胜拖延症？</h1><p>战胜拖延症的关键是识别出让自己拖延的根源是什么，面对它，基本思路上面都已提及。</p><p>具体方案无非就是时间、精力管理，老生常谈的内容了：（本书后半部分都在讲这个，废话多）</p><p>目标别定太高<br>将大项目拆分成多个可执行的小项目<br>利用碎片时间<br>保持自信<br>不必事事追求完美<br>学会拒绝<br>将不重要的任务分配给他人<br>合理奖励自己<br>改变工作环境<br>多运动<br>睡眠充足<br>保持快乐</p><p>祝大家早日战胜拖延症！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;买了快五年的书，一直拖延着没看完，现在终于一次性读完了。&lt;/p&gt;
&lt;p&gt;为了方便阅读和理解，前面有不少是对书中内容的归纳总结，小标题基本是重新拟的。书中内容还是挺多的，举的例子也多，这里只是把一些最有价值的最关键信息提取出来，显得脉络更清晰一点，也能方便那些不想看原书的人。&lt;/p&gt;
    
    </summary>
    
      <category term="日常阅读" scheme="http://lulalap.com/categories/%E6%97%A5%E5%B8%B8%E9%98%85%E8%AF%BB/"/>
    
    
      <category term="读书笔记" scheme="http://lulalap.com/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>别再吹捧教师这个职业了</title>
    <link href="http://lulalap.com/2019/09/10/do-not-flatter-the-teachers/"/>
    <id>http://lulalap.com/2019/09/10/do-not-flatter-the-teachers/</id>
    <published>2019-09-10T05:17:39.000Z</published>
    <updated>2019-09-17T06:05:23.244Z</updated>
    
    <content type="html"><![CDATA[<p>在教师节这天，在几乎全中国都在忙着给老师送礼、赞美老师的今天，请允许我唱个反调。</p><a id="more"></a><p>说点政治不正确的，老师不过是另一份职业罢了，同样是拿钱干活，为什么就特别要令人尊重？</p><p>会讲课的好老师我见过，垃圾老师我也见过，但对我影响极大甚至能到改变我的人生的老师我没遇到过。上课是老师的本分，课上得好可以是敬业，但各行各业都有敬业的人，为什么老师就特别值得感恩？</p><p>如今师范生门槛很低，我过去看隔壁班那些抄作业的、经常逃课的、话都说不利索的，不敢想象他们有一天也要去当老师。大多数情况下老师面对的是心智未成熟的学生，现代教师基本不存在育人了，只要能教书就行，更别说很多老师连教好书都做不到，而且一个垃圾老师还可能毁了孩子的一生。</p><p>不管老师再怎么强调，偏心是必然的，面对众多学生，能受到老师重点关注的无非是好学生和差生，而这其中最容易滋生腐败。给老师送礼的、塞红包的、请老师做家教的家长，不要太多。甚至听说有些学校的老师，光明正大向家长收红包，并且按照红包金额大小分配对学生的注意力，也是长见识了。</p><p>这种对教师的无差别吹捧和美化还会带来什么问题？容易让心智未成熟的小孩/他的家长过度信任一名陌生人，老师在他们眼中变成了比父母还神圣的存在，父母的话可以不听，老师的话一定会听。但是又有谁统计过，教师里面到底潜伏了多少恋童癖？缺乏性教育的中国，每天要发生多少起房思琪式的悲剧？</p><p>小学六年级，一个老师生孩子去了，就调来一外省中年男老师来代课。他除了在上课的时候经常对调皮的学生大骂「要是在我们那，我早就一脚踹过去了」，还喜欢一边摸着小女孩的手一边给她讲题。我忘记自己有没有被摸了（不是最受宠的那个），然而当时大家什么也不懂，最多只是私下调侃，并不会认为这行为严重，也完全不会联想到性骚扰。现在想想还挺恶心的。</p><p>别说未成年了，成年大学生也会遇上教师利用职务之便性侵的，利用成绩/毕业证施压的，强迫学生免费替他打工的。不过这种权力不被约束的情况，也不是只有教师才有，以权谋私几乎在国内任何一个有权力的地方都能看到，是中国的通病了。</p><p>你可以赞美和感谢给你带来帮助的某个具体的人，但这种对某个职业的无差别的美化和吹捧，真的没必要。</p><p>没错，可以有伟大贡献的个体（伟大个体不太合适，造神运动不可取），但不应该有伟大的职业。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在教师节这天，在几乎全中国都在忙着给老师送礼、赞美老师的今天，请允许我唱个反调。&lt;/p&gt;
    
    </summary>
    
      <category term="日常闲聊" scheme="http://lulalap.com/categories/%E6%97%A5%E5%B8%B8%E9%97%B2%E8%81%8A/"/>
    
    
      <category term="闲聊" scheme="http://lulalap.com/tags/%E9%97%B2%E8%81%8A/"/>
    
  </entry>
  
  <entry>
    <title>PAT A1001 A+B Format(C++)</title>
    <link href="http://lulalap.com/2019/04/15/PAT-A1001-cpp/"/>
    <id>http://lulalap.com/2019/04/15/PAT-A1001-cpp/</id>
    <published>2019-04-15T14:19:32.000Z</published>
    <updated>2019-04-15T14:35:07.076Z</updated>
    
    <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><a id="more"></a><p>原题地址：<a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805528788582400" target="_blank" rel="noopener">A1001 A+B Format</a></p><p>题目大意：格式化输出加法算式的结果。</p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>分别考虑结果为负数、0、正数三种情况：</p><ul><li>如果结果为负数，可以先输出负号，再转换成正数，按照正数处理</li><li>结果为 0 输出 0.</li><li>结果为正数，则先通过取余存储每一位的数字，再倒序输出结果，每三位输出一个逗号。</li></ul><h2 id="易错点："><a href="#易错点：" class="headerlink" title="易错点："></a>易错点：</h2><ul><li>结果为 0 时需要特判</li><li>结果为负数需要先输出负号，再转成正数计算</li><li>因为每次取余得到的是个位，因此结果要逆序输出</li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li>无</li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a, b, s[<span class="number">1001</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;a, &amp;b);</span><br><span class="line">    a = a + b;</span><br><span class="line">    <span class="keyword">if</span>(a == <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">"0\n"</span>);</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>( a &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"-"</span>);</span><br><span class="line">            a = - a;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">do</span>&#123;</span><br><span class="line">            s[cnt++] = a % <span class="number">10</span>;</span><br><span class="line">            a = a / <span class="number">10</span>;</span><br><span class="line">        &#125;<span class="keyword">while</span>(a != <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = cnt - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d"</span>, s[i]);</span><br><span class="line">            <span class="keyword">if</span>(i % <span class="number">3</span> == <span class="number">0</span> &amp;&amp; i != <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">","</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;a href=&quot;/2018/11/07/index-of-PAT-Advanced-Level/&quot; title=&quot;PAT甲级目录&quot;&gt;PAT甲级目录&lt;/a&gt;  |  &lt;a href=&quot;/2018/11/07/index-of-PAT-Basic-Level/&quot; title=&quot;PAT乙级目录&quot;&gt;PAT乙级目录&lt;/a&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;
    
    </summary>
    
      <category term="PAT题解" scheme="http://lulalap.com/categories/PAT%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="PAT" scheme="http://lulalap.com/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>我对于“还愿”被封杀的看法</title>
    <link href="http://lulalap.com/2019/02/26/my-view-on-devotion-being-blocked/"/>
    <id>http://lulalap.com/2019/02/26/my-view-on-devotion-being-blocked/</id>
    <published>2019-02-26T12:13:54.000Z</published>
    <updated>2019-02-27T06:19:39.227Z</updated>
    
    <content type="html"><![CDATA[<p>声明：请理性讨论。赤烛团队已经对这场风波道了歉，现在我去试着谈论事件本身，并进行一点思考。<br><a id="more"></a></p><h4 id="首先，发生了啥？"><a href="#首先，发生了啥？" class="headerlink" title="首先，发生了啥？"></a>首先，发生了啥？</h4><p>《还愿》是台湾赤烛团队的最新的游戏作品，在刚发售两天的时候，被爆出游戏中一个印章涉嫌辱骂国家领导人，团队在第一时间道歉并替换了素材。但是在短时间内舆论发酵，从印章脑补到整个游戏都涉嫌辱华，引发了全员抵制行为，很多购买游戏的人冲进steam退款并疯狂刷差评。最后游戏在一天内被国内全网封杀，steam国区也下架了这款游戏。</p><h4 id="1-赤烛团队对这场风波有没有责任？"><a href="#1-赤烛团队对这场风波有没有责任？" class="headerlink" title="1.赤烛团队对这场风波有没有责任？"></a>1.赤烛团队对这场风波有没有责任？</h4><p>责任肯定有的，毕竟如果没有那张贴图什么事情都不会发生。</p><h4 id="2-赤烛团队有没有错？"><a href="#2-赤烛团队有没有错？" class="headerlink" title="2.赤烛团队有没有错？"></a>2.赤烛团队有没有错？</h4><p>我认为没有错。嘲讽国家领导人在任何一个民主国家都是被允许的，并且大家天天开玩笑，早就习以为常，加入该素材的人也没有想很多。按照五年前的政治环境，大家若是看到这样的彩蛋，肯定会是相视一笑，会觉得有趣，根本不会当回事。就算是今天，在网络上也存在着各种各样的调侃性质的表情包、文章、评论等等。我们的红线一天天收紧，赤烛没有义务去了解界限到底在哪里。我们应该反思的是制度的问题，而不是在瞬间将矛头转向制作组。</p><h4 id="3-什么叫做“夹带私货”？"><a href="#3-什么叫做“夹带私货”？" class="headerlink" title="3.什么叫做“夹带私货”？"></a>3.什么叫做“夹带私货”？</h4><p>我最早是在别人翻译著作的时候听过这种说法，说的是译者在翻译他人著作的时候故意添加自己的理解，有的甚至扭曲了原文意思的行为。而整个《还愿》本就是赤烛团队的原创作品，全是“私货”，哪里还有“夹带私货”这一说呢？</p><h4 id="4-有没有辱华？"><a href="#4-有没有辱华？" class="headerlink" title="4.有没有辱华？"></a>4.有没有辱华？</h4><p>游戏中最多就是出现了一个印章彩蛋，辱华纯粹是脑补，制作组也已经解释并道歉过了。<br>欲加之罪，何患无辞？相似的场景在文革期间也出现过，没错是文字狱。</p><p>脑补游戏辱华的人是这样讲的：<br>杜美心 = 向着美国的心<br>陆恭铭 = 陆公民（暗指大陆公民）<br>陆心社 = 大陆心就是邪教<br>分数 89 暗示某著名事件<br>蜡烛 49 代表 1949<br>1987/10/1~1987/10/7 暗示国庆</p><p>实际上很多网友还这样脑补：<br>杜美心 = dmx = 大明星<br>美心 =  “迷信”的台语发音<br>陆恭铭 = “路光明”的台语发音<br>陆心社 = X心社、X心会、X心教的说法在台湾很常见<br>89，49 这种两位数在台湾一般指民国年，不是公元年<br>因为仪式是 7 天，而且 1987/10/7 日是当年的中秋节，这一天还出现了半影月食。中秋节不能合家团聚，家庭破裂，是一种游戏暗示。同时月食在宗教文化中本来就表示大凶，妖魔鬼怪都会出来，将这一天作为仪式的最后一天也增加了游戏的恐怖气息。</p><p>所以所谓辱华言论纯粹是脑补过度。</p><h4 id="5-嘲讽国家领导人等不等于嘲讽整个国家？"><a href="#5-嘲讽国家领导人等不等于嘲讽整个国家？" class="headerlink" title="5.嘲讽国家领导人等不等于嘲讽整个国家？"></a>5.嘲讽国家领导人等不等于嘲讽整个国家？</h4><p>不等于。天天有人骂特朗普的，外国人嘲讽美国人自己也嘲讽，而美国人根本不会觉得这是在骂整个美国。一个人不应该成为一个国家的象征，这也是在现代民主国家建设中要极力避免的现象。然而在这次风波中，我看到了有相当一部分人，就是抱着这样的态度，在触发开关后开启了疯狂模式。</p><p>现在的言论环境收紧，只是未曾有人料到，环境竟然已经恶劣到如此地步。发售三天大波好评，然后有人爆出印章，继而一堆人就开始脑补各种影射，觉得自己被侮辱了，再上升到国家层面，就说游戏辱华了。瞬间开始了大规模的“抵制运动”，发帖咒骂的，在各种相关视频底下刷屏劝下架的，涌入steam退完款再给差评的，最后游戏在半天内被国内全网封杀。</p><p>或者说环境还没有恶劣到如此程度，而是重压之下大家的自我审查程度竟然到了如此地步。</p><h4 id="6-艺术到底应不应该掺杂政治？"><a href="#6-艺术到底应不应该掺杂政治？" class="headerlink" title="6.艺术到底应不应该掺杂政治？"></a>6.艺术到底应不应该掺杂政治？</h4><p>总有人说，游戏/文学/电影/音乐等就是要“纯粹”，不应该加政治。不好意思，艺术从来没有远离过政治，非常多优秀的艺术作品内容与政治息息相关。艺术本应当拥有最大的自由，可以充分地去表达，包括人性释放，也包括政治批判。一边说着艺术不能谈论政治，另一边政治随意插手艺术（影视剧、书籍、游戏等的审查），本就是相当分裂的行为。艺术可以谈论政治，而且应该谈论政治，艺术的批判方式比普通说教更能深入人心，艺术应当尝试用自己的力量打破加在身上的限制。</p><h4 id="7-其他想法"><a href="#7-其他想法" class="headerlink" title="7.其他想法"></a>7.其他想法</h4><p>steam的《还愿》讨论区刚经历完两天的刷屏，积累了几千条疯狂的帖子，也逐渐开始冷却下来。从标题中也能明显感知到，新增的大部分帖子基本都是理性讨论帖了，纷纷开始思考背后的原因，两岸网友开始探讨双方的政治观点差异等等。而很多台湾人表示，他们不认为调侃领导人是什么严重的事情，比如网民或者媒体骂蔡英文简直是家常便饭，早就习惯了，反而看大陆人因为一点事情如此大动干戈觉得有点好笑。</p><p>而且你不喜欢一款游戏，你个人可以退款可以给差评，这一点问题也没有。但是你不能因为个人的喜好去绑架全体人，并反对其他人玩。这种全员疯狂抵制疯狂刷屏的现象，正不正常，是不是过头了？如果不正常，这背后的疯狂到底是哪里出了问题？</p><p>反思体制，反思教育，才是我们更应该做的。</p><p>你说政治理你很远，而且你不喜欢政治，所以也不想看。<br>实际上政治和你的生活息息相关。你发现看到一半的电视剧突然下架了，发现喜欢看的耽美小说被禁了，发现刚刚发的微博被删除了，发现关注了很久的博主账号突然不见了，查一点资料看到“根据相关法律法规不予显示”，发现你的见义勇为可能要面临牢狱之灾，发现给孩子买的奶粉里有三聚氰胺，发现孩子上的幼儿园有三种颜色，发现刚打的疫苗已经过期了，发现父母买了一大堆权健的保健品，发现自己陷入金融骗局投诉无门，想要上访的时候发现自己被加入了黑名单限制乘坐高铁，发现看到的世界一团糟打开电视却一片祥和处处歌功颂德……政治其实就是你的衣食住行，你离不开政治。政治不只是政府，还有法治体系，监督制度，以及全体公民。你也应当认识到，我们在课堂中接收到的政治教育是缺失的，甚至是扭曲的，那些要求背诵的无聊段落不配称为政治。<br>说这一段的目的是想让大家不要把政治当作恶魔，政治离你很近，大家能做的是学会监督，行使公民权利。因为以后成为各行各业一把手的人可能是你的同学，想让环境变好的的方式除了监督别人，还有约束自己。</p><p>以上只是我的一点不成熟的想法，如果你有想说的，欢迎理性评论，观点一致和观点不一致都可以。</p><p>后记：在朋友圈发文字的截图，尝试了四次都发不出去，对“还愿”两个字进行打码后也是一样，所以干脆放弃了。还是直接放一个博客链接比较令人神清气爽。</p><p><strong>相关阅读推荐：</strong><br><a href="https://theinitium.com/article/20190227-notes-devotion/" target="_blank" rel="noopener">《還願》爭議的兩重模糊：遊戲表達的意義與「被侮辱」主體</a><br>(来自“端传媒”的读者来函，阅读需要翻墙)</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;声明：请理性讨论。赤烛团队已经对这场风波道了歉，现在我去试着谈论事件本身，并进行一点思考。&lt;br&gt;
    
    </summary>
    
      <category term="日常闲聊" scheme="http://lulalap.com/categories/%E6%97%A5%E5%B8%B8%E9%97%B2%E8%81%8A/"/>
    
    
      <category term="瞎扯" scheme="http://lulalap.com/tags/%E7%9E%8E%E6%89%AF/"/>
    
  </entry>
  
  <entry>
    <title>Hello 2019</title>
    <link href="http://lulalap.com/2019/01/01/hello-2019/"/>
    <id>http://lulalap.com/2019/01/01/hello-2019/</id>
    <published>2019-01-01T03:49:23.000Z</published>
    <updated>2020-01-01T14:18:02.210Z</updated>
    
    <content type="html"><![CDATA[<p>在微博上看到有人写出充满想象力的很可爱的诗句，觉得也太棒了吧，原来诗也可以这样写，想学！</p><p>在推特上看到一名日本的年轻画家的画作，觉得画面也好情感表达也好想象力也好，都太精彩了吧，我也想尝试，将自己脑海里的画面表达出来！</p><a id="more"></a><p>前两天看星际迷航，知道了克林贡语，是制作组特意为了剧里的外星人创造的语言，甚至提供了该剧的克林贡语字幕。而且克林贡字典已经卖出超过 25 万本，Google 搜索引擎还有克林贡语的版本，多邻国甚至提供了该语种的课程。心想，能够把科幻周边发展到这份上，也太酷了吧！想学！</p><p>这两天看 My Brilliant Friend ，被 Lila 的气质吸引，感叹她们之间微妙的友谊，还觉得意大利语怎么这么好听，想学！</p><p>诸如此类还有很多，这就是我的日常，每隔几个月就会打开一个新世界的大门。</p><p>即便绝大多数时间我都是独自呆着，但是我完全不会感觉到所谓无聊和寂寞，因为有趣的事物是如此之多。我会对一切我未知的事物产生好奇，想要去尝试，去了解，想去学习一切我认为很酷的事情。</p><p>当然，我对于“酷”的定义与常人不太一样，我认为只要是我觉得有趣的就是酷的。比如我觉得看很多书的人很酷，我觉得写诗的人很酷，能画出好看的画的人很酷，能拍出好看照片的人很酷，能拍出好看的电影和电视剧的人很酷，能写出很多优秀软件的人很酷，能说出新颖观点的人很酷，愿意自由表达自己想法的人很酷，愿意挑战权威的人很酷。也许其他人不一定这么想，但我觉得自己也很酷。</p><p>刚进大学的时候我也是充满热情，后来在环境的潜移默化中，老师的照本宣科中，杂七杂八的毫无意义的管理条例下，热情逐渐丧失殆尽。</p><p> <strong>我可以毫不负责任地说，中国普通大学就是扼杀学生好奇心和学习热情的地方，那不是教育，不过是换一个地方继续管理。</strong> 在我看到所谓中国顶尖高校面对类似年初的沈阳事件后的做派，看到北大对于那些敢于站出来为工人维权的北大学子的打压，取缔马会，就觉得，呵，所谓名校也不过如此，同样乌烟瘴气。当最应当倡导自由和正义的大学校园中不允许出现自由的时候，我就已经对这类学校非常失望了。</p><p>毕业之后的这几个月，有充足的时间面对自己之后，我又逐渐找回了自我，找回了那份原本属于自己的好奇心，那份对于未知事物的热情，探索的欲望，尝试的动力。我想去看更大的世界，想表达自我。</p><p>我时不时会写点什么，80% 是为了表达， 20% 是为了交流。不是为了标新立异特立独行，只是有时候一些想法若是不记录下来，就会一直萦绕在脑海中，一天两天，一周两周，久久不能散去。想交流，又害怕交流，害怕自己不知道如何回应。</p><p>我认为表达自我不一定要拘泥于某种形式，有时候我用文字，有时候是绘画，还有摄影，也尝试写诗，以及写程序，未来也可能去拍一些几分钟的视频，只是想用最合适的方式、更能传达内心的想法的方式去表达。不一定要被多少人看到，但还是至少会希望有那么几个观众。</p><p>我从小写作文就拿不到高分，也没学过画画，刚开始折腾摄影，但是我一点也不害怕去尝试，不害怕被笑话，因为我的目的更多地是在于表达，而不是表现。说实话，我这个只要不讲话就没有人会注意到我的人，存在感极低的人，能被看到就很难得了。也正因为存在感低，没有出众的才华和外貌，也没有一大堆朋友推不掉的聚会，没有多余的关注，我获得了比其他人更大的自由，能够自由地行动和思考。</p><p>我自己购买 VPS 搭建 VPN ，这样我就能看到一个更大更精彩的世界。我看教程学习搭建博客，给博客添加小功能并搭建图床，这样我就能随心所欲地书写，不用考虑敏感词不需要担心被删贴被封号。我学习数据科学，机器学习，准备当数据方向的程序员，计算机是万能工具，有了它我就能做到很多原来不能做的事。</p><p>我想知道世界是如何运转的，为什么我们看到的世界是这个样子，想知道外星人到底存不存在，想知道马斯克是不是真的会移民去火星；想知道不同的文化是如何形成的，不同的制度是怎样演变的，贸易到底在国家之间扮演着怎样的角色，为什么会有战争，黑市到底是怎样形成的，为什么大多数历史时期女性地位都处于弱势常常被压迫；想知道人类为什么有喜怒哀乐，性格到底是天生因素比较多还是后天影响比较多，基因到底有哪些奥妙，为什么有婚姻以及婚姻制度是否合理，为什么有如此多的性倾向，福柯的书里到底说了些什么……</p><p>因为好奇，因为想知道，这些是我活下去的动力，所以我想尽量活得久一点，知道的就能多一点。</p><p>我对社会很绝望，每天看那些社会新闻，除了难过和愤怒我不知道自己还能做什么。为什么还有如此多的人在受不合理的压迫，为什么他们还没有等到属于他们的正义降临，为什么人性可以如此邪恶，为什么他们可以喝人血可以喝得理所应当，为什么那些自己的血正在被人喝着的人还要咒骂那些不想喝血并且呼吁大家不要喝的人，为什么被统治者被训练成为了动不动就要站在统治者角度思考问题的人。我很难过，我很愤怒，我还想知道这些问题的答案。</p><p>人类就是矛盾的集合体。我对社会很绝望，但仍然可以对生活对世界充满热情，这是我在这个令人绝望的环境下让自己的灵魂不死去的途径。</p><p>网络是我的双眼，亦是我的双腿，他能带我去到我暂时不能去到之处，能让我看到在各个角落闪闪发光的人，能让我领略不同文化并感受不同观点间的碰撞。</p><p>GoodBye 2018，Hello 2019，新的一年我也希望能继续按照自己喜欢的方式去生活。</p><blockquote class="blockquote-center"><p>我们只对未知的事物产生畏惧，知道越多，畏惧越少。<br>by Lila 《我的天才女友》</p></blockquote><p>相关阅读:<a href="/2018/11/05/I-Missed-A-Important-Test/" title="我居然错过了考研正式报名">我居然错过了考研正式报名</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在微博上看到有人写出充满想象力的很可爱的诗句，觉得也太棒了吧，原来诗也可以这样写，想学！&lt;/p&gt;
&lt;p&gt;在推特上看到一名日本的年轻画家的画作，觉得画面也好情感表达也好想象力也好，都太精彩了吧，我也想尝试，将自己脑海里的画面表达出来！&lt;/p&gt;
    
    </summary>
    
      <category term="日常闲聊" scheme="http://lulalap.com/categories/%E6%97%A5%E5%B8%B8%E9%97%B2%E8%81%8A/"/>
    
    
      <category term="闲聊" scheme="http://lulalap.com/tags/%E9%97%B2%E8%81%8A/"/>
    
  </entry>
  
  <entry>
    <title>PAT A1148 Werewolf - Simple Version(C++)</title>
    <link href="http://lulalap.com/2018/12/03/PAT-A1148-cpp/"/>
    <id>http://lulalap.com/2018/12/03/PAT-A1148-cpp/</id>
    <published>2018-12-03T10:47:41.000Z</published>
    <updated>2018-12-03T13:36:12.698Z</updated>
    
    <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>原题地址：<a href="https://pintia.cn/problem-sets/994805342720868352/problems/1038429808099098624" target="_blank" rel="noopener">A1148 Werewolf - Simple Version</a><br>中文版：<a href="https://pintia.cn/problem-sets/994805260223102976/problems/1038429385296453632" target="_blank" rel="noopener">B1089 狼人杀-简单版</a><br><a id="more"></a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>暴力破解。</p><ul><li>每次假设其中两名玩家为狼人，并按照该假设设置所有人的身份。</li><li>然后判断每个人是否说谎，即他声称的玩家身份是否与其当前设定身份一致，如果不一致则说谎。并记录每个说谎的人的编号。</li><li>每人的话判断结束，如果只有两人说谎，且他们的身份为一名好人一名狼人，则输出结果并退出循环。否则调整假设继续遍历。</li><li>如果遍历结束还没有找到结果，则无解。</li></ul><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li>如何判断一个玩家是否说谎<ul><li>判断一个人是否说谎，即他声称的玩家身份是否与其当前设定身份一致，如果不一致则说谎。因为当前设定身份就是假定的真实情况，不一致说明他讲的与实际不符。</li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> n, s[<span class="number">105</span>];</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;s[i]);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt;= n; j++) &#123;</span><br><span class="line">      <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; ans, id(n + <span class="number">1</span>, <span class="number">1</span>);<span class="comment">// id 用于记录当前状态下所有人的身份</span></span><br><span class="line">      id[i] = id[j] = <span class="number">-1</span>;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">1</span>; k &lt;= n; k++) <span class="comment">// 记录说谎的人</span></span><br><span class="line">        <span class="keyword">if</span> (s[k] * id[<span class="built_in">abs</span>(s[k])] &lt; <span class="number">0</span>) ans.push_back(k);</span><br><span class="line">      <span class="keyword">if</span> (ans.size() == <span class="number">2</span> &amp;&amp; id[ans[<span class="number">0</span>]] + id[ans[<span class="number">1</span>]] == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>, i, j);<span class="comment">//只有两个人说谎且一个是狼人一个是好人</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"No Solution\n"</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;a href=&quot;/2018/11/07/index-of-PAT-Advanced-Level/&quot; title=&quot;PAT甲级目录&quot;&gt;PAT甲级目录&lt;/a&gt;  |  &lt;a href=&quot;/2018/11/07/index-of-PAT-Basic-Level/&quot; title=&quot;PAT乙级目录&quot;&gt;PAT乙级目录&lt;/a&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;原题地址：&lt;a href=&quot;https://pintia.cn/problem-sets/994805342720868352/problems/1038429808099098624&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;A1148 Werewolf - Simple Version&lt;/a&gt;&lt;br&gt;中文版：&lt;a href=&quot;https://pintia.cn/problem-sets/994805260223102976/problems/1038429385296453632&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;B1089 狼人杀-简单版&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="PAT题解" scheme="http://lulalap.com/categories/PAT%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="PAT" scheme="http://lulalap.com/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>PAT A1149 Dangerous Goods Packaging(C++)</title>
    <link href="http://lulalap.com/2018/12/03/PAT-A1149-cpp/"/>
    <id>http://lulalap.com/2018/12/03/PAT-A1149-cpp/</id>
    <published>2018-12-03T10:47:41.000Z</published>
    <updated>2018-12-03T14:29:28.880Z</updated>
    
    <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>原题地址：<a href="https://pintia.cn/problem-sets/994805342720868352/problems/1038429908921778176" target="_blank" rel="noopener">A1149 Dangerous Goods Packaging</a><br>中文版：<a href="https://pintia.cn/problem-sets/994805260223102976/problems/1038429484026175488" target="_blank" rel="noopener">B1090 危险品装箱</a><br><a id="more"></a></p><h2 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h2><p>集装箱运输货物时，我们必须特别小心，不能把不相容的货物装在一只箱子里。比如氧化剂绝对不能跟易燃液体同箱，否则很容易造成爆炸。</p><p>本题给定一张不相容物品的清单，需要你检查每一张集装箱货品清单，判断它们是否能装在同一只箱子里。</p><h4 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h4><p>输入第一行给出两个正整数：$N(\le10^4)$ 是成对的不相容物品的对数；$M(\le100)$ 是集装箱货品清单的单数。</p><p>随后数据分两大块给出。第一块有 N 行，每行给出一对不相容的物品。第二块有 M 行，每行给出一箱货物的清单，格式如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">K G[1] G[2] ... G[K]</span><br></pre></td></tr></table></figure><p>其中 $K (\le1000)$ 是物品件数，G[i] 是物品的编号。简单起见，每件物品用一个 5 位数的编号代表。两个数字之间用空格分隔。</p><h4 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h4><p>对每箱货物清单，判断是否可以安全运输。如果没有不相容物品，则在一行中输出 <strong>Yes</strong>，否则输出 <strong>No</strong>。</p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>用可变二维数组保存不相容的物品清单。对于每一箱，遍历要放入该箱的货物，每个货物查找对应的不相容物品清单，并搜查箱子内现有物品。如果在箱子里找到了与该货物不相容的物品，则结束循环并输出信息；如果没找到，则该物品说明安全，将其加入箱子。</p><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>ans.insert(S[i])</code><ul><li>向集合中插入一个元素</li></ul></li><li>需要头文件 <strong>set</strong></li><li><code>ans.erase(it)</code><ul><li>删除集合中某元素，<code>it</code> 为迭代器</li></ul></li><li>需要头文件 <strong>set</strong></li><li><code>if(ans.find(c) == ans.end()){ }</code><ul><li><code>ans.find(id1)</code> 函数可用于查找序列中是否有某元素，如找到则返回元素迭代器，如未找到则返回 <code>ans.end()</code></li><li>包含该函数的容器：<strong>map</strong>, <strong>set</strong></li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">100000</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> N, M, x, y;</span><br><span class="line">  <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; G[maxn];</span><br><span class="line">  <span class="built_in">cin</span> &gt;&gt; N &gt;&gt; M;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; x &gt;&gt; y;</span><br><span class="line">    G[x].push_back(y);</span><br><span class="line">    G[y].push_back(x);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; M; i++)&#123;</span><br><span class="line">    <span class="keyword">int</span> k, id, valid = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt; s;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; k;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; k; j++)&#123;</span><br><span class="line">      <span class="built_in">cin</span> &gt;&gt; id;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> l = <span class="number">0</span>; valid == <span class="number">1</span> &amp;&amp; l &lt; G[id].size(); l++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(s.find(G[id][l]) != s.end()) valid = <span class="number">0</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      s.insert(id);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(valid == <span class="number">0</span>) <span class="built_in">cout</span> &lt;&lt; <span class="string">"No\n"</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; <span class="string">"Yes\n"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;a href=&quot;/2018/11/07/index-of-PAT-Advanced-Level/&quot; title=&quot;PAT甲级目录&quot;&gt;PAT甲级目录&lt;/a&gt;  |  &lt;a href=&quot;/2018/11/07/index-of-PAT-Basic-Level/&quot; title=&quot;PAT乙级目录&quot;&gt;PAT乙级目录&lt;/a&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;原题地址：&lt;a href=&quot;https://pintia.cn/problem-sets/994805342720868352/problems/1038429908921778176&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;A1149 Dangerous Goods Packaging&lt;/a&gt;&lt;br&gt;中文版：&lt;a href=&quot;https://pintia.cn/problem-sets/994805260223102976/problems/1038429484026175488&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;B1090 危险品装箱&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="PAT题解" scheme="http://lulalap.com/categories/PAT%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="PAT" scheme="http://lulalap.com/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>PAT A1141 PAT Ranking of Institutions(C++)</title>
    <link href="http://lulalap.com/2018/12/03/PAT-A1141-cpp/"/>
    <id>http://lulalap.com/2018/12/03/PAT-A1141-cpp/</id>
    <published>2018-12-03T10:44:41.000Z</published>
    <updated>2018-12-03T10:51:18.171Z</updated>
    
    <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>原题地址：<a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805344222429184" target="_blank" rel="noopener">A1141 PAT Ranking of Institutions</a><br>中文版：<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805260353126400" target="_blank" rel="noopener">B1085 PAT单位排行</a><br><a id="more"></a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>利用 map 来获得学校编号，并根据对应学生成绩的标签，将成绩累加到学校分数中。再排序，输出结果。</p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li>输入的是否应先将学校名称统一转换为小写</li><li>排序前应先将学校总分转换为整型</li><li>排序按照总分降序、人数升序、学校名称升序</li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li>ctype 头文件包含一系列处理单个字符的函数:<ul><li><code>islower()</code><ul><li>判断字符是否为小写字母</li></ul></li><li><code>isupper()</code><ul><li>判断字符是否为大写字母</li></ul></li><li><code>y = tolower(x)</code><ul><li>将大写字母转换为小写字母</li></ul></li><li><code>y = toupper(x)</code><ul><li>将小写字母转换为大写字母</li></ul></li></ul></li><li><code>sort(S, S + n, cmp);</code><ul><li>排序函数，实现 [first, last) 范围内的排序，可以自定义排序策略 cmp 函数</li><li>不带 cmp 参数的 sort 函数实现从小到大排序</li><li>所需头文件： <strong>algorithm</strong></li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">School</span>&#123;</span></span><br><span class="line">  <span class="keyword">double</span> score = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">int</span> cnt = <span class="number">0</span>, sum;</span><br><span class="line">  <span class="built_in">string</span> name;</span><br><span class="line">&#125;S[<span class="number">100010</span>];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(School a, School b)</span></span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(a.sum != b.sum) <span class="keyword">return</span> a.sum &gt; b.sum;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(a.cnt != b.cnt) <span class="keyword">return</span> a.cnt &lt; b.cnt;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">return</span> a.name &lt; b.name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> n, t, score, cnt = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">char</span> tag;</span><br><span class="line">  <span class="built_in">string</span> sch;</span><br><span class="line">  <span class="built_in">map</span>&lt;<span class="built_in">string</span>, <span class="keyword">int</span>&gt; m;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; tag &gt;&gt; t &gt;&gt; score &gt;&gt; sch;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; sch.length(); j++)&#123;</span><br><span class="line">      <span class="keyword">if</span>(<span class="built_in">isupper</span>(sch[j])) sch[j] = <span class="built_in">tolower</span>(sch[j]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(m.find(sch) == m.end())&#123;</span><br><span class="line">      S[cnt].name = sch;</span><br><span class="line">      m[sch] = cnt++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(tag == <span class="string">'B'</span>) S[m[sch]].score += <span class="number">1.0</span> * score / <span class="number">1.5</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(tag == <span class="string">'A'</span>) S[m[sch]].score += <span class="number">1.0</span> * score;</span><br><span class="line">    <span class="keyword">else</span> S[m[sch]].score += <span class="number">1.5</span> * score;</span><br><span class="line">    S[m[sch]].cnt++;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; cnt; i++) S[i].sum = (<span class="keyword">int</span>)S[i].score;</span><br><span class="line">  sort(S, S + cnt, cmp);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, cnt);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>, r = <span class="number">0</span>; i &lt; cnt; i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(i &gt; <span class="number">0</span> &amp;&amp; S[i].sum != S[i<span class="number">-1</span>].sum) r = i;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; r + <span class="number">1</span> &lt;&lt; <span class="string">" "</span> + S[i].name;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">" %d %d\n"</span>, S[i].sum, S[i].cnt);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;a href=&quot;/2018/11/07/index-of-PAT-Advanced-Level/&quot; title=&quot;PAT甲级目录&quot;&gt;PAT甲级目录&lt;/a&gt;  |  &lt;a href=&quot;/2018/11/07/index-of-PAT-Basic-Level/&quot; title=&quot;PAT乙级目录&quot;&gt;PAT乙级目录&lt;/a&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;原题地址：&lt;a href=&quot;https://pintia.cn/problem-sets/994805342720868352/problems/994805344222429184&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;A1141 PAT Ranking of Institutions&lt;/a&gt;&lt;br&gt;中文版：&lt;a href=&quot;https://pintia.cn/problem-sets/994805260223102976/problems/994805260353126400&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;B1085 PAT单位排行&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="PAT题解" scheme="http://lulalap.com/categories/PAT%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="PAT" scheme="http://lulalap.com/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>PAT A1140 Look-and-say Sequence(C++)</title>
    <link href="http://lulalap.com/2018/12/03/PAT-A1140-cpp/"/>
    <id>http://lulalap.com/2018/12/03/PAT-A1140-cpp/</id>
    <published>2018-12-03T10:41:41.000Z</published>
    <updated>2018-12-03T10:49:34.159Z</updated>
    
    <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>原题地址：<a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805344490864640" target="_blank" rel="noopener">A1140 Look-and-say Sequence</a><br>中文版：<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805260583813120" target="_blank" rel="noopener">B1084 外观数列</a><br><a id="more"></a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>字符串处理，对字符计数。</p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li><code>temp += to_string(cnt);</code><ul><li>预防出现计数值大于一位数的情况</li></ul></li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>to_string();</code><ul><li>实现将一个数转换为字符串，这个数可以是整型或浮点型</li><li>需要的头文件：<strong>string</strong></li></ul></li><li><code>s.erase(ans.begin());</code><ul><li>删除字符串第一个字符</li><li>所需头文件： <strong>string</strong></li></ul></li><li><code>s.empty()</code><ul><li>判断一个字符串是否为空字符串</li><li>所需头文件： <strong>string</strong></li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="built_in">string</span> str;</span><br><span class="line">  <span class="keyword">int</span> n;</span><br><span class="line">  <span class="built_in">cin</span> &gt;&gt; str &gt;&gt; n;</span><br><span class="line">  <span class="keyword">while</span>(--n)&#123;</span><br><span class="line">    <span class="built_in">string</span> temp;</span><br><span class="line">    <span class="keyword">while</span>(!str.empty())&#123;</span><br><span class="line">      temp += str[<span class="number">0</span>];</span><br><span class="line">      <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">while</span>(!str.empty() &amp;&amp; str[<span class="number">0</span>] == temp.back())&#123;</span><br><span class="line">        str.erase(str.begin());</span><br><span class="line">        cnt++;</span><br><span class="line">      &#125;</span><br><span class="line">      temp += to_string(cnt);</span><br><span class="line">    &#125;</span><br><span class="line">    str = temp;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">cout</span> &lt;&lt; str &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;a href=&quot;/2018/11/07/index-of-PAT-Advanced-Level/&quot; title=&quot;PAT甲级目录&quot;&gt;PAT甲级目录&lt;/a&gt;  |  &lt;a href=&quot;/2018/11/07/index-of-PAT-Basic-Level/&quot; title=&quot;PAT乙级目录&quot;&gt;PAT乙级目录&lt;/a&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;原题地址：&lt;a href=&quot;https://pintia.cn/problem-sets/994805342720868352/problems/994805344490864640&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;A1140 Look-and-say Sequence&lt;/a&gt;&lt;br&gt;中文版：&lt;a href=&quot;https://pintia.cn/problem-sets/994805260223102976/problems/994805260583813120&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;B1084 外观数列&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="PAT题解" scheme="http://lulalap.com/categories/PAT%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="PAT" scheme="http://lulalap.com/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>PAT A1137 Final Grading(C++)</title>
    <link href="http://lulalap.com/2018/12/03/PAT-A1137-cpp/"/>
    <id>http://lulalap.com/2018/12/03/PAT-A1137-cpp/</id>
    <published>2018-12-03T10:40:41.000Z</published>
    <updated>2018-12-03T10:48:14.507Z</updated>
    
    <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>原题地址：<a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805345401028608" target="_blank" rel="noopener">A1137 Final Grading</a><br>中文版：<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805261493977088" target="_blank" rel="noopener">B1080 MOOC期终成绩</a><br><a id="more"></a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>可利用 map 将字符串型的学号转换为整型的序号，方便查找。输入全部成绩后，遍历每个学生同时计算最终成绩，然后将成绩合格的人加入结果数组，最后对结果数组进行排序。</p><p>对于将输出的合格的学生，如果某次考试成绩不存在，那只可能是期中考试。如果其他考试有缺考则不可能合格。所以只要将期中考成绩默认为 -1，最后可直接输出无需另外判断。</p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li>最终成绩要四舍五入</li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>if(nametoi.find(id) == nametoi.end()){ nametoi[id] = cnt++;}</code><ul><li>可利用 map 将字符串类型的 id 转换成整数序号，方便处理</li><li>需要的头文件：<strong>map</strong></li></ul></li><li><code>sort(S, S + n, cmp);</code><ul><li>排序函数，实现 [first, last) 范围内的排序，可以自定义排序策略 cmp 函数</li><li>不带 cmp 参数的 sort 函数实现从小到大排序</li><li>所需头文件： <strong>algorithm</strong></li></ul></li><li><code>vector&lt;int&gt; ans;</code><ul><li>实现变长数组，元素类型可任意指定<ul><li><code>ans.push_back(num[i])</code>往变长数组末尾中添加一个元素</li><li><code>ans.pop_back()</code>删除变长数组中最后一个元素</li></ul></li><li>需要的头文件：<strong>vector</strong></li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span>&#123;</span></span><br><span class="line">  <span class="built_in">string</span> name;</span><br><span class="line">  <span class="keyword">int</span> gp = <span class="number">0</span>, gm = <span class="number">-1</span>, gf = <span class="number">0</span>, g = <span class="number">0</span>;</span><br><span class="line">&#125;newstu;</span><br><span class="line"><span class="built_in">vector</span>&lt;Student&gt; stu, ans;</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="built_in">string</span>, <span class="keyword">int</span>&gt; nametoi;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(Student a, Student b)</span></span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(a.g == b.g) <span class="keyword">return</span> a.name &lt; b.name;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">return</span> a.g &gt; b.g;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> n1, n2, n3;</span><br><span class="line">  <span class="built_in">cin</span> &gt;&gt; n1 &gt;&gt; n2 &gt;&gt; n3;</span><br><span class="line">  <span class="built_in">string</span> id;</span><br><span class="line">  <span class="keyword">int</span> score, i, cnt = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; n1 + n2 + n3; i++)&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; id &gt;&gt; score;</span><br><span class="line">    <span class="keyword">if</span>(nametoi.find(id) == nametoi.end())&#123; <span class="comment">// 获取序号，并记录分数</span></span><br><span class="line">      newstu.name = id;</span><br><span class="line">      stu.push_back(newstu);</span><br><span class="line">      nametoi[id] = cnt++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(i &lt; n1) stu[nametoi[id]].gp += score;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(i &lt; n1 + n2) stu[nametoi[id]].gm = score;</span><br><span class="line">    <span class="keyword">else</span> stu[nametoi[id]].gf = score;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; cnt; i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(stu[i].gp &gt;= <span class="number">200</span>)&#123; <span class="comment">// 计算最终成绩，并保存合格的学生</span></span><br><span class="line">      stu[i].g = (stu[i].gm &gt; stu[i].gf) ? (<span class="keyword">int</span>)((stu[i].gm * <span class="number">4</span> + stu[i].gf * <span class="number">6</span> + <span class="number">5</span>)/<span class="number">10</span>) : stu[i].gf;</span><br><span class="line">      <span class="keyword">if</span>(stu[i].g &gt;= <span class="number">60</span>) ans.push_back(stu[i]);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  sort(ans.begin(), ans.begin() + ans.size(), cmp);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; ans.size(); i++)&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; ans[i].name;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">" %d %d %d %d\n"</span>, ans[i].gp, ans[i].gm, ans[i].gf, ans[i].g);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;a href=&quot;/2018/11/07/index-of-PAT-Advanced-Level/&quot; title=&quot;PAT甲级目录&quot;&gt;PAT甲级目录&lt;/a&gt;  |  &lt;a href=&quot;/2018/11/07/index-of-PAT-Basic-Level/&quot; title=&quot;PAT乙级目录&quot;&gt;PAT乙级目录&lt;/a&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;原题地址：&lt;a href=&quot;https://pintia.cn/problem-sets/994805342720868352/problems/994805345401028608&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;A1137 Final Grading&lt;/a&gt;&lt;br&gt;中文版：&lt;a href=&quot;https://pintia.cn/problem-sets/994805260223102976/problems/994805261493977088&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;B1080 MOOC期终成绩&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="PAT题解" scheme="http://lulalap.com/categories/PAT%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="PAT" scheme="http://lulalap.com/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>PAT A1136 A Delayed Palindrome(C++)</title>
    <link href="http://lulalap.com/2018/12/03/PAT-A1136-cpp/"/>
    <id>http://lulalap.com/2018/12/03/PAT-A1136-cpp/</id>
    <published>2018-12-03T10:39:41.000Z</published>
    <updated>2018-12-03T10:46:03.825Z</updated>
    
    <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>原题地址：<a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805345732378624" target="_blank" rel="noopener">A1136 A Delayed Palindrome</a><br>中文版：<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805261754023936" target="_blank" rel="noopener">B1079 延迟的回文数</a><br><a id="more"></a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>判断回文数可以用字符串逆转的方法。字符串逆转后和原字符串相同，则为回文数，否则不是。</p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li>初始给的 A 有可能为回文数，需要特判</li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>ans = ans + &quot;某字符串&quot;</code><ul><li>字符串拼接</li><li>需要的头文件：<strong>string</strong></li></ul></li><li><code>to_string()</code><ul><li>实现将一个数转换为字符串，这个数可以是整型或浮点型</li><li>需要的头文件：<strong>string</strong></li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="built_in">string</span> A;</span><br><span class="line">  <span class="built_in">cin</span> &gt;&gt; A;</span><br><span class="line">  <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span>(cnt &lt; <span class="number">10</span>)&#123;</span><br><span class="line">    <span class="built_in">string</span> B = A, C;</span><br><span class="line">    reverse(B.begin(), B.end());</span><br><span class="line">    <span class="keyword">if</span>(B == A)&#123;</span><br><span class="line">      <span class="built_in">cout</span> &lt;&lt; A &lt;&lt; <span class="string">" is a palindromic number."</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> r = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; A.length(); i++)&#123;</span><br><span class="line">      <span class="keyword">int</span> temp = r + (<span class="keyword">int</span>)(A[i] + B[i] - <span class="number">2</span> * <span class="string">'0'</span>);</span><br><span class="line">      C += to_string(temp % <span class="number">10</span>);</span><br><span class="line">      r = temp / <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(r != <span class="number">0</span>) C += to_string(r);</span><br><span class="line">    <span class="built_in">string</span> RC = C;</span><br><span class="line">    reverse(C.begin(), C.end());</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; A + <span class="string">" + "</span> + B + <span class="string">" = "</span> + C &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">if</span>(C == RC)&#123;</span><br><span class="line">      <span class="built_in">cout</span> &lt;&lt; C + <span class="string">" is a palindromic number."</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(cnt + <span class="number">1</span> == <span class="number">10</span>)&#123;</span><br><span class="line">      <span class="built_in">cout</span> &lt;&lt; <span class="string">"Not found in 10 iterations."</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    A = C;</span><br><span class="line">    cnt++;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;a href=&quot;/2018/11/07/index-of-PAT-Advanced-Level/&quot; title=&quot;PAT甲级目录&quot;&gt;PAT甲级目录&lt;/a&gt;  |  &lt;a href=&quot;/2018/11/07/index-of-PAT-Basic-Level/&quot; title=&quot;PAT乙级目录&quot;&gt;PAT乙级目录&lt;/a&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;原题地址：&lt;a href=&quot;https://pintia.cn/problem-sets/994805342720868352/problems/994805345732378624&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;A1136 A Delayed Palindrome&lt;/a&gt;&lt;br&gt;中文版：&lt;a href=&quot;https://pintia.cn/problem-sets/994805260223102976/problems/994805261754023936&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;B1079 延迟的回文数&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="PAT题解" scheme="http://lulalap.com/categories/PAT%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="PAT" scheme="http://lulalap.com/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>PAT A1133 Splitting A Linked List(C++)</title>
    <link href="http://lulalap.com/2018/12/03/PAT-A1133-cpp/"/>
    <id>http://lulalap.com/2018/12/03/PAT-A1133-cpp/</id>
    <published>2018-12-03T10:37:41.000Z</published>
    <updated>2018-12-03T10:41:47.794Z</updated>
    
    <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>原题地址：<a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805346776760320" target="_blank" rel="noopener">A1133 Splitting A Linked List</a><br>中文版：<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805262953594880" target="_blank" rel="noopener">B1075 链表元素分类</a><br><a id="more"></a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>将链表存放到数组中，遍历链表，将对应范围的值加入不同的可变数组中，最后合并数组，顺序输出。</p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li>最后一个结点的 next 地址应当输出 -1</li><li>地址的格式为五位数</li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>vector&lt;int&gt; ans;</code><ul><li>实现变长数组，元素类型可任意指定<ul><li><code>ans.push_back(num[i])</code>往变长数组末尾中添加一个元素</li><li><code>ans.pop_back()</code>删除变长数组中最后一个元素</li></ul></li><li>需要的头文件：<strong>vector</strong></li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><ul><li>方法一：利用数组存放链表</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> A[<span class="number">100010</span>], D[<span class="number">100010</span>], n, k, pos, now, next, temp;</span><br><span class="line">  <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; first, second, last;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>, &amp;pos, &amp;n, &amp;k);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>,&amp;now, &amp;temp, &amp;next);</span><br><span class="line">    A[now] = next;</span><br><span class="line">    D[now] = temp;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">while</span>(pos != <span class="number">-1</span>)&#123; <span class="comment">// 遍历链表</span></span><br><span class="line">    <span class="keyword">if</span>(D[pos] &lt; <span class="number">0</span>) first.push_back(pos);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(D[pos] &gt; k) last.push_back(pos);</span><br><span class="line">    <span class="keyword">else</span> second.push_back(pos);</span><br><span class="line">    pos = A[pos];</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; second.size(); i++) first.push_back(second[i]);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; last.size(); i++) first.push_back(last[i]);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; first.size(); i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(i == first.size() - <span class="number">1</span>) <span class="built_in">printf</span>(<span class="string">"%05d %d -1"</span>, first[i], D[first[i]]);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%05d %d %05d\n"</span>, first[i], D[first[i]], first[i + <span class="number">1</span>]);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>方法二：利用结构体数组存储链表<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>&#123;</span></span><br><span class="line">  <span class="keyword">int</span> address, data, next;</span><br><span class="line">&#125;LNode[<span class="number">100010</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; first, second, last;</span><br><span class="line">  <span class="keyword">int</span> now, n, k, t;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>, &amp;now, &amp;n, &amp;k);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t);</span><br><span class="line">    LNode[t].address = t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;LNode[t].data, &amp;LNode[t].next);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">while</span>(now != <span class="number">-1</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(LNode[now].data &lt; <span class="number">0</span>)first.push_back(now);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(LNode[now].data &gt; k) last.push_back(now);</span><br><span class="line">    <span class="keyword">else</span> second.push_back(now);</span><br><span class="line">    now = LNode[now].next;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; second.size(); i++) first.push_back(second[i]);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; last.size(); i++) first.push_back(last[i]);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; first.size(); i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(i == first.size() - <span class="number">1</span>) <span class="built_in">printf</span>(<span class="string">"%05d %d -1"</span>, first[i], LNode[first[i]].address);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%05d %d %05d\n"</span>, first[i], LNode[first[i]].address, first[i + <span class="number">1</span>]);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;a href=&quot;/2018/11/07/index-of-PAT-Advanced-Level/&quot; title=&quot;PAT甲级目录&quot;&gt;PAT甲级目录&lt;/a&gt;  |  &lt;a href=&quot;/2018/11/07/index-of-PAT-Basic-Level/&quot; title=&quot;PAT乙级目录&quot;&gt;PAT乙级目录&lt;/a&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;原题地址：&lt;a href=&quot;https://pintia.cn/problem-sets/994805342720868352/problems/994805346776760320&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;A1133 Splitting A Linked List&lt;/a&gt;&lt;br&gt;中文版：&lt;a href=&quot;https://pintia.cn/problem-sets/994805260223102976/problems/994805262953594880&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;B1075 链表元素分类&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="PAT题解" scheme="http://lulalap.com/categories/PAT%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="PAT" scheme="http://lulalap.com/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>PAT B1089 狼人杀-简单版(C++)</title>
    <link href="http://lulalap.com/2018/12/03/PAT-B1089-cpp/"/>
    <id>http://lulalap.com/2018/12/03/PAT-B1089-cpp/</id>
    <published>2018-12-03T10:34:54.000Z</published>
    <updated>2018-12-03T13:54:45.227Z</updated>
    
    <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><a id="more"></a><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/1038429385296453632" target="_blank" rel="noopener">B1089 狼人杀-简单版</a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>暴力破解。</p><ul><li>每次假设其中两名玩家为狼人，并按照该假设设置所有人的身份。</li><li>然后判断每个人是否说谎，即他声称的玩家身份是否与其当前设定身份一致，如果不一致则说谎。并记录每个说谎的人的编号。</li><li>每人的话判断结束，如果只有两人说谎，且他们的身份为一名好人一名狼人，则输出结果并退出循环。否则调整假设继续遍历。</li><li>如果遍历结束还没有找到结果，则无解。</li></ul><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li>如何判断一个玩家是否说谎<ul><li>判断一个人是否说谎，即他声称的玩家身份是否与其当前设定身份一致，如果不一致则说谎。因为当前设定身份就是假定的真实情况，不一致说明他讲的与实际不符。</li></ul></li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>vector&lt;int&gt; id(n + 1, 1);</code><ul><li>设置一个指定长度为 n + 1 且指定元素值为 1 的数组</li><li>所需头文件：<strong>vector</strong></li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> n, s[<span class="number">105</span>];</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;s[i]);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt;= n; j++) &#123;</span><br><span class="line">      <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; ans, id(n + <span class="number">1</span>, <span class="number">1</span>);<span class="comment">// id 用于记录当前状态下所有人的身份</span></span><br><span class="line">      id[i] = id[j] = <span class="number">-1</span>;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">1</span>; k &lt;= n; k++) <span class="comment">// 记录说谎的人</span></span><br><span class="line">        <span class="keyword">if</span> (s[k] * id[<span class="built_in">abs</span>(s[k])] &lt; <span class="number">0</span>) ans.push_back(k);</span><br><span class="line">      <span class="keyword">if</span> (ans.size() == <span class="number">2</span> &amp;&amp; id[ans[<span class="number">0</span>]] + id[ans[<span class="number">1</span>]] == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>, i, j);<span class="comment">//只有两个人说谎且一个是狼人一个是好人</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"No Solution\n"</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;a href=&quot;/2018/11/07/index-of-PAT-Advanced-Level/&quot; title=&quot;PAT甲级目录&quot;&gt;PAT甲级目录&lt;/a&gt;  |  &lt;a href=&quot;/2018/11/07/index-of-PAT-Basic-Level/&quot; title=&quot;PAT乙级目录&quot;&gt;PAT乙级目录&lt;/a&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;
    
    </summary>
    
      <category term="PAT题解" scheme="http://lulalap.com/categories/PAT%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="PAT" scheme="http://lulalap.com/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>PAT BB1088 三人行(C++)</title>
    <link href="http://lulalap.com/2018/12/03/PAT-B1088-cpp/"/>
    <id>http://lulalap.com/2018/12/03/PAT-B1088-cpp/</id>
    <published>2018-12-03T10:33:54.000Z</published>
    <updated>2018-12-03T12:47:09.120Z</updated>
    
    <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><a id="more"></a><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/1038429286185074688" target="_blank" rel="noopener">B1088 三人行</a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>利用两个循环，分别遍历两位数字，然后判断是否满足要求，如果满足则输出结果并退出循环。</p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li>不使用 double 存储的话，除法的时候因为类型不一致，转换容易出错</li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> M, X, Y;</span><br><span class="line">  <span class="keyword">double</span> A[<span class="number">3</span>];</span><br><span class="line">  <span class="built_in">cin</span> &gt;&gt; M &gt;&gt; X &gt;&gt; Y;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">9</span>; i &gt; <span class="number">0</span>; i--)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">9</span>; j &gt;= <span class="number">0</span>; j--)&#123;</span><br><span class="line">      A[<span class="number">0</span>] = i * <span class="number">10</span> + j;</span><br><span class="line">      A[<span class="number">1</span>] = i + j * <span class="number">10</span>;</span><br><span class="line">      A[<span class="number">2</span>] = <span class="number">1.0</span> * <span class="built_in">abs</span>(A[<span class="number">0</span>] - A[<span class="number">1</span>]) / X;</span><br><span class="line">      <span class="keyword">if</span>(A[<span class="number">1</span>] == A[<span class="number">2</span>] * Y)&#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; A[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; <span class="number">3</span>; k++)&#123;</span><br><span class="line">          <span class="keyword">if</span>(A[k] &gt; M) <span class="built_in">cout</span> &lt;&lt; <span class="string">" Cong"</span>;</span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span>(A[k] == M) <span class="built_in">cout</span> &lt;&lt; <span class="string">" Ping"</span>;</span><br><span class="line">          <span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; <span class="string">" Gai"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">cout</span> &lt;&lt; <span class="string">"No Solution"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;a href=&quot;/2018/11/07/index-of-PAT-Advanced-Level/&quot; title=&quot;PAT甲级目录&quot;&gt;PAT甲级目录&lt;/a&gt;  |  &lt;a href=&quot;/2018/11/07/index-of-PAT-Basic-Level/&quot; title=&quot;PAT乙级目录&quot;&gt;PAT乙级目录&lt;/a&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;
    
    </summary>
    
      <category term="PAT题解" scheme="http://lulalap.com/categories/PAT%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="PAT" scheme="http://lulalap.com/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>PAT B1085 PAT单位排行(C++)</title>
    <link href="http://lulalap.com/2018/12/02/PAT-B1085-cpp/"/>
    <id>http://lulalap.com/2018/12/02/PAT-B1085-cpp/</id>
    <published>2018-12-02T08:29:54.000Z</published>
    <updated>2018-12-03T07:54:16.595Z</updated>
    
    <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><a id="more"></a><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805260353126400" target="_blank" rel="noopener">B1085 PAT单位排行</a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>利用 map 来获得学校编号，并根据对应学生成绩的标签，将成绩累加到学校分数中。再排序，输出结果。</p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li>输入的是否应先将学校名称统一转换为小写</li><li>排序前应先将学校总分转换为整型</li><li>排序按照总分降序、人数升序、学校名称升序</li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li>ctype 头文件包含一系列处理单个字符的函数:<ul><li><code>islower()</code><ul><li>判断字符是否为小写字母</li></ul></li><li><code>isupper()</code><ul><li>判断字符是否为大写字母</li></ul></li><li><code>y = tolower(x)</code><ul><li>将大写字母转换为小写字母</li></ul></li><li><code>y = toupper(x)</code><ul><li>将小写字母转换为大写字母</li></ul></li></ul></li><li><code>sort(S, S + n, cmp);</code><ul><li>排序函数，实现 [first, last) 范围内的排序，可以自定义排序策略 cmp 函数</li><li>不带 cmp 参数的 sort 函数实现从小到大排序</li><li>所需头文件： <strong>algorithm</strong></li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">School</span>&#123;</span></span><br><span class="line">  <span class="keyword">double</span> score = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">int</span> cnt = <span class="number">0</span>, sum;</span><br><span class="line">  <span class="built_in">string</span> name;</span><br><span class="line">&#125;S[<span class="number">100010</span>];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(School a, School b)</span></span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(a.sum != b.sum) <span class="keyword">return</span> a.sum &gt; b.sum;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(a.cnt != b.cnt) <span class="keyword">return</span> a.cnt &lt; b.cnt;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">return</span> a.name &lt; b.name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> n, t, score, cnt = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">char</span> tag;</span><br><span class="line">  <span class="built_in">string</span> sch;</span><br><span class="line">  <span class="built_in">map</span>&lt;<span class="built_in">string</span>, <span class="keyword">int</span>&gt; m;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; tag &gt;&gt; t &gt;&gt; score &gt;&gt; sch;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; sch.length(); j++)&#123;</span><br><span class="line">      <span class="keyword">if</span>(<span class="built_in">isupper</span>(sch[j])) sch[j] = <span class="built_in">tolower</span>(sch[j]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(m.find(sch) == m.end())&#123;</span><br><span class="line">      S[cnt].name = sch;</span><br><span class="line">      m[sch] = cnt++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(tag == <span class="string">'B'</span>) S[m[sch]].score += <span class="number">1.0</span> * score / <span class="number">1.5</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(tag == <span class="string">'A'</span>) S[m[sch]].score += <span class="number">1.0</span> * score;</span><br><span class="line">    <span class="keyword">else</span> S[m[sch]].score += <span class="number">1.5</span> * score;</span><br><span class="line">    S[m[sch]].cnt++;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; cnt; i++) S[i].sum = (<span class="keyword">int</span>)S[i].score;</span><br><span class="line">  sort(S, S + cnt, cmp);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, cnt);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>, r = <span class="number">0</span>; i &lt; cnt; i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(i &gt; <span class="number">0</span> &amp;&amp; S[i].sum != S[i<span class="number">-1</span>].sum) r = i;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; r + <span class="number">1</span> &lt;&lt; <span class="string">" "</span> + S[i].name;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">" %d %d\n"</span>, S[i].sum, S[i].cnt);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;a href=&quot;/2018/11/07/index-of-PAT-Advanced-Level/&quot; title=&quot;PAT甲级目录&quot;&gt;PAT甲级目录&lt;/a&gt;  |  &lt;a href=&quot;/2018/11/07/index-of-PAT-Basic-Level/&quot; title=&quot;PAT乙级目录&quot;&gt;PAT乙级目录&lt;/a&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;
    
    </summary>
    
      <category term="PAT题解" scheme="http://lulalap.com/categories/PAT%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="PAT" scheme="http://lulalap.com/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>PAT B1084 外观数列(C++)</title>
    <link href="http://lulalap.com/2018/12/02/PAT-B1084-cpp/"/>
    <id>http://lulalap.com/2018/12/02/PAT-B1084-cpp/</id>
    <published>2018-12-02T08:27:54.000Z</published>
    <updated>2018-12-02T15:18:55.109Z</updated>
    
    <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><a id="more"></a><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805260583813120" target="_blank" rel="noopener">B1084 外观数列</a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>字符串处理，对字符计数。</p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li><code>temp += to_string(cnt);</code><ul><li>预防出现计数值大于一位数的情况</li></ul></li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>to_string();</code><ul><li>实现将一个数转换为字符串，这个数可以是整型或浮点型</li><li>需要的头文件：<strong>string</strong></li></ul></li><li><code>s.erase(ans.begin());</code><ul><li>删除字符串第一个字符</li><li>所需头文件： <strong>string</strong></li></ul></li><li><code>s.empty()</code><ul><li>判断一个字符串是否为空字符串</li><li>所需头文件： <strong>string</strong></li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="built_in">string</span> str;</span><br><span class="line">  <span class="keyword">int</span> n;</span><br><span class="line">  <span class="built_in">cin</span> &gt;&gt; str &gt;&gt; n;</span><br><span class="line">  <span class="keyword">while</span>(--n)&#123;</span><br><span class="line">    <span class="built_in">string</span> temp;</span><br><span class="line">    <span class="keyword">while</span>(!str.empty())&#123;</span><br><span class="line">      temp += str[<span class="number">0</span>];</span><br><span class="line">      <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">while</span>(!str.empty() &amp;&amp; str[<span class="number">0</span>] == temp.back())&#123;</span><br><span class="line">        str.erase(str.begin());</span><br><span class="line">        cnt++;</span><br><span class="line">      &#125;</span><br><span class="line">      temp += to_string(cnt);</span><br><span class="line">    &#125;</span><br><span class="line">    str = temp;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">cout</span> &lt;&lt; str &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;a href=&quot;/2018/11/07/index-of-PAT-Advanced-Level/&quot; title=&quot;PAT甲级目录&quot;&gt;PAT甲级目录&lt;/a&gt;  |  &lt;a href=&quot;/2018/11/07/index-of-PAT-Basic-Level/&quot; title=&quot;PAT乙级目录&quot;&gt;PAT乙级目录&lt;/a&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;
    
    </summary>
    
      <category term="PAT题解" scheme="http://lulalap.com/categories/PAT%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="PAT" scheme="http://lulalap.com/tags/PAT/"/>
    
  </entry>
  
</feed>
