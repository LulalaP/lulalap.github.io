<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>PAT B1067 试密码(C++)</title>
      <link href="/2018/11/27/PAT-B1067-cpp/"/>
      <url>/2018/11/27/PAT-B1067-cpp/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><a id="more"></a><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805266007048192" target="_blank" rel="noopener">B1067 试密码 </a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>模拟题。每次密码输入正确且尝试次数小于等于最大尝试次数，为成功登录；当密码输入错误，如果算上该次尝试正好已经达到最大次数，则在输出密码错误信息后，退出系统。</p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li><code>getchar();</code><ul><li>cin 结束，仍有一个回车符没有吸收</li></ul></li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>getline(cin, str);</code><ul><li>输入一整行的字符串，包括空格等</li><li>所需头文件： <strong>iostream</strong></li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> N, cnt = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">string</span> password, temp;</span><br><span class="line">  <span class="built_in">cin</span> &gt;&gt; password &gt;&gt; N;</span><br><span class="line">  getchar(); <span class="comment">// 仍有一个回车符没有吸收</span></span><br><span class="line">  getline(<span class="built_in">cin</span>, temp);</span><br><span class="line">  <span class="keyword">while</span>(temp != <span class="string">"#"</span>)&#123;</span><br><span class="line">    cnt++;</span><br><span class="line">    <span class="keyword">if</span>(temp == password)&#123; <span class="comment">// 密码正确</span></span><br><span class="line">      <span class="built_in">cout</span> &lt;&lt; <span class="string">"Welcome in"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span>&#123; <span class="comment">//密码错误</span></span><br><span class="line">      <span class="built_in">cout</span> &lt;&lt; <span class="string">"Wrong password: "</span> &lt;&lt; temp &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">      <span class="keyword">if</span>(cnt &gt;= N)&#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"Account locked"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    getline(<span class="built_in">cin</span>, temp);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1066 图像过滤(C++)</title>
      <link href="/2018/11/27/PAT-B1066-cpp/"/>
      <url>/2018/11/27/PAT-B1066-cpp/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><a id="more"></a><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805266514558976" target="_blank" rel="noopener">B1066 图像过滤 </a></p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li>输出的编号应为格式化为三位数 <code>printf(&quot;%03d&quot;, temp);</code></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> n, m, a, b, x, temp[<span class="number">505</span>];</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d %d %d %d %d"</span>, &amp;m, &amp;n, &amp;a, &amp;b, &amp;x);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++)&#123;</span><br><span class="line">      <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;temp[j]);</span><br><span class="line">      <span class="keyword">if</span>(temp[j] &gt;= a &amp;&amp; temp[j] &lt;= b) temp[j] = x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++)&#123;</span><br><span class="line">      <span class="keyword">if</span>(j != <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">"%03d"</span>, temp[j]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1065 单身狗(C++)</title>
      <link href="/2018/11/27/PAT-B1065-cpp/"/>
      <url>/2018/11/27/PAT-B1065-cpp/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><a id="more"></a><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805266942377984" target="_blank" rel="noopener">B1065 单身狗 </a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>方法一：利用 map 记录每对对象的编号。然后遍历全部客人，如果其没有对象或者其对象没来，则加入落单名单。</p><p>方法二：假设所有客人都落单。在遍历客人的时候，如果在落单名单中找到了自己对象，则移除其对象编号，否则当作落单加入名单。遍历结束时，名单中的人要么没有对象，要么对象没来，也就正好落单了。</p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li>客人编号有 00000 ，所以不能通过 map 对应的值是否大于零来判断其是否单身</li><li>输出的编号应为格式化为五位数 <code>printf(&quot;%05d&quot;, *it);</code></li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>map&lt;int, int&gt; m;</code><ul><li>用于映射，键和值可以是任意类型</li><li>直接使用 <code>m[&lt;键&gt;] = &lt;值&gt;</code> 即可向map中添加一组键值对</li><li>需要的头文件：<strong>map</strong></li></ul></li><li><code>for(auto it = m.begin(); it != m.end(); it++){}</code><ul><li>可用于遍历 map/vector/set 等容器， <code>auto</code> 实现自动匹配对应迭代器类型</li><li>如果不用 <code>auto it = m.begin()</code> 则要写成 <code>std::map&lt;char, int&gt;::iterator it = m.begin()</code></li><li><code>map&lt;char,int&gt;</code> 在其他情况下可替换成对应元素的类型如 <code>vector&lt;int&gt;</code></li><li>所需头文件： <strong>map / set / vector</strong></li></ul></li><li><code>it-&gt;first</code> 和 <code>it-&gt;second</code><ul><li><code>it-&gt;first</code> 为 map 中对应元素的关键字</li><li><code>it-&gt;second</code> 为 map 中对应关键字的值</li><li>所需头文件： <strong>map</strong></li></ul></li><li><code>if(couple.find(id1) == couple.end()){ }</code><ul><li><code>couple.find(id1)</code> 函数可用于查找序列中是否有某元素，如找到则返回元素迭代器，如未找到则返回 <code>couple.end()</code></li><li>包含该函数的容器：<strong>string</strong>, <strong>map</strong>, <strong>set</strong></li></ul></li><li><code>ans.insert(S[i])</code><ul><li>向容器中插入一个元素</li></ul></li><li>所需头文件： <strong>set</strong></li><li><code>ans.erase(it)</code><ul><li>删除集合中某元素，<code>it</code> 为迭代器</li></ul></li><li>需要头文件： <strong>set</strong></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><ul><li>方法一</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> n, m, id1, id2;</span><br><span class="line">  <span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; couple, present;</span><br><span class="line">  <span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt; ans;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;id1, &amp;id2);</span><br><span class="line">    couple[id1] = id2;</span><br><span class="line">    couple[id2] = id1;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;m);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++)&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;id1);</span><br><span class="line">    present[id1] = <span class="number">1</span>; <span class="comment">// 记录每个出现的客人编号</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">auto</span> it = present.begin(); it != present.end(); it++)&#123;</span><br><span class="line">    id1 = it-&gt;first;</span><br><span class="line">    id2 = couple[id1];</span><br><span class="line">    <span class="keyword">if</span>(couple.find(id1) == couple.end() || !present[id2]) ans.insert(id1);<span class="comment">//客人没有对象或者对象没来就加入清单</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans.size());</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">auto</span> it = ans.begin(); it != ans.end(); it++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(it != ans.begin()) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%05d"</span>, *it);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>方法二：<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> n, m, id1, id2;</span><br><span class="line">  <span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; couple;</span><br><span class="line">  <span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt; ans;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;id1, &amp;id2);</span><br><span class="line">    couple[id1] = id2;</span><br><span class="line">    couple[id2] = id1;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;m);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++)&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;id1);</span><br><span class="line">    id2 = couple[id1];</span><br><span class="line">    <span class="comment">// 新来的客人在此派对中找到了对象，将对方名字从名单中抹去，否则将其加入名单</span></span><br><span class="line">    <span class="keyword">if</span>(!ans.empty() &amp;&amp; ans.find(id2) != ans.end()) ans.erase(ans.find(id2));</span><br><span class="line">    <span class="keyword">else</span> ans.insert(id1);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans.size());</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">auto</span> it = ans.begin(); it != ans.end(); it++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(it != ans.begin()) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%05d"</span>, *it);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1064 朋友数(C++)</title>
      <link href="/2018/11/27/PAT-B1064-cpp/"/>
      <url>/2018/11/27/PAT-B1064-cpp/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><a id="more"></a><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805267416334336" target="_blank" rel="noopener">B1064 朋友数 </a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>方法一：利用 map，每出现一个新的朋友证号就会在 map 中增加一个元素。最后遍历 map 输出即可得到有序结果序列。和方法二相比，主要优势在于节约了内存空间。</p><p>方法二：利用 hash 数组，记录每个数是否是朋友证号，如是设为 true，最后按顺序遍历数组，输出值为 true 的序号。</p><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>map&lt;int, int&gt; m;</code><ul><li>用于映射，键和值可以是任意类型</li><li>直接使用 <code>m[&lt;键&gt;] = &lt;值&gt;</code> 即可向map中添加一组键值对</li><li>需要的头文件：<strong>map</strong></li></ul></li><li><code>for(auto it = m.begin(); it != m.end(); it++){}</code><ul><li>可用于遍历 map/vector/set 等容器， <code>auto</code> 实现自动匹配对应迭代器类型</li><li>如果不用 <code>auto it = m.begin()</code> 则要写成 <code>std::map&lt;char, int&gt;::iterator it = m.begin()</code></li><li><code>map&lt;char,int&gt;</code> 在其他情况下可替换成对应元素的类型如 <code>vector&lt;int&gt;</code></li><li>所需头文件： <strong>map / set / vector</strong></li></ul></li><li><code>it-&gt;first</code> 和 <code>it-&gt;second</code><ul><li><code>it-&gt;first</code> 为 map 中对应元素的关键字</li><li><code>it-&gt;second</code> 为 map 中对应关键字的值</li><li>所需头文件： <strong>map</strong></li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><ul><li><p>方法一：利用 map</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> n, cnt = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">string</span> temp;</span><br><span class="line">  <span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; m;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; temp;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; temp.length(); j++) sum = sum + (<span class="keyword">int</span>)(temp[j] - <span class="string">'0'</span>);</span><br><span class="line">    m[sum]++;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, m.size());</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">auto</span> it = m.begin(); it != m.end(); it++, cnt++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(cnt != <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>, it-&gt;first);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>方法二：利用 hash 数组</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> n, num = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">bool</span> h[<span class="number">50</span>] = &#123;<span class="literal">false</span>&#125;;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>, temp, sum; i &lt; n; i++, sum = <span class="number">0</span>)&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;temp);</span><br><span class="line">    <span class="keyword">while</span>(temp!=<span class="number">0</span>)&#123;</span><br><span class="line">      sum = sum + temp % <span class="number">10</span>;</span><br><span class="line">      temp /= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(h[sum] == <span class="literal">false</span>)&#123;</span><br><span class="line">      num++;</span><br><span class="line">      h[sum] = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, num);</span><br><span class="line">  <span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; <span class="number">50</span>; i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(h[i]) &#123;</span><br><span class="line">      <span class="keyword">if</span>(flag != <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">"%d"</span>, i);</span><br><span class="line">      flag++;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1063 计算谱半径(C++)</title>
      <link href="/2018/11/27/PAT-B1063-cpp/"/>
      <url>/2018/11/27/PAT-B1063-cpp/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><a id="more"></a><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805267860930560" target="_blank" rel="noopener">B1063 计算谱半径 </a></p><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> N;</span><br><span class="line">  <span class="keyword">double</span> a, b, max_r, r;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;N);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lf %lf"</span>, &amp;a, &amp;b);</span><br><span class="line">    r = a * a + b * b;</span><br><span class="line">    max_r = (max_r &lt; r) ? r : max_r;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%.2lf\n"</span>, <span class="built_in">sqrt</span>(max_r));</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1062 最简分数(C++)</title>
      <link href="/2018/11/27/PAT-B1062-cpp/"/>
      <url>/2018/11/27/PAT-B1062-cpp/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><a id="more"></a><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805268334886912" target="_blank" rel="noopener">B1062 最简分数 </a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>分数化简可以利用最大公约数，最大公约数为 1 则已经是最简分数。</p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li>第一个分数有可能大于第二个分数</li><li>结果的分数值介于两个分数之间，等号没有取到</li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>int gcd(int a, int b){ return b == 0 ? abs(a) : gcd(b, a % b);}</code><ul><li>获取最大公约数</li></ul></li><li><code>swap(n1, n2)</code><ul><li>交换两个变量的值</li><li>所需头文件： <strong>algorithm</strong></li></ul></li><li><strong>cmath</strong> 中的取整函数</li><li><code>y = ceil(x)</code><ul><li>向下取整</li></ul></li><li><code>y = floor(x)</code><ul><li>向上取整</li></ul></li><li><code>y = round(x)</code><ul><li>四舍五入</li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>&#123; <span class="keyword">return</span> b == <span class="number">0</span> ? <span class="built_in">abs</span>(a) : gcd(b, a % b);&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> n1, m1, n2, m2, K, cnt = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d/%d %d/%d %d"</span>, &amp;n1, &amp;m1, &amp;n2, &amp;m2, &amp;K);</span><br><span class="line">  <span class="keyword">if</span>(n1 * m2 &gt; n2 * m1)&#123; <span class="comment">// 当第一个分数大于第二个分数</span></span><br><span class="line">    swap(n1, n2);</span><br><span class="line">    swap(m1, m2);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="built_in">ceil</span>(<span class="number">1.0</span> * n1 / m1 * K); <span class="number">1.0</span> * i / K &lt; <span class="number">1.0</span> * n2 / m2; i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(gcd(i, K) == <span class="number">1</span>)&#123;<span class="comment">// 为最简分数</span></span><br><span class="line">      <span class="keyword">if</span>(cnt != <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">"%d/%d"</span>, i, K);</span><br><span class="line">      cnt++;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1061 判断题(C++)</title>
      <link href="/2018/11/27/PAT-B1061-cpp/"/>
      <url>/2018/11/27/PAT-B1061-cpp/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><a id="more"></a><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805268817231872" target="_blank" rel="noopener">B1061 判断题 </a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>逻辑题，该题选择结果与正确答案一致则得满分，否则得零分。</p><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> N, M, score[<span class="number">110</span>] = &#123;<span class="number">0</span>&#125;, right_ans[<span class="number">110</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;N, &amp;M);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; M; i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;score[i]);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; M; i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;right_ans[i]);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>, t;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; M; j++)&#123;</span><br><span class="line">      <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t);</span><br><span class="line">      ans = ans + (t == right_ans[j]) * score[j];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1060 爱丁顿数(C++)</title>
      <link href="/2018/11/27/PAT-B1060-cpp/"/>
      <url>/2018/11/27/PAT-B1060-cpp/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><a id="more"></a><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805269312159744" target="_blank" rel="noopener">B1060 爱丁顿数 </a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>对全部每天的公里数进行倒序排序，则大于第 $i$ ($i$ 从 0 开始)个公里数的天数有 $i - 1$ 天。最大的 E 即遇到的第一个“公里数小于等于天数” 的天数。</p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li><code>while(cnt &lt; N &amp;&amp; D[cnt] &gt; cnt + 1) cnt++;</code><ul><li>也可以用 for 循环</li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>&#123; <span class="keyword">return</span> a &gt; b; &#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> N, D[<span class="number">100010</span>] = &#123;<span class="number">0</span>&#125;, cnt = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;N);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;D[i]);</span><br><span class="line">  &#125;</span><br><span class="line">  sort(D, D + N, cmp);</span><br><span class="line">  <span class="keyword">while</span>(cnt &lt; N &amp;&amp; D[cnt] &gt; cnt + <span class="number">1</span>) cnt++;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, cnt);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1059 C语言竞赛(C++)</title>
      <link href="/2018/11/27/PAT-B1059-cpp/"/>
      <url>/2018/11/27/PAT-B1059-cpp/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><a id="more"></a><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805269828059136" target="_blank" rel="noopener">B1059 C语言竞赛 </a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>元素查找。将 id 作为关键字，对应排名作为值，并设置 check 数组判断是否已经查找过。</p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li><code>printf(&quot;%04d: &quot;, id);</code><ul><li>id 为4位数字</li></ul></li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li>求素数的函数<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isprime</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i * i &lt;= x; i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(x % i == <span class="number">0</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isprime</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i * i &lt;= x; i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(x % i == <span class="number">0</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> N, K, R[<span class="number">10010</span>], check[<span class="number">10010</span>] = &#123;<span class="number">0</span>&#125;, id;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;N);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; i++)&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;id);</span><br><span class="line">    R[id] = i;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;K);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; K; i++)&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;id);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%04d: "</span>, id); <span class="comment">// id 为4位数字</span></span><br><span class="line">    <span class="keyword">if</span>(check[id] == <span class="number">0</span>)&#123;</span><br><span class="line">      <span class="keyword">if</span>(R[id] &gt;= <span class="number">1</span> &amp;&amp; R[id] &lt;= N)&#123;</span><br><span class="line">        <span class="keyword">if</span>(R[id] == <span class="number">1</span>) <span class="built_in">printf</span>(<span class="string">"Mystery Award\n"</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(isprime(R[id])) <span class="built_in">printf</span>(<span class="string">"Minion\n"</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"Chocolate\n"</span>);</span><br><span class="line">        check[id] = <span class="number">1</span>;</span><br><span class="line">      &#125;<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"Are you kidding?\n"</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"Checked\n"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1057 数零壹(C++)</title>
      <link href="/2018/11/27/PAT-B1058-cpp-unfinished/"/>
      <url>/2018/11/27/PAT-B1058-cpp-unfinished/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><a id="more"></a><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805270914383872" target="_blank" rel="noopener">B1057 数零壹 </a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>字符串处理和进制转换。</p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li>输出百分号需要使用转义字符</li><li>空置户与可能空置户不重合</li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><strong>ctype</strong> 头文件<ul><li>该头文件包含一系列处理单个字符的函数:</li><li><code>isalpha()</code><ul><li>判断字符是否为字母</li></ul></li><li><code>isdigit()</code><ul><li>判断字符是否为数字</li></ul></li><li><code>islower()</code><ul><li>判断字符是否为小写字母</li></ul></li><li><code>isupper()</code><ul><li>判断字符是否为大写字母</li></ul></li><li><code>y = tolower(x)</code><ul><li>将大写字母转换为小写字母</li></ul></li><li><code>y = toupper(x)</code><ul><li>将小写字母转换为大写字母</li></ul></li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> x;</span><br><span class="line">  <span class="keyword">int</span> N = <span class="number">0</span>, cnt[<span class="number">2</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">  <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%c"</span>, &amp;x) != EOF)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">isalpha</span>(x))&#123;</span><br><span class="line">      <span class="keyword">if</span>(<span class="built_in">isupper</span>(x)) x = <span class="built_in">tolower</span>(x);</span><br><span class="line">      N += (<span class="keyword">int</span>)(x - <span class="string">'a'</span> + <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">while</span>(N != <span class="number">0</span>)&#123;</span><br><span class="line">    cnt[N % <span class="number">2</span>]++;</span><br><span class="line">    N /= <span class="number">2</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>, cnt[<span class="number">0</span>], cnt[<span class="number">1</span>]);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1057 数零壹(C++)</title>
      <link href="/2018/11/27/PAT-B1057-cpp/"/>
      <url>/2018/11/27/PAT-B1057-cpp/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><a id="more"></a><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805270914383872" target="_blank" rel="noopener">B1057 数零壹 </a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>字符串处理和进制转换。</p><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><strong>ctype</strong> 头文件<ul><li>该头文件包含一系列处理单个字符的函数:</li><li><code>isalpha()</code><ul><li>判断字符是否为字母</li></ul></li><li><code>isdigit()</code><ul><li>判断字符是否为数字</li></ul></li><li><code>islower()</code><ul><li>判断字符是否为小写字母</li></ul></li><li><code>isupper()</code><ul><li>判断字符是否为大写字母</li></ul></li><li><code>y = tolower(x)</code><ul><li>将大写字母转换为小写字母</li></ul></li><li><code>y = toupper(x)</code><ul><li>将小写字母转换为大写字母</li></ul></li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> x;</span><br><span class="line">  <span class="keyword">int</span> N = <span class="number">0</span>, cnt[<span class="number">2</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">  <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%c"</span>, &amp;x) != EOF)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">isalpha</span>(x))&#123;</span><br><span class="line">      <span class="keyword">if</span>(<span class="built_in">isupper</span>(x)) x = <span class="built_in">tolower</span>(x);</span><br><span class="line">      N += (<span class="keyword">int</span>)(x - <span class="string">'a'</span> + <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">while</span>(N != <span class="number">0</span>)&#123;</span><br><span class="line">    cnt[N % <span class="number">2</span>]++;</span><br><span class="line">    N /= <span class="number">2</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>, cnt[<span class="number">0</span>], cnt[<span class="number">1</span>]);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1056 组合数的和(C++)</title>
      <link href="/2018/11/27/PAT-B1056-cpp/"/>
      <url>/2018/11/27/PAT-B1056-cpp/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><a id="more"></a><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805271455449088" target="_blank" rel="noopener">B1056 组合数的和</a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>对于每个数字，其出现在十位的次数为 $N - 1$，其出现在个位的次数为 $N - 1$。</p><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> N, x, ans = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;N);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;x);</span><br><span class="line">    ans = ans + x * (N - <span class="number">1</span>) + x * <span class="number">10</span> * (N - <span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1053 住房空置率(C++)</title>
      <link href="/2018/11/27/PAT-B1055-cpp-unfinished/"/>
      <url>/2018/11/27/PAT-B1055-cpp-unfinished/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><a id="more"></a><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805273284165632" target="_blank" rel="noopener">B1053 住房空置率</a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><p>-</p><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><p>-</p><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1053 住房空置率(C++)</title>
      <link href="/2018/11/27/PAT-B1054-cpp-unfinished/"/>
      <url>/2018/11/27/PAT-B1054-cpp-unfinished/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><a id="more"></a><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805273284165632" target="_blank" rel="noopener">B1053 住房空置率</a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><p>-</p><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><p>-</p><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1053 住房空置率(C++)</title>
      <link href="/2018/11/27/PAT-B1053-cpp/"/>
      <url>/2018/11/27/PAT-B1053-cpp/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><a id="more"></a><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805273284165632" target="_blank" rel="noopener">B1053 住房空置率</a></p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li>输出百分号需要使用转义字符</li><li>空置户与可能空置户不重合</li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>str += c;</code><ul><li>字符串拼接</li><li>需要的头文件：<strong>string</strong></li></ul></li><li><code>getline(cin, str);</code><ul><li>输入一整行的字符串，包括空格等</li><li>需要的头文件：<strong>iostream</strong></li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> N, D, possible_vacant = <span class="number">0</span>, vacant = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">double</span> e, temp;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d %lf %d"</span>, &amp;N, &amp;e, &amp;D);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)&#123;</span><br><span class="line">    <span class="keyword">int</span> k, cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;k);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; k; j++)&#123;</span><br><span class="line">      <span class="built_in">scanf</span>(<span class="string">"%lf"</span>, &amp;temp);</span><br><span class="line">      <span class="keyword">if</span>(temp &lt; e) cnt++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(cnt * <span class="number">2</span> &gt; k)&#123; <span class="comment">// 判断是否空置</span></span><br><span class="line">      <span class="keyword">if</span>(k &gt; D) vacant ++;</span><br><span class="line">      <span class="keyword">else</span> possible_vacant ++;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%.1f%% %.1f%%"</span>, <span class="number">100.0</span> * possible_vacant / N, <span class="number">100.0</span> * vacant / N);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1052 卖个萌(C++)</title>
      <link href="/2018/11/27/PAT-B1052-cpp/"/>
      <url>/2018/11/27/PAT-B1052-cpp/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><a id="more"></a><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805273883951104" target="_blank" rel="noopener">B1052 卖个萌</a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>字符串处理，根据括号判断位置，保存对应符号到数组中，格式化输出。</p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li>输出表情中应有圆括号</li><li>有效序号范围为 $ 1 \leq x \leq len$</li><li><code>&quot;Are you kidding me? @\\/@&quot;</code> 输出反斜杠需要用转义字符</li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>str += c;</code><ul><li>字符串拼接</li><li>需要的头文件：<strong>string</strong></li></ul></li><li><code>getline(cin, str);</code><ul><li>输入一整行的字符串，包括空格等</li><li>需要的头文件：<strong>iostream</strong></li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="built_in">string</span> <span class="built_in">list</span>[<span class="number">3</span>][<span class="number">20</span>], s;</span><br><span class="line">  <span class="keyword">int</span> N, len[<span class="number">3</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>, cnt = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++, j = <span class="number">0</span>, cnt = <span class="number">0</span>)&#123;</span><br><span class="line">    getline(<span class="built_in">cin</span>, s);</span><br><span class="line">    <span class="keyword">while</span>(j &lt; s.length())&#123;</span><br><span class="line">      <span class="keyword">if</span>(s[j++] == <span class="string">'['</span>)&#123;</span><br><span class="line">        <span class="keyword">while</span>(j &lt; s.length() &amp;&amp; s[j] != <span class="string">']'</span>) <span class="built_in">list</span>[i][cnt] += s[j++];</span><br><span class="line">        cnt++;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    len[i] = cnt;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">cin</span> &gt;&gt; N;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)&#123;</span><br><span class="line">    <span class="keyword">int</span> valid = <span class="number">0</span>, x1, x2, x3, x4, x5;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d %d %d %d"</span>, &amp;x1, &amp;x2, &amp;x3, &amp;x4, &amp;x5);</span><br><span class="line">    <span class="keyword">if</span>(x1 &gt;= <span class="number">1</span> &amp;&amp; x2 &gt;= <span class="number">1</span> &amp;&amp; x3 &gt;= <span class="number">1</span> &amp;&amp; x4 &gt;= <span class="number">1</span> &amp;&amp; x5 &gt;= <span class="number">1</span>)&#123;</span><br><span class="line">      <span class="keyword">if</span>(x1 &lt;= len[<span class="number">0</span>] &amp;&amp; x2 &lt;= len[<span class="number">1</span>] &amp;&amp; x3 &lt;= len[<span class="number">2</span>] &amp;&amp; x4 &lt;= len[<span class="number">1</span>] &amp;&amp; x5 &lt;= len[<span class="number">0</span>]) valid = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(valid) <span class="built_in">cout</span> &lt;&lt; <span class="built_in">list</span>[<span class="number">0</span>][x1<span class="number">-1</span>] &lt;&lt; <span class="string">'('</span> &lt;&lt; <span class="built_in">list</span>[<span class="number">1</span>][x2<span class="number">-1</span>] &lt;&lt; <span class="built_in">list</span>[<span class="number">2</span>][x3<span class="number">-1</span>] &lt;&lt; <span class="built_in">list</span>[<span class="number">1</span>][x4<span class="number">-1</span>] &lt;&lt; <span class="string">')'</span> &lt;&lt; <span class="built_in">list</span>[<span class="number">0</span>][x5<span class="number">-1</span>] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; <span class="string">"Are you kidding me? @\\/@"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1051 复数乘法(C++)</title>
      <link href="/2018/11/27/PAT-B1051-cpp/"/>
      <url>/2018/11/27/PAT-B1051-cpp/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><a id="more"></a><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805274496319488" target="_blank" rel="noopener">B1051 复数乘法</a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>格式化输出，考虑保留小数后为 0 时的符号。</p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li>当 $ -0.005 &lt; A &lt; 0 $ 时，保留两位小数将输出 <code>-0.00</code><ul><li>正确输出应为 <code>0.00</code>，所以需要特判</li></ul></li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>sort(S, S + N, cmp);</code><ul><li>排序函数，实现 [first, last) 范围内的排序，可以自定义排序策略 cmp 函数</li><li>所需头文件： <strong>algorithm</strong></li></ul></li><li><code>memset(s,0,sizeof(s));</code><ul><li>将 s 所指向的某一块内存中的后一定范围内的内容全部设置为指定的 ASCII 值， <code>memset(&lt;内存地址&gt;, &lt;指定的 ASCII 码&gt;, &lt;地址大小&gt;);</code></li><li>memset 函数按字节对内存块进行初始化，所以不能用它将 int 数组初始化为 0 和 -1 之外的其他值</li><li>所需头文件：<strong>cstring</strong></li></ul></li><li><code>char a[5];  memset(a, 97, 5 * sizeof(char));</code><ul><li>可将字符数组 a 初始化为 <code>aaaaa</code>；</li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">double</span> R1, P1, R2, P2, A, B;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%lf %lf %lf %lf"</span>, &amp;R1, &amp;P1, &amp;R2, &amp;P2);</span><br><span class="line">  A = R1 * R2 * (<span class="built_in">cos</span>(P1) * <span class="built_in">cos</span>(P2) - <span class="built_in">sin</span>(P1) * <span class="built_in">sin</span>(P2));</span><br><span class="line">  B = R1 * R2 * (<span class="built_in">cos</span>(P1) * <span class="built_in">sin</span>(P2) + <span class="built_in">sin</span>(P1) * <span class="built_in">cos</span>(P2));</span><br><span class="line">  <span class="keyword">if</span>(A &lt; <span class="number">0</span> &amp;&amp; A &gt; <span class="number">-0.005</span>) <span class="built_in">printf</span>(<span class="string">"0.00"</span>);</span><br><span class="line">  <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%.2f"</span>, A);</span><br><span class="line">  <span class="keyword">if</span>(B &lt; <span class="number">0</span> &amp;&amp; B &gt; <span class="number">-0.005</span>) <span class="built_in">printf</span>(<span class="string">"+0.00i\n"</span>);</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(B &gt;= <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">"+%.2fi\n"</span>, B);</span><br><span class="line">  <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%.2fi\n"</span>, B);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1049 数列的片段和(C++)</title>
      <link href="/2018/11/26/PAT-B1049-cpp/"/>
      <url>/2018/11/26/PAT-B1049-cpp/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><a id="more"></a><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805275792359424" target="_blank" rel="noopener">B1049 数列的片段和</a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>找规律，关键是求数列中每个数出现的次数。因为片段是连续的，对于第 $i$ 个（$i$ 从 1 开始）数所在的片段，片段起点可以是该数左边（包括 $i$ ）的任意一个数，即有 $i$ 种可能；片段终点可以是该数右边（包括 $i$ ）的任意一个数，即有 $n - i + 1$ 种可能。所以包含 $i$ 的片段总共有 $i * (n - i + 1)$ 种可能。<br>相似的题目： <a href="/2018/11/26/PAT-B1040-cpp/" title="PAT-B1040-有几个PAT(C++)">PAT-B1040-有几个PAT(C++)</a></p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li><code>ans += x * i * (n - i + 1);</code><ul><li>将 <code>x</code> 放在第一个位置，乘积将自动转换为浮点数再累加，保证了精度</li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> n;</span><br><span class="line">  <span class="keyword">double</span> x, ans = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lf"</span>, &amp;x);</span><br><span class="line">    ans += x * i * (n - i + <span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%.2lf"</span>, ans);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1050 螺旋矩阵(C++)</title>
      <link href="/2018/11/26/PAT-B1050-cpp/"/>
      <url>/2018/11/26/PAT-B1050-cpp/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><a id="more"></a><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805275146436608" target="_blank" rel="noopener">B1050 螺旋矩阵</a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>设置一个二维数组，将结果按照螺旋填充到二维数组中再最后输出。填充注意不要超出边界。用二维数组的默认值来表示该位置未被填充，以实现隐形的不断缩小的边界。</p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li><code>ans[i][++j]</code><ul><li>使用 <code>++j</code> 可以使得下一步循环的 j 为同一个 j；</li><li>否则要另外考虑只剩最中间一行或一列的情况；多多试错，总能 AC</li></ul></li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>sort(S, S + N, cmp);</code><ul><li>排序函数，实现 [first, last) 范围内的排序，可以自定义排序策略 cmp 函数</li><li>所需头文件： <strong>algorithm</strong></li></ul></li><li><code>memset(s,0,sizeof(s));</code><ul><li>将 s 所指向的某一块内存中的后一定范围内的内容全部设置为指定的 ASCII 值， <code>memset(&lt;内存地址&gt;, &lt;指定的 ASCII 码&gt;, &lt;地址大小&gt;);</code></li><li>memset 函数按字节对内存块进行初始化，所以不能用它将 int 数组初始化为 0 和 -1 之外的其他值</li><li>所需头文件：<strong>cstring</strong></li></ul></li><li><code>char a[5];  memset(a, 97, 5 * sizeof(char));</code><ul><li>可将字符数组 a 初始化为 <code>aaaaa</code>；</li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>&#123; <span class="keyword">return</span> a &gt; b; &#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> N, S[<span class="number">10010</span>];</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;N);</span><br><span class="line">  <span class="keyword">int</span> n = (<span class="keyword">int</span>)<span class="built_in">sqrt</span>(<span class="number">1.0</span> * N);</span><br><span class="line">  <span class="keyword">while</span>(N % n != <span class="number">0</span>) n--;</span><br><span class="line">  <span class="keyword">int</span> m = N / n;</span><br><span class="line">  <span class="keyword">int</span> ans[m][n];</span><br><span class="line">  <span class="built_in">memset</span>(ans,<span class="number">0</span>,<span class="keyword">sizeof</span>(ans));<span class="comment">//用于判断是否被赋值过</span></span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;S[i]);</span><br><span class="line">  sort(S, S + N, cmp);</span><br><span class="line">  <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>, k = <span class="number">0</span>;</span><br><span class="line">  ans[i][j] = S[k++];<span class="comment">//第一个赋值</span></span><br><span class="line">  <span class="keyword">while</span>(k &lt; N)&#123;</span><br><span class="line">    <span class="keyword">while</span>(j &lt; n - <span class="number">1</span> &amp;&amp; !ans[i][j+<span class="number">1</span>]) ans[i][++j] = S[k++];<span class="comment">//从左向右</span></span><br><span class="line">    <span class="keyword">while</span>(i &lt; m - <span class="number">1</span> &amp;&amp; !ans[i+<span class="number">1</span>][j]) ans[++i][j] = S[k++];<span class="comment">//从上向下</span></span><br><span class="line">    <span class="keyword">while</span>(j &gt; <span class="number">0</span> &amp;&amp; !ans[i][j<span class="number">-1</span>]) ans[i][--j] = S[k++];<span class="comment">//从右往左</span></span><br><span class="line">    <span class="keyword">while</span>(i &gt; <span class="number">0</span> &amp;&amp; !ans[i<span class="number">-1</span>][j]) ans[--i][j] = S[k++];<span class="comment">//从下往上</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++)&#123;</span><br><span class="line">      <span class="keyword">if</span>(j != <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">"%d"</span>, ans[i][j]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1048 数字加密(C++)</title>
      <link href="/2018/11/26/PAT-B1048-cpp/"/>
      <url>/2018/11/26/PAT-B1048-cpp/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><a id="more"></a><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805276438282240" target="_blank" rel="noopener">B1048 数字加密</a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>字符串处理。将两个字符串逆转，并在尾部填充 ‘0’，使位数一致，以便确定偶数位和奇数位。</p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li>当两个数长度不统一时，缺少的位默认为 0，然后同样按照规则求。因此需要先</li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>reverse(num, num + N);</code><ul><li>对数组 [first, last) 范围内的元素逆转</li><li>需要头文件：<strong>algorithm</strong></li></ul></li><li><code>A += &#39;0&#39;;</code><ul><li>字符串拼接，补 0</li><li>需要的头文件：<strong>string</strong></li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="built_in">string</span> A, B;</span><br><span class="line">  <span class="keyword">char</span> C[] = &#123;<span class="string">'J'</span>, <span class="string">'Q'</span>, <span class="string">'K'</span>&#125;;</span><br><span class="line">  <span class="built_in">cin</span> &gt;&gt; A &gt;&gt; B;</span><br><span class="line">  reverse(A.begin(), A.end());</span><br><span class="line">  reverse(B.begin(), B.end());</span><br><span class="line">  <span class="keyword">while</span>(A.length() &lt; B.length()) A += <span class="string">'0'</span>; <span class="comment">//长度统一</span></span><br><span class="line">  <span class="keyword">while</span>(B.length() &lt; A.length()) B += <span class="string">'0'</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>, x; i &lt; A.length() &amp;&amp; i &lt; B.length(); i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>((i + <span class="number">1</span>) % <span class="number">2</span> == <span class="number">0</span>)&#123; <span class="comment">// 偶数</span></span><br><span class="line">      x = (<span class="keyword">int</span>)(B[i] - A[i]);</span><br><span class="line">      <span class="keyword">if</span>(x &lt; <span class="number">0</span>) x += <span class="number">10</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123; <span class="comment">// 奇数</span></span><br><span class="line">      x = (<span class="keyword">int</span>)(A[i] - <span class="string">'0'</span> + B[i] - <span class="string">'0'</span>) % <span class="number">13</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(x &lt; <span class="number">10</span>) B[i] = (<span class="keyword">char</span>)(x + <span class="string">'0'</span>);</span><br><span class="line">    <span class="keyword">else</span> B[i] = C[x - <span class="number">10</span>];</span><br><span class="line">  &#125;</span><br><span class="line">  reverse(B.begin(), B.end());</span><br><span class="line">  <span class="built_in">cout</span> &lt;&lt; B &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1047 编程团体赛(C++)</title>
      <link href="/2018/11/26/PAT-B1047-cpp/"/>
      <url>/2018/11/26/PAT-B1047-cpp/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><a id="more"></a><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805277163896832" target="_blank" rel="noopener">B1047 编程团体赛</a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>利用 hash 数组记录每个队伍的累计分数，同时更新最大分数以及对应的队伍编号。</p><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> team[<span class="number">1005</span>] = &#123;<span class="number">0</span>&#125;, N, max_score = <span class="number">-1</span>, max_id;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;N);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)&#123;</span><br><span class="line">    <span class="keyword">int</span> id, x, score;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d-%d %d"</span>, &amp;id, &amp;x, &amp;score);</span><br><span class="line">    team[id] += score;</span><br><span class="line">    <span class="keyword">if</span>(team[id] &gt; max_score)&#123;</span><br><span class="line">      max_score = team[id];</span><br><span class="line">      max_id = id;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>, max_id, max_score);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1046 划拳(C++)</title>
      <link href="/2018/11/26/PAT-B1046-cpp/"/>
      <url>/2018/11/26/PAT-B1046-cpp/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><a id="more"></a><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805277847568384" target="_blank" rel="noopener">B1046 划拳</a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>简单的逻辑判断题，使用 if-else 判断一下即可。</p><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> A_lose = <span class="number">0</span>, B_lose = <span class="number">0</span>, N;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;N);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)&#123;</span><br><span class="line">    <span class="keyword">int</span> A1, A2, B1, B2;</span><br><span class="line">    <span class="keyword">int</span> A_win = <span class="number">0</span>, B_win = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d %d %d"</span>, &amp;A1, &amp;A2, &amp;B1, &amp;B2);</span><br><span class="line">    <span class="keyword">if</span>(A2 == A1 + B1) A_win = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(B2 == A1 + B1) B_win = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(A_win == <span class="number">1</span> &amp;&amp; B_win == <span class="number">0</span>) B_lose++;</span><br><span class="line">    <span class="keyword">if</span>(A_win == <span class="number">0</span> &amp;&amp; B_win == <span class="number">1</span>) A_lose++;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>, A_lose, B_lose);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1045 快速排序(C++)</title>
      <link href="/2018/11/26/PAT-B1045-cpp/"/>
      <url>/2018/11/26/PAT-B1045-cpp/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><a id="more"></a><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805278589960192" target="_blank" rel="noopener">B1045 快速排序</a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>找到每个数字中左边的最大元素、右边的最小元素，再与该位置的元素进行比较，即可获知该元素是否可能为主元。如果使用多次循环寻找最值将可能超时。因此，这里用两个数组分别存储每个位置左右的最值，只需要两次遍历，即可获得所需数据，最后再进行一次遍历即可获得最终结果。</p><p>可以将结果存放到可变数组中，最后排个序。但因为数字没有重复，因此也可以直接将结果存到集合中，集合将自动排序获得升序序列。</p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li>结尾一定要输出换行，否则当结果个数为 0 时，第二行没有输出将报错。</li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>y = max(a, b)</code><ul><li>获取两个元素中的较大值</li><li>需要头文件 <strong>algorithm</strong></li></ul></li><li><code>set &lt;int&gt; ans;</code><ul><li>创建了一个集合，用于存放结果</li><li><code>ans.insert(S[i])</code><ul><li>向集合中插入一个元素</li></ul></li><li>需要头文件 <strong>set</strong></li></ul></li><li><code>for(auto it = ans.begin(); it != ans.end(); it++){ }</code><ul><li>可用于遍历 map/vector/set 等容器， <code>auto</code> 实现自动匹配对应迭代器类型</li><li><code>it</code> 为迭代器， <code>*it</code> 为对应元素</li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> N, S[<span class="number">100010</span>], Left_max[<span class="number">100010</span>], Right_min[<span class="number">100010</span>];</span><br><span class="line">  <span class="built_in">set</span> &lt;<span class="keyword">int</span>&gt; ans;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;N);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)&#123; <span class="comment">// 获得左边最大数的序列</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;S[i]);</span><br><span class="line">    <span class="keyword">if</span>(i == <span class="number">0</span>) Left_max[<span class="number">0</span>] = S[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">else</span> Left_max[i] = max(Left_max[i - <span class="number">1</span>], S[i - <span class="number">1</span>]);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = N - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)&#123; <span class="comment">//获得右边最小数的序列</span></span><br><span class="line">    <span class="keyword">if</span>(i == N - <span class="number">1</span>) Right_min[i] = S[i];</span><br><span class="line">    <span class="keyword">else</span> Right_min[i] = min(Right_min[i + <span class="number">1</span>], S[i + <span class="number">1</span>]);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)&#123; <span class="comment">// 判断是否可能为主元</span></span><br><span class="line">    <span class="keyword">if</span>(S[i] &gt;= Left_max[i] &amp;&amp; S[i] &lt;= Right_min[i]) ans.insert(S[i]);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans.size());</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">auto</span> it = ans.begin(); it != ans.end(); it++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(it != ans.begin()) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>, *it);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"\n"</span>); <span class="comment">// 不能少，否则会有格式错误</span></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1044 火星数字(C++)</title>
      <link href="/2018/11/26/PAT-B1044-cpp/"/>
      <url>/2018/11/26/PAT-B1044-cpp/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><a id="more"></a><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805279328157696" target="_blank" rel="noopener">B1044 火星数字</a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>进制转换。通过字符串处理，先判断是地球数字还是火星数字，然后按照要求进行转换。</p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li>“tret” 长度为 4，可通过长度直接判断是否为 0.</li><li>13 &lt;=&gt; “tam”; 26 &lt;=&gt; “hel”; …<ul><li>没有多余的部分。即 13 的倍数和小于 13 的数都是长度为 3 的字符串</li></ul></li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>isdigit(s[0])</code><ul><li>判断字符是否为数字</li><li>需要头文件 <strong>cctype</strong></li></ul></li><li><code>s.substr(&lt;截取部分的首地址&gt;, &lt;截取部分的长度&gt;)</code><ul><li>截取字符串的一部分生成新的字符串</li><li>需要头文件 <strong>string</strong></li></ul></li><li><code>while(j &lt; 13 &amp;&amp; l1[j] != s1) j++;</code><ul><li>查找元素在列表中的位置，找到了或找到列表末尾都将退出循环</li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> N;</span><br><span class="line">  <span class="built_in">string</span> s, l1[] = &#123;<span class="string">"tret"</span>, <span class="string">"jan"</span>, <span class="string">"feb"</span>, <span class="string">"mar"</span>, <span class="string">"apr"</span>, <span class="string">"may"</span>, <span class="string">"jun"</span>, <span class="string">"jly"</span>, <span class="string">"aug"</span>, <span class="string">"sep"</span>, <span class="string">"oct"</span>, <span class="string">"nov"</span>, <span class="string">"dec"</span>&#125;;</span><br><span class="line">  <span class="built_in">string</span> l2[] = &#123;<span class="string">"tret"</span>, <span class="string">"tam"</span>, <span class="string">"hel"</span>, <span class="string">"maa"</span>, <span class="string">"huh"</span>, <span class="string">"tou"</span>, <span class="string">"kes"</span>, <span class="string">"hei"</span>, <span class="string">"elo"</span>, <span class="string">"syy"</span>, <span class="string">"lok"</span>, <span class="string">"mer"</span>, <span class="string">"jou"</span>&#125;;</span><br><span class="line">  <span class="built_in">cin</span> &gt;&gt; N;</span><br><span class="line">  getchar();</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)&#123;</span><br><span class="line">    getline(<span class="built_in">cin</span>, s);</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">isdigit</span>(s[<span class="number">0</span>]))&#123; <span class="comment">// 为地球数字</span></span><br><span class="line">      <span class="keyword">int</span> num = stoi(s);</span><br><span class="line">      <span class="keyword">int</span> a = num / <span class="number">13</span>, b = num % <span class="number">13</span>;</span><br><span class="line">      <span class="keyword">if</span>(a == <span class="number">0</span>) <span class="built_in">cout</span> &lt;&lt; l1[b] &lt;&lt; <span class="built_in">endl</span>; <span class="comment">//小于 13</span></span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span>(b == <span class="number">0</span>) <span class="built_in">cout</span> &lt;&lt; l2[a] &lt;&lt; <span class="built_in">endl</span>; <span class="comment">// 为 13 的倍数</span></span><br><span class="line">      <span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; l2[a] + <span class="string">' '</span> + l1[b] &lt;&lt; <span class="built_in">endl</span>; <span class="comment">// 其他</span></span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;   <span class="comment">// 为火星数字</span></span><br><span class="line">      <span class="built_in">string</span> s1, s2;</span><br><span class="line">      <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>, ans;</span><br><span class="line">      s1 = s.substr(<span class="number">0</span>, <span class="number">3</span>);</span><br><span class="line">      <span class="keyword">if</span>(s.length() == <span class="number">4</span>) ans = <span class="number">0</span>; <span class="comment">// 为 0</span></span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span>(s.length() &lt;= <span class="number">3</span>)&#123; <span class="comment">// 小于 13 或为 13 的倍数</span></span><br><span class="line">        <span class="keyword">while</span>(j &lt; <span class="number">13</span> &amp;&amp; l1[j] != s1) j++;</span><br><span class="line">        <span class="keyword">while</span>(i &lt; <span class="number">13</span> &amp;&amp; l2[i] != s1) i++;</span><br><span class="line">        ans = (i == <span class="number">13</span>) ? j : i * <span class="number">13</span>;</span><br><span class="line">      &#125;<span class="keyword">else</span>&#123; <span class="comment">// 其他</span></span><br><span class="line">        s2 = s.substr(<span class="number">4</span>, <span class="number">3</span>);</span><br><span class="line">        <span class="keyword">while</span>(i &lt; <span class="number">13</span> &amp;&amp; l2[i] != s1) i++;</span><br><span class="line">        <span class="keyword">while</span>(j &lt; <span class="number">13</span> &amp;&amp; l1[j] != s2) j++;</span><br><span class="line">        ans = i * <span class="number">13</span> + j;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1043 输出PATest(C++)</title>
      <link href="/2018/11/26/PAT-B1043-cpp/"/>
      <url>/2018/11/26/PAT-B1043-cpp/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><a id="more"></a><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805280074743808" target="_blank" rel="noopener">B1043 输出PATest</a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>利用一个 hash 数组记录每个英文字母出现的次数。</p><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>while(scanf(&quot;%c&quot;, &amp;temp) != EOF){ }</code><ul><li>可用于判断输入是否结束，自己测试运行时可用 <code>ctrl + z</code> 作为输入结束，程序可识别</li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> temp, <span class="built_in">list</span>[] = &#123;<span class="string">'P'</span>, <span class="string">'A'</span>, <span class="string">'T'</span>, <span class="string">'e'</span>, <span class="string">'s'</span>, <span class="string">'t'</span>&#125;;</span><br><span class="line">  <span class="keyword">int</span> cnt[<span class="number">6</span>] = &#123;<span class="number">0</span>&#125;, n = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%c"</span>, &amp;temp) != EOF)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++)&#123;</span><br><span class="line">      <span class="keyword">if</span>(<span class="built_in">list</span>[i] == temp)&#123;</span><br><span class="line">        cnt[i]++;</span><br><span class="line">        n++;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">while</span>(n &gt; <span class="number">0</span>)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++)&#123;</span><br><span class="line">      <span class="keyword">if</span>(cnt[i] &gt; <span class="number">0</span>)&#123;</span><br><span class="line">        cnt[i]--;</span><br><span class="line">        n--;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%c"</span>, <span class="built_in">list</span>[i]);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1042 字符统计(C++)</title>
      <link href="/2018/11/26/PAT-B1042-cpp/"/>
      <url>/2018/11/26/PAT-B1042-cpp/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><a id="more"></a><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805280817135616" target="_blank" rel="noopener">B1042 字符统计</a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>利用一个 hash 数组记录每个英文字母出现的次数，最后按顺序遍历，即保证了同频率下取字母序较小的结果。</p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li>出现次数相同的字母，取字母序较小的那个</li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><strong>cctype</strong> 头文件包含一系列处理单个字符的函数<ul><li><code>isalpha(temp)</code><ul><li>判断该字符是否为字母，如是返回 true</li></ul></li><li><code>isupper(temp)</code><ul><li>判断字符是否为大写</li></ul></li><li><code>islower(temp)</code><ul><li>判断字符是否为小写</li></ul></li><li><code>y = tolower(x)</code><ul><li>将大写字母转换为小写字母</li></ul></li><li><code>y = toupper(x)</code><ul><li>将小写字母转换为大写字母</li></ul></li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> max_cnt = <span class="number">-1</span>, count[<span class="number">256</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">  <span class="keyword">char</span> temp, ans;</span><br><span class="line">  <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%c"</span>, &amp;temp) != EOF)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">isupper</span>(temp)) temp = <span class="built_in">tolower</span>(temp);</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">isalpha</span>(temp)) count[(<span class="keyword">int</span>)temp]++;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">256</span>; i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(max_cnt &lt; count[i])&#123;</span><br><span class="line">      max_cnt = count[i];</span><br><span class="line">      ans = (<span class="keyword">char</span>)i;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%c %d\n"</span>, ans, max_cnt);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1041 考试座位号(C++)</title>
      <link href="/2018/11/26/PAT-B1041-cpp/"/>
      <url>/2018/11/26/PAT-B1041-cpp/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><a id="more"></a><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805281567916032" target="_blank" rel="noopener">B1041 考试座位号</a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>因为题目保证了考试座位号不会重复，所以可以将试机座位号作为 hash 数组的关键字，正好方便后面的查询。</p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li>14 位纯数字的准考证号其实也可以用 long long 来保存<ul><li><code>scanf(&quot;%lld %d %d&quot;, id, &amp;no1, &amp;no2);</code></li></ul></li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li>无</li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span>&#123;</span></span><br><span class="line">  <span class="keyword">int</span> num;</span><br><span class="line">  <span class="keyword">char</span> id[<span class="number">15</span>];</span><br><span class="line">&#125;S[<span class="number">1010</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> N, k, no1, no2;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;N);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; i++)&#123;</span><br><span class="line">    <span class="keyword">char</span> id[<span class="number">15</span>];</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s %d %d"</span>, id, &amp;no1, &amp;no2);</span><br><span class="line">    S[no1].num = no2;</span><br><span class="line">    <span class="built_in">strcpy</span>(S[no1].id, id);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;k);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; k; i++)&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;no1);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%s %d\n"</span>, S[no1].id, S[no1].num);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1040 有几个PAT(C++)</title>
      <link href="/2018/11/26/PAT-B1040-cpp/"/>
      <url>/2018/11/26/PAT-B1040-cpp/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><a id="more"></a><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805282389999616" target="_blank" rel="noopener">B1040 有几个PAT</a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>逻辑题。先遍历字符串，对每一个 ‘A’ ，有效的 ‘PAT’ 个数 $m = left_P * right_T$，即为 ‘A’ 左侧的 ‘P’ 字符数与其右侧的 ‘T’ 字符数的乘积。</p><p>每个 ‘A’ 字符左右的 ‘P’ 和 ‘T’ 数量可以通过他们的总数间接求得。一边遍历 ‘A’ 一边可以得到 left_P， right_T = 总的 ‘T’ - left_T。</p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li>无</li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li>无</li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> left_P = <span class="number">0</span>, right_T = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">long</span> <span class="keyword">long</span> ans = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">string</span> S;</span><br><span class="line">  getline(<span class="built_in">cin</span>, S);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; S.length(); i++) &#123;</span><br><span class="line">    <span class="keyword">if</span>(S[i] == <span class="string">'T'</span>) right_T++;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; S.length(); i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(S[i] == <span class="string">'P'</span>) left_P++;</span><br><span class="line">    <span class="keyword">if</span>(S[i] == <span class="string">'T'</span>) right_T--;</span><br><span class="line">    <span class="keyword">if</span>(S[i] == <span class="string">'A'</span>) ans = (ans + left_P * right_T) % <span class="number">1000000007</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1039 到底买不买(C++)</title>
      <link href="/2018/11/26/PAT-B1039-cpp/"/>
      <url>/2018/11/26/PAT-B1039-cpp/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><a id="more"></a><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805283241443328" target="_blank" rel="noopener">B1039 到底买不买 </a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>使用 hash 数组存储提供的珠串中每种颜色出现的次数，再和想做的串的颜色进行比较，遇到一个想要的颜色，数组对应减 1 ，减到 0 以下则说明不能购买，同时记录缺少的个数。如果没有减到 0 以下，则在最后再统计一遍 hash 数组中的珠子个数。</p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li>无</li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li>hash 列表</li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> hashtable[<span class="number">256</span>] = &#123;<span class="number">0</span>&#125;, r = <span class="number">0</span>, l = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">string</span> s1, s2;</span><br><span class="line">  getline(<span class="built_in">cin</span>, s1);</span><br><span class="line">  getline(<span class="built_in">cin</span>, s2);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s1.length(); i++)&#123;</span><br><span class="line">    hashtable[(<span class="keyword">int</span>)s1[i]]++;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s2.length(); i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(hashtable[(<span class="keyword">int</span>)s2[i]] &gt; <span class="number">0</span>) hashtable[(<span class="keyword">int</span>)s2[i]]--;</span><br><span class="line">    <span class="keyword">else</span> l++;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">256</span>; i++) r += hashtable[i];</span><br><span class="line">  <span class="keyword">if</span>(l &gt; <span class="number">0</span>) <span class="built_in">cout</span> &lt;&lt; <span class="string">"No "</span> &lt;&lt; l &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">  <span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; <span class="string">"Yes "</span> &lt;&lt; r &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1038 统计同成绩学生(C++)</title>
      <link href="/2018/11/26/PAT-B1038-cpp/"/>
      <url>/2018/11/26/PAT-B1038-cpp/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><a id="more"></a><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805284092887040" target="_blank" rel="noopener">B1038 统计同成绩学生 </a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>使用 hash 数组存储对应成绩的人数，分数作为关键字，值为人数。查找的记录作为关键字，可直接返回对应人数。</p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li>无</li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li>hash 列表</li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> N, k, x, score[<span class="number">101</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;N);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;x);</span><br><span class="line">    score[x]++;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;k);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; k; i++)&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;x);</span><br><span class="line">    <span class="keyword">if</span>(i != <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>, score[x]);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1037 在霍格沃茨找零钱(C++)</title>
      <link href="/2018/11/26/PAT-B1037-cpp/"/>
      <url>/2018/11/26/PAT-B1037-cpp/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><a id="more"></a><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805284923359232" target="_blank" rel="noopener">B1037 在霍格沃茨找零钱</a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>简单的进制转换问题，涉及的数目比较小，就直接全部换成昆特再计算。</p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li>无</li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li>无</li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> ans, P, A, p1, p2, p3, a1, a2, a3;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d.%d.%d %d.%d.%d"</span>, &amp;p1, &amp;p2, &amp;p3, &amp;a1, &amp;a2, &amp;a3);</span><br><span class="line">  P = p1 * <span class="number">17</span> * <span class="number">29</span> + p2 * <span class="number">29</span> + p3;</span><br><span class="line">  A = a1 * <span class="number">17</span> * <span class="number">29</span> + a2 * <span class="number">29</span> + a3;</span><br><span class="line">  ans = A - P;</span><br><span class="line">  <span class="keyword">if</span>(ans &lt; <span class="number">0</span>)&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"-"</span>);</span><br><span class="line">    ans = -ans;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%d.%d.%d\n"</span>, ans/<span class="number">17</span>/<span class="number">29</span>, ans/<span class="number">29</span>%<span class="number">17</span>, ans%<span class="number">29</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1036 跟奥巴马一起编程(C++)</title>
      <link href="/2018/11/26/PAT-B1036-cpp/"/>
      <url>/2018/11/26/PAT-B1036-cpp/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><a id="more"></a><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805285812551680" target="_blank" rel="noopener">B1036 跟奥巴马一起编程</a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>简单的图形打印。</p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li>注意行数为列数的 50% 的四舍五入</li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li>无</li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> N;</span><br><span class="line">  <span class="keyword">char</span> c;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d %c"</span>, &amp;N, &amp;c);</span><br><span class="line">  <span class="keyword">int</span> r = (N + <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; r; i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(i == <span class="number">0</span> || i == r - <span class="number">1</span>)&#123;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; N; j++) <span class="built_in">printf</span>(<span class="string">"%c"</span>, c);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; N; j++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(j == <span class="number">0</span> || j == N - <span class="number">1</span>) <span class="built_in">printf</span>(<span class="string">"%c"</span>, c);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1035 插入与归并(C++)</title>
      <link href="/2018/11/22/PAT-B1035-cpp/"/>
      <url>/2018/11/22/PAT-B1035-cpp/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><a id="more"></a><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805286714327040" target="_blank" rel="noopener">B1035 插入与归并</a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>插入排序中间序列特点：已排序部分有序，未排序部分不变。因此可以通过该特点判断是否为插入排序，否则为归并排序。</p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li>注意输出的是下一轮排序序列</li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li>插入排序</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InsertionSort1</span><span class="params">()</span></span>&#123; <span class="comment">// 标准操作</span></span><br><span class="line">  j = i + <span class="number">1</span>;</span><br><span class="line">  temp = S2[j];</span><br><span class="line">  <span class="keyword">while</span>(j &gt; <span class="number">0</span> &amp;&amp; temp &lt; S2[j - <span class="number">1</span>])&#123;</span><br><span class="line">    S2[j] = S2[j - <span class="number">1</span>];</span><br><span class="line">    j--;</span><br><span class="line">  &#125;</span><br><span class="line">  S2[j] = temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InsertionSort2</span><span class="params">()</span></span>&#123; <span class="comment">// 偷懒操作</span></span><br><span class="line">  sort(S1, S1 + i + <span class="number">2</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>归并排序</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mergesort</span><span class="params">()</span></span>&#123; <span class="comment">//归并排序</span></span><br><span class="line">  <span class="keyword">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> step = <span class="number">2</span>; !flag &amp;&amp; step / <span class="number">2</span> &lt; N; step *= <span class="number">2</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(issame(S1, S2) == <span class="literal">true</span>) flag = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i+=step)&#123;</span><br><span class="line">      sort(S1 + i, S1 + min(i + step, N));</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> N, S1[<span class="number">110</span>], S2[<span class="number">110</span>];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">issame</span><span class="params">(<span class="keyword">int</span> a[], <span class="keyword">int</span> b[])</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span>(i &lt; N &amp;&amp; a[i] == b[i]) i++;</span><br><span class="line">  <span class="keyword">return</span> i == N;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mergesort</span><span class="params">()</span></span>&#123; <span class="comment">//归并排序</span></span><br><span class="line">  <span class="keyword">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> step = <span class="number">2</span>; !flag &amp;&amp; step / <span class="number">2</span> &lt; N; step *= <span class="number">2</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(issame(S1, S2) == <span class="literal">true</span>) flag = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i+=step)&#123;</span><br><span class="line">      sort(S1 + i, S1 + min(i + step, N));</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;N);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)&#123; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;S1[i]); &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)&#123; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;S2[i]); &#125;</span><br><span class="line">  <span class="keyword">int</span> i, j;</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; N - <span class="number">1</span> &amp;&amp; S2[i] &lt;= S2[i + <span class="number">1</span>]; i++);</span><br><span class="line">  <span class="keyword">for</span> (j = i + <span class="number">1</span>; S1[j] == S2[j] &amp;&amp; j &lt; N; j++);</span><br><span class="line">  <span class="keyword">if</span> (j == N) &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Insertion Sort\n"</span>);</span><br><span class="line">    sort(S1, S1 + i + <span class="number">2</span>); <span class="comment">// 插入排序</span></span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Merge Sort\n"</span>);</span><br><span class="line">    mergesort();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(i != <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>, S1[i]);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1034 有理数四则运算(C++)</title>
      <link href="/2018/11/22/PAT-B1034-cpp/"/>
      <url>/2018/11/22/PAT-B1034-cpp/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><a id="more"></a><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805287624491008" target="_blank" rel="noopener">B1034 有理数四则运算</a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>分情况讨论。</p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li>不用 long int 会溢出</li><li>要注意及时化简避免溢出</li><li>除法的时候注意符号</li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>long int gcd(long int a, long int b){ return b == 0 ? abs(a) : gcd(b, a % b);}</code><ul><li>获取最大公约数的函数，记住就好</li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">long</span> <span class="keyword">int</span> a, <span class="keyword">long</span> <span class="keyword">int</span> b)</span></span>&#123; <span class="keyword">return</span> b == <span class="number">0</span> ? <span class="built_in">abs</span>(a) : gcd(b, a % b);&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">long</span> <span class="keyword">int</span> &amp;a, <span class="keyword">long</span> <span class="keyword">int</span> &amp;b)</span></span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(a &lt; <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">"("</span>);</span><br><span class="line">  <span class="keyword">long</span> <span class="keyword">int</span> temp = gcd(a, b);</span><br><span class="line">  a /= temp;</span><br><span class="line">  b /= temp;</span><br><span class="line">  <span class="keyword">if</span>(a % b == <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">"%ld"</span>, a/b);</span><br><span class="line">  <span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a / b != <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">"%ld "</span>, a/b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%ld/%ld"</span>, (a / b &lt; <span class="number">0</span>) ? (- a % b) : a % b , b);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(a &lt; <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">")"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">long</span> <span class="keyword">int</span> a1, b1, a2, b2, c1, c2;</span><br><span class="line">  <span class="keyword">char</span> op[] = &#123;<span class="string">'+'</span>, <span class="string">'-'</span>, <span class="string">'*'</span>, <span class="string">'/'</span>&#125;;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%ld/%ld %ld/%ld"</span>, &amp;a1, &amp;b1, &amp;a2, &amp;b2);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)&#123;</span><br><span class="line">    print(a1, b1);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">" %c "</span>, op[i]);</span><br><span class="line">    print(a2, b2);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">" = "</span>);</span><br><span class="line">    <span class="keyword">if</span>(i == <span class="number">0</span>)&#123; <span class="comment">// a + b</span></span><br><span class="line">      c1 = a1 * b2 + a2 * b1;</span><br><span class="line">      c2 = b1 * b2;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(i == <span class="number">1</span>)&#123; <span class="comment">// a - b</span></span><br><span class="line">      c1 = a1 * b2 - a2 * b1;</span><br><span class="line">      c2 = b1 * b2;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(i == <span class="number">2</span>)&#123; <span class="comment">// a * b</span></span><br><span class="line">      c1 = a1 * a2;</span><br><span class="line">      c2 = b1 * b2;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(i == <span class="number">3</span>)&#123; <span class="comment">// a / b</span></span><br><span class="line">      <span class="keyword">if</span>(a2 == <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">"Inf"</span>);</span><br><span class="line">      <span class="keyword">else</span>&#123;</span><br><span class="line">        c1 = a1 * b2;</span><br><span class="line">        c2 = <span class="built_in">abs</span>(b1 * a2);</span><br><span class="line">        <span class="keyword">if</span>(a2 &lt; <span class="number">0</span>) c1 = - c1;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(i !=<span class="number">3</span> || (i == <span class="number">3</span> &amp;&amp; a2 != <span class="number">0</span>) ) print(c1, c2);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1033 旧键盘打字(C++)</title>
      <link href="/2018/11/22/PAT-B1033-cpp/"/>
      <url>/2018/11/22/PAT-B1033-cpp/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><a id="more"></a><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805288530460672" target="_blank" rel="noopener">B1033 旧键盘打字</a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>字符串处理，分情况讨论，可使用 map 记录损坏的键位。</p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li><ul><li>键损坏无法打出大写字母</li></ul></li><li>第一行可能为空</li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>getline(cin, str);</code><ul><li>输入一整行的字符串，包括空格等</li><li>需要的头文件：<strong>string</strong></li></ul></li><li><code>map&lt;char, int&gt; broken;</code><ul><li>用于映射，键和值可以是任意类型</li><li>直接使用 <code>m[&lt;键&gt;] = &lt;值&gt;</code> 即可向map中添加一组键值对</li><li>需要的头文件：<strong>map</strong></li></ul></li><li>cctype 头文件包含一系列处理单个字符的函数:<ul><li><code>isalnum()</code><ul><li>判断字符是否为字母或者数字</li></ul></li><li><code>isalpha()</code><ul><li>判断字符是否为字母</li></ul></li><li><code>isblank()</code><ul><li>判断字符是否为空格</li></ul></li><li><code>isdigit()</code><ul><li>判断字符是否为数字</li></ul></li><li><code>islower()</code><ul><li>判断字符是否为小写字母</li></ul></li><li><code>isupper()</code><ul><li>判断字符是否为大写字母</li></ul></li><li><code>y = tolower(x)</code><ul><li>将大写字母转换为小写字母</li></ul></li><li><code>y = toupper(x)</code><ul><li>将小写字母转换为大写字母</li></ul></li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="built_in">string</span> s1, s2;</span><br><span class="line">  getline(<span class="built_in">cin</span>, s1);</span><br><span class="line">  getline(<span class="built_in">cin</span>, s2);</span><br><span class="line">  <span class="built_in">map</span>&lt;<span class="keyword">char</span>, <span class="keyword">int</span>&gt; broken;</span><br><span class="line">  <span class="keyword">if</span>(s1.length() == <span class="number">0</span>) <span class="built_in">cout</span> &lt;&lt; s2;</span><br><span class="line">  <span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s1.length(); i++) broken[s1[i]] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>, valid = <span class="literal">true</span>; i &lt; s2.length(); i++, valid = <span class="literal">true</span>)&#123;</span><br><span class="line">      <span class="keyword">char</span> temp = s2[i];</span><br><span class="line">      <span class="keyword">if</span>(broken[temp] &gt; <span class="number">0</span>) valid = <span class="literal">false</span>;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">islower</span>(temp) &amp;&amp; broken[<span class="built_in">toupper</span>(temp)] &gt; <span class="number">0</span>) valid = <span class="literal">false</span>;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">isupper</span>(temp) &amp;&amp; broken[<span class="string">'+'</span>] &gt; <span class="number">0</span>) valid = <span class="literal">false</span>;</span><br><span class="line">      <span class="keyword">if</span>(valid) <span class="built_in">printf</span>(<span class="string">"%c"</span>, temp);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1032 挖掘机技术哪家强(C++)</title>
      <link href="/2018/11/22/PAT-B1032-cpp/"/>
      <url>/2018/11/22/PAT-B1032-cpp/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><a id="more"></a><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805289432236032" target="_blank" rel="noopener">B1032 挖掘机技术哪家强</a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>用一个数组记录所有学校的总分，同时更新最大分数及学校id。</p><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> N, max_id = <span class="number">0</span>, max_score = <span class="number">0</span>, score[<span class="number">100010</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;N);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)&#123;</span><br><span class="line">    <span class="keyword">int</span> id, s;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;id, &amp;s);</span><br><span class="line">    score[id] += s;</span><br><span class="line">    <span class="keyword">if</span>(max_score &lt; score[id])&#123;</span><br><span class="line">      max_score = score[id];</span><br><span class="line">      max_id = id;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>, max_id, max_score);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1031 查验身份证(C++)</title>
      <link href="/2018/11/22/PAT-B1031-cpp/"/>
      <url>/2018/11/22/PAT-B1031-cpp/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><a id="more"></a><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805290334011392" target="_blank" rel="noopener">B1031 查验身份证</a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>简单的字符串处理。</p><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>isdigit()</code><ul><li>判断字符是否为数字</li><li>所需头文件 <strong>cctype</strong></li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> N, Z = <span class="number">0</span>, cnt = <span class="number">0</span>, weight[] = &#123;<span class="number">7</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">8</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">6</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">8</span>,<span class="number">4</span>,<span class="number">2</span>&#125;;</span><br><span class="line">  <span class="keyword">char</span> M[] = &#123;<span class="string">'1'</span>, <span class="string">'0'</span>, <span class="string">'X'</span>, <span class="string">'9'</span>, <span class="string">'8'</span>, <span class="string">'7'</span>, <span class="string">'6'</span>, <span class="string">'5'</span>, <span class="string">'4'</span>, <span class="string">'3'</span>, <span class="string">'2'</span>&#125;;</span><br><span class="line">  <span class="built_in">cin</span> &gt;&gt; N;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++, Z = <span class="number">0</span>)&#123;</span><br><span class="line">    <span class="built_in">string</span> id;</span><br><span class="line">    <span class="keyword">bool</span> valid = <span class="literal">true</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; id;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; valid &amp;&amp; j &lt; id.length() - <span class="number">1</span>; j++)&#123;</span><br><span class="line">      <span class="keyword">if</span>(<span class="built_in">isdigit</span>(id[j]) == <span class="literal">false</span>) valid = <span class="literal">false</span>;</span><br><span class="line">      <span class="keyword">if</span>(valid) Z = Z + weight[j] * (<span class="keyword">int</span>)(id[j] - <span class="string">'0'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    Z = Z % <span class="number">11</span>;</span><br><span class="line">    <span class="keyword">if</span>(id[<span class="number">17</span>] != M[Z]) valid = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span>(valid == <span class="literal">false</span>)&#123;</span><br><span class="line">      cnt++;</span><br><span class="line">      <span class="built_in">cout</span> &lt;&lt; id &lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(cnt == <span class="number">0</span>) <span class="built_in">cout</span> &lt;&lt; <span class="string">"All passed"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1030 完美数列(C++)</title>
      <link href="/2018/11/22/PAT-B1030-cpp/"/>
      <url>/2018/11/22/PAT-B1030-cpp/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><a id="more"></a><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805291311284224" target="_blank" rel="noopener">B1030 完美数列</a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>对数字进行排序，设定两个“指针 i 和 j ”分别为完美数列的头和尾，在数组中不断移动“指针”并记录当前完美数列长度，个数正好为 j - i + 1，同时更新完美数列最大长度。</p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li>$m * p$ 可能越界，所以要用 long long 进行类型转换</li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> N, p, S[<span class="number">100010</span>];</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;N, &amp;p);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;S[i]);</span><br><span class="line">  &#125;</span><br><span class="line">  sort(S, S + N);</span><br><span class="line">  <span class="keyword">int</span> cnt_max = <span class="number">-1</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>; i &lt; N; i++)&#123;</span><br><span class="line">    <span class="keyword">while</span>(j &lt; N &amp;&amp; S[j] &lt;= (<span class="keyword">long</span> <span class="keyword">long</span> )S[i] * p)&#123;</span><br><span class="line">      cnt_max = max(j - i + <span class="number">1</span>, cnt_max);</span><br><span class="line">      j++;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, cnt_max);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1029 旧键盘(C++)</title>
      <link href="/2018/11/22/PAT-B1029-cpp/"/>
      <url>/2018/11/22/PAT-B1029-cpp/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><a id="more"></a><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805292322111488" target="_blank" rel="noopener">B1029 旧键盘</a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>统计每个键按下的次数，次数不相等则键损坏。</p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li>输出的字母应当为大写</li><li>空格输出为 ‘_’</li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>#include &lt;cctype&gt;</code><ul><li>该头文件包含一系列处理单个字符的函数</li><li>几个比较常用的函数：<ul><li><code>isalnum()</code><ul><li>判断字符是否为字母或者数字</li></ul></li><li><code>isalpha()</code><ul><li>判断字符是否为字母</li></ul></li><li><code>isblank()</code><ul><li>判断字符是否为空格</li></ul></li><li><code>isdigit()</code><ul><li>判断字符是否为数字</li></ul></li><li><code>islower()</code><ul><li>判断字符是否为小写字母</li></ul></li><li><code>isupper()</code><ul><li>判断字符是否为大写字母</li></ul></li><li><code>y = tolower(x)</code><ul><li>将大写字母转换为小写字母</li></ul></li><li><code>y = toupper(x)</code><ul><li>将小写字母转换为大写字母</li></ul></li></ul></li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">char</span>, <span class="keyword">int</span>&gt; broken;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">count</span><span class="params">(<span class="built_in">string</span> s, <span class="keyword">int</span> tag)</span></span>&#123;</span><br><span class="line">  <span class="keyword">while</span>(s.length() != <span class="number">0</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">islower</span>(s[<span class="number">0</span>])) s[<span class="number">0</span>] = <span class="built_in">toupper</span>(s[<span class="number">0</span>]);</span><br><span class="line">    <span class="keyword">if</span>(tag == <span class="number">0</span>) broken[s[<span class="number">0</span>]]++;</span><br><span class="line">    <span class="keyword">else</span> broken[s[<span class="number">0</span>]]--;</span><br><span class="line">    s.erase(s.begin());</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="built_in">string</span> s1, s2;</span><br><span class="line">  <span class="built_in">cin</span> &gt;&gt; s1 &gt;&gt; s2;</span><br><span class="line">  count(s1, <span class="number">0</span>);</span><br><span class="line">  count(s2, <span class="number">1</span>);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s1.length(); i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">islower</span>(s1[i])) s1[i] = <span class="built_in">toupper</span>(s1[i]);</span><br><span class="line">    <span class="keyword">if</span>(broken[s1[i]] &gt; <span class="number">0</span>)&#123;</span><br><span class="line">      <span class="built_in">cout</span> &lt;&lt; s1[i];</span><br><span class="line">      broken[s1[i]] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1028 人口普查(C++)</title>
      <link href="/2018/11/22/PAT-B1028-cpp/"/>
      <url>/2018/11/22/PAT-B1028-cpp/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><a id="more"></a><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805293282607104" target="_blank" rel="noopener">B1028 人口普查</a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>在一边输入数据一边过滤记录，并更新当前最年长的及最年轻的记录。使用排序函数将会超时。</p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li>使用排序函数将会超时</li><li>当有效记录数为零时不输出名字</li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>bool cmp(person a, person b){ }</code><ul><li>借鉴了 sort 中的 cmp 函数，可用于判断两个结构体大小</li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">person</span>&#123;</span></span><br><span class="line">  <span class="keyword">char</span> name[<span class="number">10</span>];</span><br><span class="line">  <span class="keyword">int</span> y, m, d;</span><br><span class="line">&#125;old, young, temp;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isvalid</span><span class="params">(person a)</span></span>&#123;<span class="comment">//判断年龄是否合理</span></span><br><span class="line">  <span class="keyword">if</span>(a.y &lt; <span class="number">1814</span> || a.y &gt; <span class="number">2014</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>((a.y == <span class="number">1814</span> &amp;&amp; a.m &lt; <span class="number">9</span>) || (a.y == <span class="number">2014</span> &amp;&amp; a.m &gt; <span class="number">9</span>))<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>((a.y == <span class="number">1814</span> &amp;&amp; a.m == <span class="number">9</span> &amp;&amp; a.d &lt; <span class="number">6</span>) || (a.y == <span class="number">2014</span> &amp;&amp; a.m == <span class="number">9</span> &amp;&amp; a.d &gt; <span class="number">6</span>)) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(person a, person b)</span></span>&#123;<span class="comment">//比较两个记录长幼</span></span><br><span class="line">  <span class="keyword">if</span>(a.y != b.y) <span class="keyword">return</span> a.y &lt; b.y;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(a.m != b.m) <span class="keyword">return</span> a.m &lt; b.m;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">return</span> a.d &lt; b.d;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> N, cnt = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;N);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s %d/%d/%d"</span>, &amp;temp.name, &amp;temp.y, &amp;temp.m, &amp;temp.d);</span><br><span class="line">    <span class="keyword">if</span>(isvalid(temp) == <span class="literal">true</span>)&#123;<span class="comment">// 过滤不合理的记录</span></span><br><span class="line">      <span class="keyword">if</span>(cnt == <span class="number">0</span>) old = young = temp;</span><br><span class="line">      <span class="keyword">if</span>(cmp(old, temp) == <span class="literal">false</span>) old = temp;<span class="comment">// 比较大小</span></span><br><span class="line">      <span class="keyword">if</span>(cmp(young, temp) == <span class="literal">true</span>) young = temp;</span><br><span class="line">      cnt++;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(cnt == <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">"0\n"</span>);<span class="comment">// 正确输出</span></span><br><span class="line">  <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%d %s %s\n"</span>, cnt, old.name, young.name);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1027 打印沙漏(C++)</title>
      <link href="/2018/11/22/PAT-B1027-cpp/"/>
      <url>/2018/11/22/PAT-B1027-cpp/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><a id="more"></a><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805294251491328" target="_blank" rel="noopener">B1027 打印沙漏</a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>先找到第一行需要打印的字符数，再通过循环控制字符数目打印</p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li>沙漏右侧没有空格</li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">int</span> cnt, <span class="keyword">int</span> i, <span class="keyword">char</span> c)</span></span>&#123;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; cnt; j++) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; i; j++) <span class="built_in">printf</span>(<span class="string">"%c"</span>, c);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> N, k = <span class="number">1</span>, r = <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">char</span> c;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d %c"</span>, &amp;N, &amp;c);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">3</span>; r + <span class="number">2</span> * i &lt;= N; i+=<span class="number">2</span>)&#123;</span><br><span class="line">    r = r + <span class="number">2</span> * i;</span><br><span class="line">    k = i;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = k, cnt = <span class="number">0</span>; i &gt;= <span class="number">1</span>; i-=<span class="number">2</span>, cnt++) print(cnt, i, c);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">3</span>, cnt = (k - <span class="number">1</span>) / <span class="number">2</span> - <span class="number">1</span>; i &lt;= k; i+=<span class="number">2</span>, cnt--) print(cnt, i, c);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%d"</span>, N - r);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1026 程序运行时间(C++)</title>
      <link href="/2018/11/22/PAT-B1026-cpp/"/>
      <url>/2018/11/22/PAT-B1026-cpp/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><a id="more"></a><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805295203598336" target="_blank" rel="noopener">B1026 程序运行时间</a></p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li>格式化输出，两位数字</li><li>四舍五入</li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>s = (c2 - c1 + 50) / 100;</code><ul><li>一种省事的四舍五入技巧</li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> c1, c2, s;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;c1, &amp;c2);</span><br><span class="line">  s = (c2 - c1 + <span class="number">50</span>) / <span class="number">100</span>;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%02d:%02d:%02d\n"</span>, s / <span class="number">3600</span>, s / <span class="number">60</span> % <span class="number">60</span>, s % <span class="number">60</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1025 反转链表(C++)</title>
      <link href="/2018/11/22/PAT-B1025-cpp/"/>
      <url>/2018/11/22/PAT-B1025-cpp/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><a id="more"></a><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805296180871168" target="_blank" rel="noopener">B1025 反转链表</a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>将单链表保存到数组中，用逆转函数对特定范围进行逆转，最后按格式输出</p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li>给定单链表可能包含无用结点</li><li>地址固定为五位</li><li>最后一个结点的 next 输出 -1</li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>reverse(S.begin() + first, S.begin() + last);</code><ul><li>对数组 [first, last) 范围内的元素逆转</li><li>需要头文件：<strong>algorithm</strong></li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">LNode</span>&#123;</span></span><br><span class="line">  <span class="keyword">int</span> data, next;</span><br><span class="line">&#125;L[<span class="number">100010</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> head, A, N, K;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>, &amp;head, &amp;N, &amp;K);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;A);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;L[A].data, &amp;L[A].next);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; S;</span><br><span class="line">  <span class="keyword">while</span>(head != <span class="number">-1</span>)&#123; <span class="comment">// 遍历单链表，将对应结点地址存放到新数组中</span></span><br><span class="line">    S.push_back(head);</span><br><span class="line">    head = L[head].next;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i + K &lt;= S.size(); i+=K)&#123; <span class="comment">// 逆转数组，这里不用N，因为可能包含无用结点</span></span><br><span class="line">    reverse(S.begin() + i, S.begin() + i + K);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i + <span class="number">1</span>&lt; S.size(); i++)&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%05d %d %05d\n"</span>, S[i], L[S[i]].data, S[i+<span class="number">1</span>]);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%05d %d -1\n"</span>, S.back(), L[S.back()].data);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1024 科学计数法(C++)</title>
      <link href="/2018/11/22/PAT-B1024-cpp/"/>
      <url>/2018/11/22/PAT-B1024-cpp/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><a id="more"></a><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805297229447168" target="_blank" rel="noopener">B1024 科学计数法</a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>对所有情况分类讨论，考虑“指数 $e$ 是否大于零”以及“指数绝对值与有效数字位数 $k$ 大小比较”两个因素，可以分成三类：</p><ul><li>$e &lt; 0$<ul><li>在最前面需要补上 |e| 个 0, 在第一个数字之后添加小数点</li></ul></li><li>$e \geq 0 ; e \geq k$<ul><li>在最后补上 $ e - k $ 个 0，不用添加小数点</li></ul></li><li>$e \geq 0 ; e &lt; k$<ul><li>在第 $e + 1$ 个数字后的位置添加小数点</li></ul></li></ul><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li>先组合数字，再想办法在合适的位置插入小数点，比较不容易出错</li><li>正数不输出 “+” 号，负数要输出 “-“ 号</li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>ans.insert(&lt;插入位置&gt;, &#39;&lt;插入的字符&gt;&#39;);</code><ul><li>实现在字符串特定位置插入一个字符</li><li>所需头文件： <strong>string</strong></li></ul></li><li><code>s.erase(s.begin(), s.begin() + 3);</code><ul><li>删除字符串 [first, last) 范围的部分</li><li>所需头文件： <strong>string</strong></li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="built_in">string</span> s, v_num, ans, temp;</span><br><span class="line">  <span class="keyword">int</span> <span class="built_in">exp</span>, i = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">cin</span> &gt;&gt; s;</span><br><span class="line">  <span class="keyword">if</span>(s[<span class="number">0</span>] == <span class="string">'-'</span>) <span class="built_in">cout</span> &lt;&lt; s[<span class="number">0</span>];<span class="comment">// 输出负号</span></span><br><span class="line">  v_num += s[<span class="number">1</span>];</span><br><span class="line">  s.erase(s.begin(), s.begin() + <span class="number">3</span>);<span class="comment">//去除小数点及其前面的字符</span></span><br><span class="line">  <span class="keyword">while</span>(s[<span class="number">0</span>] != <span class="string">'E'</span>)&#123;</span><br><span class="line">    v_num += s[<span class="number">0</span>];</span><br><span class="line">    s.erase(s.begin());</span><br><span class="line">  &#125;</span><br><span class="line">  s.erase(s.begin());</span><br><span class="line">  <span class="built_in">exp</span> = stoi(s);</span><br><span class="line">  <span class="keyword">if</span>(<span class="built_in">exp</span> &lt; <span class="number">0</span>)&#123;<span class="comment">//指数小于零</span></span><br><span class="line">    <span class="keyword">while</span>(i++ &lt; -<span class="built_in">exp</span>) temp += <span class="string">'0'</span>;</span><br><span class="line">    ans = temp + v_num;</span><br><span class="line">    ans.insert(ans.begin() + <span class="number">1</span>, <span class="string">'.'</span>);</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;<span class="comment">//指数大于等于零</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">exp</span> &gt;= v_num.length() - <span class="number">1</span>)&#123;<span class="comment">//指数比小数的有效数字位数大</span></span><br><span class="line">      <span class="keyword">while</span>(i++ &lt; <span class="built_in">exp</span> - v_num.length() + <span class="number">1</span>) temp += <span class="string">'0'</span>;</span><br><span class="line">      ans = v_num + temp;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;<span class="comment">//指数比小数部分的有效数字小</span></span><br><span class="line">      ans = v_num;</span><br><span class="line">      ans.insert(ans.begin() + <span class="built_in">exp</span> + <span class="number">1</span>, <span class="string">'.'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1023 组个最小数(C++)</title>
      <link href="/2018/11/22/PAT-B1023-cpp/"/>
      <url>/2018/11/22/PAT-B1023-cpp/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><a id="more"></a><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805298269634560" target="_blank" rel="noopener">B1023 组个最小数</a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>记录每个数字出现的次数，先输出第一个非零的最小数字，剩余的顺序输出</p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li>如果用排序，要排除 0 在首位的情况</li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> num[<span class="number">10</span>] = &#123;<span class="number">0</span>&#125;, min_not_zero = <span class="number">-1</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; num[i];</span><br><span class="line">    <span class="keyword">if</span>(min_not_zero == <span class="number">-1</span> &amp;&amp; i &gt; <span class="number">0</span> &amp;&amp; num[i] &gt; <span class="number">0</span>)&#123;</span><br><span class="line">      min_not_zero = i;</span><br><span class="line">      num[i]--;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">cout</span> &lt;&lt; min_not_zero;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)&#123;</span><br><span class="line">    <span class="keyword">while</span>(num[i]--) <span class="built_in">cout</span> &lt;&lt; i;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1022 D进制的A+B(C++)</title>
      <link href="/2018/11/22/PAT-B1022-cpp/"/>
      <url>/2018/11/22/PAT-B1022-cpp/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><a id="more"></a><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805299301433344" target="_blank" rel="noopener">B1022 D进制的A+B</a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>进制转换，使用除留余数法，最后数组倒序输出。</p><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> A, B, D, ans[<span class="number">50</span>] = &#123;<span class="number">0</span>&#125;, cnt = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">cin</span> &gt;&gt; A &gt;&gt; B &gt;&gt; D;</span><br><span class="line">  A = A + B;</span><br><span class="line">  <span class="keyword">while</span>(A &gt; <span class="number">0</span>)&#123;</span><br><span class="line">    ans[cnt++] = A % D;</span><br><span class="line">    A = A / D;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(cnt == <span class="number">0</span>) <span class="built_in">cout</span> &lt;&lt; ans[<span class="number">0</span>];</span><br><span class="line">  <span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = cnt - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)&#123;</span><br><span class="line">      <span class="built_in">cout</span> &lt;&lt; ans[i];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1021 个位数统计(C++)</title>
      <link href="/2018/11/22/PAT-B1021-cpp/"/>
      <url>/2018/11/22/PAT-B1021-cpp/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><a id="more"></a><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805300404535296" target="_blank" rel="noopener">B1021 个位数统计</a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>字符串处理：遍历字符串，统计每个字符出现的次数</p><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>for(auto it = m.begin(); it != m.end(); it++){}</code><ul><li>可用于遍历 map/vector/set 等容器， <code>auto</code> 实现自动匹配对应迭代器类型</li><li>如果不用 <code>auto it = m.begin()</code> 则要写成 <code>std::map&lt;char, int&gt;::iterator it = m.begin()</code></li><li><code>map&lt;char,int&gt;</code> 在其他情况下可替换成对应元素的类型如 <code>vector&lt;int&gt;</code></li><li>所需头文件： <strong>map / set / vector</strong></li></ul></li><li><code>it-&gt;first</code> 和 <code>it-&gt;second</code><ul><li><code>it-&gt;first</code> 为 map 中对应元素的关键字</li><li><code>it-&gt;second</code> 为 map 中对应关键字的值</li><li>所需头文件： <strong>map</strong></li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><ul><li><h4 id="方法1："><a href="#方法1：" class="headerlink" title="方法1："></a>方法1：</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="built_in">string</span> A;</span><br><span class="line">  <span class="built_in">map</span>&lt;<span class="keyword">char</span>, <span class="keyword">int</span>&gt; m;</span><br><span class="line">  <span class="built_in">cin</span> &gt;&gt; A;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; A.length(); i++)&#123;</span><br><span class="line">    m[A[i]]++;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">auto</span> it = m.begin(); it != m.end(); it++)&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; it-&gt;first &lt;&lt; <span class="string">":"</span> &lt;&lt; it-&gt;second &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h4 id="方法2："><a href="#方法2：" class="headerlink" title="方法2："></a>方法2：</h4></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> A;</span><br><span class="line">    <span class="keyword">int</span> num[<span class="number">10</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; A;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; A.length(); i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> k = A[i] - <span class="number">48</span>;</span><br><span class="line">        num[k]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(num[i] &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d:%d\n"</span>, i, num[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1020 月饼(C++)</title>
      <link href="/2018/11/12/PAT-B1020-cpp/"/>
      <url>/2018/11/12/PAT-B1020-cpp/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><a id="more"></a><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805301562163200" target="_blank" rel="noopener">B1020 月饼</a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>贪心算法，按照单价排序，优先售卖单价最高的月饼，卖完了再换下一种。</p><h2 id="易错点："><a href="#易错点：" class="headerlink" title="易错点："></a>易错点：</h2><ul><li>价格/库存都有可能不是整数</li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>sort(S, S + n, cmp);</code><ul><li>排序函数，实现 [first, last) 范围内的排序，可以自定义排序策略 cmp 函数</li><li>不带 cmp 参数的 sort 函数实现从小到大排序</li><li>所需头文件： <strong>algorithm</strong></li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1010</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Mooncake</span>&#123;</span></span><br><span class="line">  <span class="keyword">double</span> total_price, storage, ave_price;</span><br><span class="line">&#125;M[maxn];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(Mooncake a, Mooncake b)</span></span>&#123; <span class="keyword">return</span> a.ave_price &gt; b.ave_price; &#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> N;</span><br><span class="line">  <span class="keyword">double</span> bonus = <span class="number">0.0</span>, need, price[maxn], storage[maxn];</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d %lf"</span>, &amp;N, &amp;need);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++) <span class="built_in">scanf</span>(<span class="string">"%lf"</span>, &amp;M[i].storage);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++) &#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lf"</span>, &amp;M[i].total_price);</span><br><span class="line">    M[i].ave_price = <span class="number">1.0</span> * M[i].total_price / M[i].storage;</span><br><span class="line">  &#125;</span><br><span class="line">  sort(M, M + N, cmp);</span><br><span class="line">  <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span>(need &gt; <span class="number">0</span> &amp;&amp; cnt &lt; N)&#123;</span><br><span class="line">    <span class="keyword">int</span> t = need &gt; M[cnt].storage ? M[cnt].storage : need;</span><br><span class="line">    bonus += M[cnt++].ave_price * t;</span><br><span class="line">    need -= t;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%.2f\n"</span>, bonus);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1019 数字黑洞(C++)</title>
      <link href="/2018/11/12/PAT-B1019-cpp/"/>
      <url>/2018/11/12/PAT-B1019-cpp/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><a id="more"></a><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805302786899968" target="_blank" rel="noopener">B1019 数字黑洞</a></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>字符串处理。</p><h2 id="易错点："><a href="#易错点：" class="headerlink" title="易错点："></a>易错点：</h2><ul><li>输入的数字和中间计算得到的数字不一定是四位数，所以要转换一下</li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>sort(A.begin(), A.end());</code><ul><li>排序函数，实现 [first, last) 范围内的排序</li><li>所需头文件： <strong>algorithm</strong></li></ul></li><li><code>reverse(B.begin(), B.end());</code><ul><li>逆转函数，实现C++容器（数组、队列、字符串）[first, last) 范围内元素逆转</li><li>所需头文件： <strong>algorithm</strong></li></ul></li><li><code>y = stoi(x)</code><ul><li>实现将字符串转换成对应字面的整数</li><li>需要的头文件：<strong>string</strong></li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="built_in">string</span> A, B;</span><br><span class="line">  <span class="keyword">int</span> S = <span class="number">-1</span>;</span><br><span class="line">  <span class="built_in">cin</span> &gt;&gt; A;</span><br><span class="line">  <span class="keyword">while</span>(S != <span class="number">6174</span> &amp;&amp; S != <span class="number">0</span>)&#123;</span><br><span class="line">    <span class="keyword">while</span>(A.length() &lt; <span class="number">4</span>) A += <span class="string">'0'</span>;</span><br><span class="line">    sort(A.begin(), A.end());</span><br><span class="line">    B = A;</span><br><span class="line">    reverse(B.begin(), B.end());</span><br><span class="line">    S = stoi(B) - stoi(A);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%04d - %04d = %04d\n"</span>, stoi(B), stoi(A), S);</span><br><span class="line">    A = to_string(S);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1018 锤子剪刀布(C++)</title>
      <link href="/2018/11/12/PAT-B1018-cpp/"/>
      <url>/2018/11/12/PAT-B1018-cpp/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><a id="more"></a><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805304020025344" target="_blank" rel="noopener">B1018 锤子剪刀布</a></p><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>map&lt;char, int&gt; m</code><ul><li>创建一个 map 变量，用于将手势映射为数字，方便处理。</li></ul></li><li><code>if((m[a] - m[b] + 3) % 3 == 2){ }</code><ul><li>类似于剪刀石头布的循环制约游戏策略都可以这种模式进行判断，可自行画图理解。</li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">char</span> <span class="title">getans</span><span class="params">(<span class="keyword">int</span> t[])</span></span>&#123; <span class="comment">// 返回赢的次数最多的手势</span></span><br><span class="line">  <span class="keyword">if</span>(t[<span class="number">0</span>] &gt;= t[<span class="number">1</span>])&#123;</span><br><span class="line">    <span class="keyword">if</span>(t[<span class="number">0</span>] &gt;= t[<span class="number">2</span>]) <span class="keyword">return</span> <span class="string">'B'</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="string">'J'</span>;</span><br><span class="line">  &#125;<span class="keyword">else</span> <span class="keyword">return</span> <span class="string">'C'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> A_win = <span class="number">0</span>, A_lose = <span class="number">0</span>, Tie = <span class="number">0</span>, N, cnt_a[<span class="number">3</span>] = &#123;<span class="number">0</span>&#125;, cnt_b[<span class="number">3</span>] =&#123;<span class="number">0</span>&#125;;</span><br><span class="line">  <span class="keyword">char</span> a, b;</span><br><span class="line">  <span class="built_in">map</span>&lt;<span class="keyword">char</span>, <span class="keyword">int</span>&gt; m; <span class="comment">//记录手势与数字的映射</span></span><br><span class="line">  m[<span class="string">'B'</span>] = <span class="number">0</span>; m[<span class="string">'C'</span>] = <span class="number">1</span>; m[<span class="string">'J'</span>] = <span class="number">2</span>;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d\n"</span>, &amp;N);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%c %c\n"</span>, &amp;a, &amp;b);</span><br><span class="line">    <span class="keyword">if</span>(a == b) Tie ++;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>((m[a] - m[b] + <span class="number">3</span>) % <span class="number">3</span> == <span class="number">2</span>)&#123;<span class="comment">//满足该式时为 A 赢</span></span><br><span class="line">      A_win++;</span><br><span class="line">      cnt_a[m[a]]++;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      A_lose++;</span><br><span class="line">      cnt_b[m[b]]++;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%d %d %d\n%d %d %d\n"</span>, A_win, Tie, A_lose, A_lose, Tie, A_win);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%c %c\n"</span>, getans(cnt_a), getans(cnt_b));</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1017 A除以B(C++)</title>
      <link href="/2018/11/12/PAT-B1017-cpp/"/>
      <url>/2018/11/12/PAT-B1017-cpp/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><a id="more"></a><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805305181847552" target="_blank" rel="noopener">B1017 A除以B</a></p><h2 id="易错点："><a href="#易错点：" class="headerlink" title="易错点："></a>易错点：</h2><ul><li>输出的时候要去掉前导零</li><li>被除数为 0 也要正确输出</li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>y = to_string(x)</code><ul><li>将某数转换成 string 类型</li></ul></li><li><code>Q.erase(Q.begin())</code><ul><li>抹去字符串第一个字符</li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="built_in">string</span> A, Q;</span><br><span class="line">  <span class="keyword">int</span> B, R = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">cin</span> &gt;&gt; A &gt;&gt; B;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; A.length(); i++)&#123;</span><br><span class="line">    R = R * <span class="number">10</span> + (<span class="keyword">int</span>)(A[i] - <span class="string">'0'</span>);</span><br><span class="line">    Q = Q + to_string(R / B);</span><br><span class="line">    R = R % B;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">while</span>(Q[<span class="number">0</span>] == <span class="string">'0'</span> &amp;&amp; Q.length() &gt; <span class="number">1</span>) Q.erase(Q.begin());</span><br><span class="line">  <span class="built_in">cout</span> &lt;&lt; Q &lt;&lt; <span class="string">' '</span> &lt;&lt; to_string(R);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1016 部分A+B(C++)</title>
      <link href="/2018/11/12/PAT-B1016-cpp/"/>
      <url>/2018/11/12/PAT-B1016-cpp/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><a id="more"></a><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805306310115328" target="_blank" rel="noopener">B1016 部分A+B</a></p><h2 id="易错点："><a href="#易错点：" class="headerlink" title="易错点："></a>易错点：</h2><ul><li>不要忽略输入数字为 0 的情况</li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>y = stoi(x)</code><ul><li>将 string 转换成 int</li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getans</span><span class="params">(<span class="built_in">string</span> A, <span class="built_in">string</span> D)</span></span>&#123;</span><br><span class="line">  <span class="built_in">string</span> ans;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; A.length(); i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(A[i] == D[<span class="number">0</span>]) ans += D[<span class="number">0</span>];</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> (ans == <span class="string">""</span> ? <span class="number">0</span> : stoi(ans));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="built_in">string</span> A, B, Da, Db;</span><br><span class="line">  <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">cin</span> &gt;&gt; A &gt;&gt; Da &gt;&gt; B &gt;&gt; Db;</span><br><span class="line">  ans += getans(A, Da);</span><br><span class="line">  ans += getans(B, Db);</span><br><span class="line">  <span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1015 福尔摩斯的约会(C++)</title>
      <link href="/2018/11/12/PAT-B1015-cpp/"/>
      <url>/2018/11/12/PAT-B1015-cpp/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>宋代史学家司马光在《资治通鉴》中有一段著名的“德才论”：“是故才德全尽谓之圣人，才德兼亡谓之愚人，德胜才谓之君子，才胜德谓之小人。凡取人之术，苟不得圣人，君子而与之，与其得小人，不若得愚人。”</p><p>现给出一批考生的德才分数，请根据司马光的理论给出录取排名。<br><a id="more"></a></p><h4 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h4><p>输入第一行给出 3 个正整数，分别为：$N( \leq 10^5)$ ，即考生总数；，$L(\geq 60)$ 为录取最低分数线，即德分和才分均不低于 $L$ 的考生才有资格被考虑录取；$H(&lt;100)$ ，为优先录取线——德分和才分均不低于此线的被定义为“才德全尽”，此类考生按德才总分从高到低排序；才分不到但德分到线的一类考生属于“德胜才”，也按总分排序，但排在第一类考生之后；德才分均低于 $H$，但是德分不低于才分的考生属于“才德兼亡”但尚有“德胜才”者，按总分排序，但排在第二类考生之后；其他达到最低线 $L$ 的考生也按总分排序，但排在第三类考生之后。</p><p>随后 $N$ 行，每行给出一位考生的信息，包括：<code>准考证号 德分 才分</code>，其中<code>准考证号</code>为 8 位整数，德才分为区间 [0, 100] 内的整数。数字间以空格分隔。</p><h4 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h4><p>输出第一行首先给出达到最低分数线的考生人数 $M$，随后 $M$ 行，每行按照输入格式输出一位考生的信息，考生按输入中说明的规则从高到低排序。当某类考生中有多人总分相同时，按其德分降序排列；若德分也并列，则按准考证号的升序输出。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">14 60 80</span><br><span class="line">10000001 64 90</span><br><span class="line">10000002 90 60</span><br><span class="line">10000011 85 80</span><br><span class="line">10000003 85 80</span><br><span class="line">10000004 80 85</span><br><span class="line">10000005 82 77</span><br><span class="line">10000006 83 76</span><br><span class="line">10000007 90 78</span><br><span class="line">10000008 75 79</span><br><span class="line">10000009 59 90</span><br><span class="line">10000010 88 45</span><br><span class="line">10000012 80 100</span><br><span class="line">10000013 90 99</span><br><span class="line">10000014 66 60</span><br></pre></td></tr></table></figure></p><p></p><h4 id="-">输出样例：</h4><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">12</span><br><span class="line">10000013 90 99</span><br><span class="line">10000012 80 100</span><br><span class="line">10000003 85 80</span><br><span class="line">10000011 85 80</span><br><span class="line">10000004 80 85</span><br><span class="line">10000007 90 78</span><br><span class="line">10000006 83 76</span><br><span class="line">10000005 82 77</span><br><span class="line">10000002 90 60</span><br><span class="line">10000014 66 60</span><br><span class="line">10000008 75 79</span><br><span class="line">10000001 64 90</span><br></pre></td></tr></table></figure><p></p><h2 id="易错点："><a href="#易错点：" class="headerlink" title="易错点："></a>易错点：</h2><ul><li>注意范围：星期是大写的 A-G；小时是从 0-9，A-N；</li><li>输出的小时和分钟，不满两位要补前导零</li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li>头文件 <strong>cctype</strong> 中的某些函数<ul><li><code>isdigit(temp)</code><ul><li>判断该字符是否为数字，如是返回 true</li></ul></li><li><code>isalpha(temp)</code><ul><li>判断该字符是否为字母，如是返回 true</li></ul></li><li><code>isupper(temp)</code><ul><li>判断字符是否为大写</li></ul></li><li><code>islower(temp)</code><ul><li>判断字符是否为小写</li></ul></li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="built_in">string</span> str[<span class="number">4</span>];</span><br><span class="line">  <span class="built_in">string</span> DAY[] = &#123;<span class="string">"MON"</span>, <span class="string">"TUE"</span>, <span class="string">"WED"</span>, <span class="string">"THU"</span>, <span class="string">"FRI"</span>, <span class="string">"SAT"</span>, <span class="string">"SUN"</span>&#125;;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)&#123;</span><br><span class="line">    getline(<span class="built_in">cin</span>, str[i]);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>, cnt = <span class="number">0</span>; i &lt; str[<span class="number">0</span>].length() &amp;&amp; i &lt; str[<span class="number">1</span>].length(); i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(str[<span class="number">0</span>][i] == str[<span class="number">1</span>][i])&#123;</span><br><span class="line">      <span class="keyword">char</span> temp = str[<span class="number">0</span>][i];</span><br><span class="line">      <span class="keyword">if</span>(cnt == <span class="number">0</span> &amp;&amp; temp &gt;= <span class="string">'A'</span> &amp;&amp; temp &lt;= <span class="string">'G'</span>)&#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; DAY[(str[<span class="number">0</span>][i] - <span class="string">'A'</span>)] &lt;&lt; <span class="string">' '</span>; <span class="comment">//星期</span></span><br><span class="line">        cnt++;</span><br><span class="line">      &#125;<span class="keyword">else</span> <span class="keyword">if</span>(cnt == <span class="number">1</span>)&#123; <span class="comment">//小时</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">isdigit</span>(temp))&#123;</span><br><span class="line">          <span class="built_in">cout</span> &lt;&lt; <span class="string">'0'</span> &lt;&lt; (<span class="keyword">int</span>)(temp - <span class="string">'0'</span>); <span class="keyword">break</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">'A'</span> &lt;= temp &amp;&amp; temp &lt;= <span class="string">'N'</span> )&#123;</span><br><span class="line">          <span class="built_in">cout</span> &lt;&lt; (<span class="keyword">int</span>)(temp - <span class="string">'A'</span> + <span class="number">10</span>); <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; str[<span class="number">2</span>].length() &amp;&amp; i &lt; str[<span class="number">3</span>].length(); i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(str[<span class="number">2</span>][i] == str[<span class="number">3</span>][i] &amp;&amp; <span class="built_in">isalpha</span>(str[<span class="number">2</span>][i]))&#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">":%02d\n"</span>, i);<span class="comment">//分钟</span></span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1014 福尔摩斯的约会(C++)</title>
      <link href="/2018/11/12/PAT-B1014-cpp/"/>
      <url>/2018/11/12/PAT-B1014-cpp/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>大侦探福尔摩斯接到一张奇怪的字条：<code>我们约会吧！ 3485djDkxh4hhGE 2984akDfkkkkggEdsb s&amp;hgsfdk d&amp;Hyscvnm</code>。大侦探很快就明白了，字条上奇怪的乱码实际上就是约会的时间<code>星期四 14:04</code>，因为前面两字符串中第 1 对相同的大写英文字母（大小写有区分）是第 4 个字母 <code>D</code>，代表星期四；第 2 对相同的字符是 <code>E</code> ，那是第 5 个英文字母，代表一天里的第 14 个钟头（于是一天的 0 点到 23 点由数字 0 到 9、以及大写字母 <code>A</code> 到 <code>N</code> 表示）；后面两字符串第 1 对相同的英文字母 <code>s</code> 出现在第 4 个位置（从 0 开始计数）上，代表第 4 分钟。现给定两对字符串，请帮助福尔摩斯解码得到约会的时间。</p><br><a id="more"></a><br><br>#### 输入格式：<br>输入在 4 行中分别给出 4 个非空、不包含空格、且长度不超过 60 的字符串。<br><br>#### 输出格式：<br><p>在一行中输出约会的时间，格式为 <code>DAY HH:MM</code>，其中 <code>DAY</code> 是某星期的 3 字符缩写，即 <code>MON</code> 表示星期一，<code>TUE</code> 表示星期二，<code>WED</code> 表示星期三，<code>THU</code> 表示星期四，<code>FRI</code> 表示星期五，<code>SAT</code> 表示星期六，<code>SUN</code> 表示星期日。题目输入保证每个测试存在唯一解。</p><h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3485djDkxh4hhGE</span><br><span class="line">2984akDfkkkkggEdsb</span><br><span class="line">s&amp;hgsfdk</span><br><span class="line">d&amp;Hyscvnm</span><br></pre></td></tr></table></figure><h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">THU 14:04</span><br></pre></td></tr></table></figure><h2 id="易错点："><a href="#易错点：" class="headerlink" title="易错点："></a>易错点：</h2><ul><li>注意范围：星期是大写的 A-G；小时是从 0-9，A-N；</li><li>输出的小时和分钟，不满两位要补前导零</li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li>头文件 <strong>cctype</strong> 中的某些函数<ul><li><code>isdigit(temp)</code><ul><li>判断该字符是否为数字，如是返回 true</li></ul></li><li><code>isalpha(temp)</code><ul><li>判断该字符是否为字母，如是返回 true</li></ul></li><li><code>isupper(temp)</code><ul><li>判断字符是否为大写</li></ul></li><li><code>islower(temp)</code><ul><li>判断字符是否为小写</li></ul></li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="built_in">string</span> str[<span class="number">4</span>];</span><br><span class="line">  <span class="built_in">string</span> DAY[] = &#123;<span class="string">"MON"</span>, <span class="string">"TUE"</span>, <span class="string">"WED"</span>, <span class="string">"THU"</span>, <span class="string">"FRI"</span>, <span class="string">"SAT"</span>, <span class="string">"SUN"</span>&#125;;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)&#123;</span><br><span class="line">    getline(<span class="built_in">cin</span>, str[i]);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>, cnt = <span class="number">0</span>; i &lt; str[<span class="number">0</span>].length() &amp;&amp; i &lt; str[<span class="number">1</span>].length(); i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(str[<span class="number">0</span>][i] == str[<span class="number">1</span>][i])&#123;</span><br><span class="line">      <span class="keyword">char</span> temp = str[<span class="number">0</span>][i];</span><br><span class="line">      <span class="keyword">if</span>(cnt == <span class="number">0</span> &amp;&amp; temp &gt;= <span class="string">'A'</span> &amp;&amp; temp &lt;= <span class="string">'G'</span>)&#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; DAY[(str[<span class="number">0</span>][i] - <span class="string">'A'</span>)] &lt;&lt; <span class="string">' '</span>; <span class="comment">//星期</span></span><br><span class="line">        cnt++;</span><br><span class="line">      &#125;<span class="keyword">else</span> <span class="keyword">if</span>(cnt == <span class="number">1</span>)&#123; <span class="comment">//小时</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">isdigit</span>(temp))&#123;</span><br><span class="line">          <span class="built_in">cout</span> &lt;&lt; <span class="string">'0'</span> &lt;&lt; (<span class="keyword">int</span>)(temp - <span class="string">'0'</span>); <span class="keyword">break</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">'A'</span> &lt;= temp &amp;&amp; temp &lt;= <span class="string">'N'</span> )&#123;</span><br><span class="line">          <span class="built_in">cout</span> &lt;&lt; (<span class="keyword">int</span>)(temp - <span class="string">'A'</span> + <span class="number">10</span>); <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; str[<span class="number">2</span>].length() &amp;&amp; i &lt; str[<span class="number">3</span>].length(); i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(str[<span class="number">2</span>][i] == str[<span class="number">3</span>][i] &amp;&amp; <span class="built_in">isalpha</span>(str[<span class="number">2</span>][i]))&#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">":%02d\n"</span>, i);<span class="comment">//分钟</span></span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1013 数素数(C++)</title>
      <link href="/2018/11/12/PAT-B1013-cpp/"/>
      <url>/2018/11/12/PAT-B1013-cpp/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>令 $P_i$ 表示第 $i$ 个素数。现任给两个正整数 $M \leq N \leq 10^4$ ，请输出 $P_M$ 到 $P_N$ 的所有素数。<br><a id="more"></a></p><h4 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h4><p>输入在一行中给出 $M$ 和 $N$，其间以空格分隔。</p><h4 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h4><p>输出从 $P_M$ 到 $P_N$ 的所有素数，每 10 个数字占 1 行，其间以空格分隔，但行末不得有多余空格。</p><h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5 27</span><br></pre></td></tr></table></figure><h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">11 13 17 19 23 29 31 37 41 43</span><br><span class="line">47 53 59 61 67 71 73 79 83 89</span><br><span class="line">97 101 103</span><br></pre></td></tr></table></figure><h2 id="易错点："><a href="#易错点：" class="headerlink" title="易错点："></a>易错点：</h2><ul><li>注意输出格式</li><li>1 不是素数，2是最小的素数</li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">bool isprime(int x)&#123;</span><br><span class="line">  for(int i = 2; i * i &lt;= x; i++)&#123;</span><br><span class="line">    if(x % i == 0) return false;</span><br><span class="line">  &#125;</span><br><span class="line">  return true;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>判断素数最好用的模板，记住就好</li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isprime</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i * i &lt;= x; i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(x % i == <span class="number">0</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> M, N;</span><br><span class="line">  <span class="built_in">cin</span> &gt;&gt; M &gt;&gt; N;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>, cnt = <span class="number">0</span>;  cnt &lt; N; i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(isprime(i) == <span class="literal">true</span>)&#123;</span><br><span class="line">      cnt++;</span><br><span class="line">      <span class="keyword">if</span>(cnt &gt;= M &amp;&amp; cnt &lt;= N)&#123;</span><br><span class="line">        <span class="keyword">if</span>((cnt - M) % <span class="number">10</span> != <span class="number">0</span>) <span class="built_in">cout</span> &lt;&lt; <span class="string">' '</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(cnt &gt; M) <span class="built_in">cout</span> &lt;&lt; <span class="string">'\n'</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; i;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1012 数字分类(C++)</title>
      <link href="/2018/11/12/PAT-B1012-cpp/"/>
      <url>/2018/11/12/PAT-B1012-cpp/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>给定一系列正整数，请按要求对数字进行分类，并输出以下 5 个数字：<br><a id="more"></a></p><ul><li>$A_1 = $ 能被 5 整除的数字中所有偶数的和；</li><li>$A_2 = $ 将被 5 除后余 1 的数字按给出顺序进行交错求和，即计算 $n_1 - n_2 + n_3 - n_4 \cdots$ ；</li><li>$A_3 = $ 被 5 除后余 2 的数字的个数；</li><li>$A_4 = $ 被 5 除后余 3 的数字的平均数，精确到小数点后 1 位；</li><li>$A_5 = $ 被 5 除后余 4 的数字中最大数字。</li></ul><h4 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h4><p>每个输入包含 1 个测试用例。每个测试用例先给出一个不超过 1000 的正整数 $N$，随后给出 $N$ 个不超过 1000 的待分类的正整数。数字间以空格分隔。</p><h4 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h4><p>对给定的 $N$ 个正整数，按题目要求计算 $A_1$ ~ $A_5$ 并在一行中顺序输出。数字间以空格分隔，但行末不得有多余空格。若其中某一类数字不存在，则在相应位置输出 <code>N</code>。</p><h4 id="输入样例1："><a href="#输入样例1：" class="headerlink" title="输入样例1："></a>输入样例1：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">13 1 2 3 4 5 6 7 8 9 10 20 16 18</span><br></pre></td></tr></table></figure><h4 id="输出样例1："><a href="#输出样例1：" class="headerlink" title="输出样例1："></a>输出样例1：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">30 11 2 9.7 9</span><br></pre></td></tr></table></figure><h4 id="输入样例2："><a href="#输入样例2：" class="headerlink" title="输入样例2："></a>输入样例2：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">8 1 2 4 5 6 7 9 16</span><br></pre></td></tr></table></figure><h4 id="输出样例2："><a href="#输出样例2：" class="headerlink" title="输出样例2："></a>输出样例2：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">N 11 2 N 9</span><br></pre></td></tr></table></figure><h2 id="易错点："><a href="#易错点：" class="headerlink" title="易错点："></a>易错点：</h2><ul><li>就，仔细看题</li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>y = (y &lt; x ? x : y);</code><ul><li>从两者中取较大值的简便表达式</li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> N, x, A[<span class="number">5</span>] = &#123;<span class="number">0</span>&#125;, cnt[<span class="number">5</span>] = &#123;<span class="number">0</span>&#125;, fac = <span class="number">1</span>;</span><br><span class="line">  <span class="built_in">cin</span> &gt;&gt; N;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; x;</span><br><span class="line">    <span class="keyword">if</span>(x % <span class="number">5</span> == <span class="number">0</span> &amp;&amp; x % <span class="number">2</span> == <span class="number">0</span>)&#123;</span><br><span class="line">      A[<span class="number">0</span>] += x;</span><br><span class="line">      cnt[<span class="number">0</span>]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(x % <span class="number">5</span> != <span class="number">0</span>)&#123;</span><br><span class="line">      cnt[x % <span class="number">5</span>]++; <span class="comment">// 计数</span></span><br><span class="line">      <span class="keyword">if</span>(x % <span class="number">5</span> == <span class="number">1</span>)&#123; <span class="comment">//交错相加</span></span><br><span class="line">        A[<span class="number">1</span>] = A[<span class="number">1</span>] + fac * x;</span><br><span class="line">        fac = -fac;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span>(x % <span class="number">5</span> == <span class="number">2</span>)&#123;</span><br><span class="line">        A[<span class="number">2</span>]++;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span>(x % <span class="number">5</span> == <span class="number">3</span>)&#123;</span><br><span class="line">        A[<span class="number">3</span>] += x;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span>(x % <span class="number">5</span> == <span class="number">4</span>)&#123; <span class="comment">//取最大值</span></span><br><span class="line">        A[<span class="number">4</span>] = (A[<span class="number">4</span>] &lt; x ? x : A[<span class="number">4</span>]);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(i != <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">    <span class="keyword">if</span>(cnt[i] == <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">"N"</span>); <span class="comment">//数字不存在</span></span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="keyword">if</span>(i == <span class="number">3</span>) <span class="built_in">printf</span>(<span class="string">"%.1f"</span>, <span class="number">1.0</span> * A[<span class="number">3</span>] / cnt[<span class="number">3</span>]);</span><br><span class="line">      <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%d"</span>, A[i]);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1011 A+B和C(C++)</title>
      <link href="/2018/11/12/PAT-B1011-cpp/"/>
      <url>/2018/11/12/PAT-B1011-cpp/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>给定区间 $[-2^{31}, 2^{31}]$ 内的 3 个整数 $A$ 、$B$ 和 $C$，请判断 $A+B$ 是否大于 $C$。<br><a id="more"></a></p><h4 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h4><p>输入第 1 行给出正整数 $T(\leq10)$ ，是测试用例的个数。随后给出 T 组测试用例，每组占一行，顺序给出 $A$ 、$B$ 和 $C$。整数间以空格分隔。</p><h4 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h4><p>对每组测试用例，在一行中输出 <code>Case #X: true</code> 如果 $A+B&gt;C$，否则输出 <code>Case #X: false</code>，其中 <code>X</code> 是测试用例的编号（从 1 开始）。</p><h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">1 2 3</span><br><span class="line">2 3 4</span><br><span class="line">2147483647 0 2147483646</span><br><span class="line">0 -2147483648 -2147483647</span><br></pre></td></tr></table></figure><h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Case #1: false</span><br><span class="line">Case #2: true</span><br><span class="line">Case #3: true</span><br><span class="line">Case #4: false</span><br></pre></td></tr></table></figure><h2 id="易错点："><a href="#易错点：" class="headerlink" title="易错点："></a>易错点：</h2><ul><li>不是大整数，不用想太复杂，直接上 long int</li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li>64 位系统，int 占 4 个字节，范围是 $[-2^{31}, 2^{31} - 1]$</li><li>64 位系统，long int 占 8 个字节，范围是 $[-2^{63}, 2^{63} - 1]$</li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">long</span> <span class="keyword">int</span> A, B, C, N;</span><br><span class="line">  <span class="built_in">cin</span> &gt;&gt; N;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; i++)&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; A &gt;&gt; B &gt;&gt; C;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"Case #"</span> &lt;&lt; i &lt;&lt; (A + B &gt; C ? <span class="string">": true"</span> : <span class="string">": false"</span>) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1010 一元多项式求导(C++)</title>
      <link href="/2018/11/12/PAT-B1010-cpp/"/>
      <url>/2018/11/12/PAT-B1010-cpp/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>设计函数求一元多项式的导数。（注：$x^n$（ $n$ 为整数）的一阶导数为 $nx^{n-1}$ 。）<br><a id="more"></a></p><h4 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h4><p>以指数递降方式输入多项式非零项系数和指数（绝对值均为不超过 1000 的整数）。数字间以空格分隔。</p><h4 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h4><p>以与输入相同的格式输出导数多项式非零项的系数和指数。数字间以空格分隔，但结尾不能有多余空格。注意“零多项式”的指数和系数都是 <code>0</code>，但是表示为 <code>0 0</code>。</p><h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3 4 -5 2 6 1 -2 0</span><br></pre></td></tr></table></figure><h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">12 3 -10 1 6 0</span><br></pre></td></tr></table></figure><h2 id="易错点："><a href="#易错点：" class="headerlink" title="易错点："></a>易错点：</h2><ul><li>结果为 0 的时候要另外判断，输出 <code>0 0</code></li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>while(scanf(&quot;%d %d&quot;, &amp;a, &amp;b) != EOF){ }</code><ul><li>可用于判断输入是否结束，自己测试运行时可用 <code>ctrl + z</code> 作为输入结束，程序可识别</li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> a, b, S[<span class="number">1010</span>][<span class="number">2</span>], cnt = <span class="number">0</span>, print = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;a, &amp;b) != EOF)&#123; <span class="comment">// 输入结束判断</span></span><br><span class="line">    S[cnt][<span class="number">0</span>] = a * b;</span><br><span class="line">    S[cnt][<span class="number">1</span>] = b - <span class="number">1</span>;</span><br><span class="line">    cnt ++;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; cnt; i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(S[i][<span class="number">1</span>] &gt;= <span class="number">0</span>)&#123;</span><br><span class="line">      <span class="keyword">if</span>(i != <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">"%d %d"</span>, S[i][<span class="number">0</span>], S[i][<span class="number">1</span>]);</span><br><span class="line">      print++;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(print == <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">"0 0"</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1009 说反话(C++)</title>
      <link href="/2018/11/12/PAT-B1009-cpp/"/>
      <url>/2018/11/12/PAT-B1009-cpp/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>给定一句英语，要求你编写程序，将句中所有单词的顺序颠倒输出。<br><a id="more"></a></p><h4 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h4><p>测试输入包含一个测试用例，在一行内给出总长度不超过 80 的字符串。字符串由若干单词和若干空格组成，其中单词是由英文字母（大小写有区分）组成的字符串，单词之间用 1 个空格分开，输入保证句子末尾没有多余的空格。</p><h4 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h4><p>每个测试用例的输出占一行，输出倒序后的句子。</p><h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hello World Here I Come</span><br></pre></td></tr></table></figure><h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Come I Here World Hello</span><br></pre></td></tr></table></figure><h2 id="易错点："><a href="#易错点：" class="headerlink" title="易错点："></a>易错点：</h2><ul><li>注意输出格式，末尾没有空格</li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>vector&lt;int&gt; ans;</code><ul><li>实现变长数组，元素类型可任意指定<ul><li><code>ans.push_back(num[i])</code>往变长数组末尾中添加一个元素</li><li><code>ans.pop_back()</code>删除变长数组中最后一个元素</li></ul></li><li>需要的头文件：<strong>vector</strong></li></ul></li><li><code>getline(cin, str);</code><ul><li>输入一整行的字符串，包括空格等</li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><ul><li><h4 id="方法一（C语言）"><a href="#方法一（C语言）" class="headerlink" title="方法一（C语言）"></a>方法一（C语言）</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> str[<span class="number">81</span>][<span class="number">81</span>];</span><br><span class="line">    <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>( <span class="built_in">scanf</span>(<span class="string">"%s"</span>, str[cnt]) != EOF)&#123;</span><br><span class="line">        cnt++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = cnt - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%s"</span>, str[i]);</span><br><span class="line">        <span class="keyword">if</span>(i &gt; <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h4 id="方法二（C-）"><a href="#方法二（C-）" class="headerlink" title="方法二（C++）"></a>方法二（C++）</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="built_in">string</span> str;</span><br><span class="line">  <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; ans;</span><br><span class="line">  getline(<span class="built_in">cin</span>, str);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; str.length();i++)&#123;</span><br><span class="line">    <span class="built_in">string</span> temp;</span><br><span class="line">    <span class="keyword">while</span>(i &lt; str.length() &amp;&amp; str[i] != <span class="string">' '</span>) temp += str[i++];</span><br><span class="line">    ans.push_back(temp);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = ans.size() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; ans[i];</span><br><span class="line">    <span class="keyword">if</span>(i != <span class="number">0</span>) <span class="built_in">cout</span> &lt;&lt; <span class="string">' '</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1008 数组元素循环右移问题(C++)</title>
      <link href="/2018/11/12/PAT-B1008-cpp/"/>
      <url>/2018/11/12/PAT-B1008-cpp/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>一个数组 $A$ 中存有 $N(&gt;0)$ 个整数，在不允许使用另外数组的前提下，将每个整数循环向右移$M( \leq 0)$ 个位置，即将 $A$ 中的数据由 $A_0 A_1  \cdots A_{N-1}$ 变换为 $A_{N-M} \cdots A_{N-1} A_0 A_1 \cdots A_{N-M-1}$ （最后 $M$ 个数循环移至最前面的 $M$ 个位置）。如果需要考虑程序移动数据的次数尽量少，要如何设计移动的方法？<br><a id="more"></a></p><h4 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h4><p>每个输入包含一个测试用例，第 1 行输入 $N(1 \le N \le 100)$ 和 $M( \ge 0)$ ；第 2 行输入 $N$ 个整数，之间用空格分隔。</p><h4 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h4><p>在一行中输出循环右移 $M$ 位以后的整数序列，之间用空格分隔，序列结尾不能有多余空格。</p><h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">6 2</span><br><span class="line">1 2 3 4 5 6</span><br></pre></td></tr></table></figure><h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5 6 1 2 3 4</span><br></pre></td></tr></table></figure><h2 id="易错点："><a href="#易错点：" class="headerlink" title="易错点："></a>易错点：</h2><ul><li>当 $M$ 大于 $N$ 时，只要对 $M$ 取余结果是一样的 ：<code>M = M % N</code>;</li><li>数组原地平移，可以用分别逆转不同区域的数组，最后全部逆转</li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>reverse(num, num + N);</code><ul><li>对数组 [first, last) 范围内的元素逆转</li><li>需要头文件：<strong>algorithm</strong></li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> N, M, num[<span class="number">110</span>];</span><br><span class="line">  <span class="built_in">cin</span> &gt;&gt; N &gt;&gt; M;</span><br><span class="line">  M = M % N;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; num[i];</span><br><span class="line">  &#125;</span><br><span class="line">  reverse(num, num + N - M);</span><br><span class="line">  reverse(num + N - M, num + N);</span><br><span class="line">  reverse(num, num + N);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; num[i];</span><br><span class="line">    <span class="keyword">if</span>(i != N - <span class="number">1</span>) <span class="built_in">cout</span> &lt;&lt; <span class="string">' '</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1007 素数对猜想(C++)</title>
      <link href="/2018/11/12/PAT-B1007-cpp/"/>
      <url>/2018/11/12/PAT-B1007-cpp/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>让我们定义 $d_n$ 为：$d_n= p_n+1-p^n$ ，其中 $p_i$ 是第 $i$ 个素数。显然有 $d_1=1$，且对于 $n&gt;1$ 有 $d_n$ 是偶数。“素数对猜想”认为“存在无穷多对相邻且差为2的素数”。</p><p>现给定任意正整数$N(&lt;10^5)$，请计算不超过N的满足猜想的素数对的个数。<br><a id="more"></a></p><h4 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h4><p>输入在一行给出正整数 $N$ 。</p><h4 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h4><p>在一行中输出不超过 $N$ 的满足猜想的素数对的个数。</p><h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">20</span><br></pre></td></tr></table></figure><h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure><h2 id="易错点："><a href="#易错点：" class="headerlink" title="易错点："></a>易错点：</h2><ul><li>1 不是素数，2是最小的素数</li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">bool isprime(int x)&#123;</span><br><span class="line">  for(int i = 2; i * i &lt;= x; i++)&#123;</span><br><span class="line">    if(x % i == 0) return false;</span><br><span class="line">  &#125;</span><br><span class="line">  return true;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>判断素数最好用的模板，记住就好</li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isprime</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i * i &lt;= x; i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(x % i == <span class="number">0</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> N, cnt = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">cin</span> &gt;&gt; N;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= N - <span class="number">2</span>; i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(isprime(i) &amp;&amp; isprime(i + <span class="number">2</span>))&#123;</span><br><span class="line">      cnt++;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">cout</span> &lt;&lt; cnt;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1006 换个格式输出整数(C++)</title>
      <link href="/2018/11/12/PAT-B1006-cpp/"/>
      <url>/2018/11/12/PAT-B1006-cpp/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>让我们用字母 <strong>B</strong> 来表示“百”、字母 S 表示“十”，用 <strong>12…n</strong> 来表示不为零的个位数字 n（&lt;10），换个格式来输出任一个不超过 3 位的正整数。例如 <strong>234</strong> 应该被输出为 <strong>BBSSS1234</strong>，因为它有 2 个“百”、3 个“十”、以及个位的 4。<br><a id="more"></a></p><h4 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h4><p>每个测试输入包含 1 个测试用例，给出正整数 $n(&lt;1000)$。</p><h4 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h4><p>每个测试用例的输出占一行，用规定的格式输出 $n$。</p><h4 id="输入样例1："><a href="#输入样例1：" class="headerlink" title="输入样例1："></a>输入样例1：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">234</span><br></pre></td></tr></table></figure><h4 id="输出样例1："><a href="#输出样例1：" class="headerlink" title="输出样例1："></a>输出样例1：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BBSSS1234</span><br></pre></td></tr></table></figure><h4 id="输入样例2："><a href="#输入样例2：" class="headerlink" title="输入样例2："></a>输入样例2：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">23</span><br></pre></td></tr></table></figure><h4 id="输出样例2："><a href="#输出样例2：" class="headerlink" title="输出样例2："></a>输出样例2：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SS123</span><br></pre></td></tr></table></figure><h2 id="易错点："><a href="#易错点：" class="headerlink" title="易错点："></a>易错点：</h2><ul><li>为避免讨论数字位数，直接将数字补上前导零，便于处理</li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>num = &#39;0&#39; + num;</code><ul><li>字符串拼接</li><li>需要的头文件：<strong>string</strong></li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="built_in">string</span> num;</span><br><span class="line">  <span class="built_in">cin</span> &gt;&gt; num;</span><br><span class="line">  <span class="keyword">while</span>(num.length() &lt; <span class="number">3</span>) num = <span class="string">'0'</span> + num; <span class="comment">//字符串补上前导零，统一长度</span></span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; num.length(); i++)&#123;</span><br><span class="line">    <span class="keyword">int</span> j = (<span class="keyword">int</span>)(num[i] - <span class="string">'0'</span>); <span class="comment">//类型转换成数字</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">1</span>; k &lt;= j; k++)&#123;</span><br><span class="line">      <span class="keyword">if</span>(i == <span class="number">2</span>) <span class="built_in">cout</span> &lt;&lt; k;</span><br><span class="line">      <span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; (i == <span class="number">0</span> ? <span class="string">'B'</span> : <span class="string">'S'</span>);<span class="comment">// if(i == 0) cout &lt;&lt; 'B'; if(i == 1) cout &lt;&lt; 'S';</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1005 继续(3n+1)猜想(C++)</title>
      <link href="/2018/11/12/PAT-B1005-cpp/"/>
      <url>/2018/11/12/PAT-B1005-cpp/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>卡拉兹(Callatz)猜想已经在1001中给出了描述。在这个题目里，情况稍微有些复杂。<br><a id="more"></a></p><p>当我们验证卡拉兹猜想的时候，为了避免重复计算，可以记录下递推过程中遇到的每一个数。例如对 $n=$ 3 进行验证的时候，我们需要计算 3、5、8、4、2、1，则当我们对 $n=$ 5、8、4、2 进行验证的时候，就可以直接判定卡拉兹猜想的真伪，而不需要重复计算，因为这 4 个数已经在验证3的时候遇到过了，我们称 5、8、4、2 是被 3“覆盖”的数。我们称一个数列中的某个数 n 为“关键数”，如果 $n$ 不能被数列中的其他数字所覆盖。</p><p>现在给定一系列待验证的数字，我们只需要验证其中的几个关键数，就可以不必再重复验证余下的数字。你的任务就是找出这些关键数字，并按从大到小的顺序输出它们。</p><h4 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h4><p>每个测试输入包含 1 个测试用例，第 1 行给出一个正整数 $K (&lt;100)$，第 2 行给出 $K$ 个互不相同的待验证的正整数 $n (1&lt;n \leq 100)$的值，数字间用空格隔开。</p><h4 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h4><p>每个测试用例的输出占一行，按从大到小的顺序输出关键数字。数字间用 1 个空格隔开，但一行中最后一个数字后没有空格。</p><h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">6</span><br><span class="line">3 5 6 7 8 11</span><br></pre></td></tr></table></figure><h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">7 6</span><br></pre></td></tr></table></figure><h2 id="易错点："><a href="#易错点：" class="headerlink" title="易错点："></a>易错点：</h2><ul><li>注意输出格式</li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>map&lt;int, int&gt; m;</code><ul><li>用于映射，键和值可以是任意类型</li><li>直接使用 <code>m[&lt;键&gt;] = &lt;值&gt;</code> 即可向map中添加一组键值对</li><li>需要的头文件：<strong>map</strong></li></ul></li><li><code>vector&lt;int&gt; ans;</code><ul><li>实现变长数组，元素类型可任意指定<ul><li><code>ans.push_back(num[i])</code>往变长数组末尾中添加一个元素</li><li><code>ans.pop_back()</code>删除变长数组中最后一个元素</li></ul></li><li>需要的头文件：<strong>vector</strong></li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> n, x, num[<span class="number">110</span>];</span><br><span class="line">  <span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; m;</span><br><span class="line">  <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; ans;</span><br><span class="line">  <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; x;</span><br><span class="line">    num[i] = x;</span><br><span class="line">    <span class="keyword">while</span>(x &gt; <span class="number">1</span>)&#123;</span><br><span class="line">      <span class="keyword">if</span>(x % <span class="number">2</span> == <span class="number">0</span>) x /= <span class="number">2</span>;</span><br><span class="line">      <span class="keyword">else</span>&#123; x = (<span class="number">3</span> * x + <span class="number">1</span>) / <span class="number">2</span>; &#125;</span><br><span class="line">      m[x] = <span class="number">1</span>; <span class="comment">//记录运算中遇到过的数字</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(m[num[i]] != <span class="number">1</span>) ans.push_back(num[i]); <span class="comment">//遍历原序列</span></span><br><span class="line">  &#125;</span><br><span class="line">  sort(ans.begin(), ans.end()); <span class="comment">// 不加参数的sort函数默认从小到大排序</span></span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = ans.size() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)&#123; <span class="comment">//倒序输出</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; ans[i];</span><br><span class="line">    <span class="keyword">if</span>(i != <span class="number">0</span>) <span class="built_in">cout</span> &lt;&lt; <span class="string">' '</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1004 成绩排名(C++)</title>
      <link href="/2018/11/12/PAT-B1004-cpp/"/>
      <url>/2018/11/12/PAT-B1004-cpp/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>读入 $n(&gt;0)$名学生的姓名、学号、成绩，分别输出成绩最高和成绩最低学生的姓名和学号。<br><a id="more"></a></p><h4 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h4><p>每个测试输入包含 1 个测试用例，格式为<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">第 1 行：正整数 n</span><br><span class="line">第 2 行：第 1 个学生的姓名 学号 成绩</span><br><span class="line">第 3 行：第 2 个学生的姓名 学号 成绩</span><br><span class="line">  ... ... ...</span><br><span class="line">第 n+1 行：第 n 个学生的姓名 学号 成绩</span><br></pre></td></tr></table></figure></p><p>其中 <strong>姓名</strong> 和 <strong>学号</strong> 均为不超过 10 个字符的字符串，成绩为 0 到 100 之间的一个整数，这里保证在一组测试用例中没有两个学生的成绩是相同的。</p><h4 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h4><p>对每个测试用例输出 2 行，第 1 行是成绩最高学生的姓名和学号，第 2 行是成绩最低学生的姓名和学号，字符串间有 1 空格。</p><h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">对每个测试用例输出 2 行，第 1 行是成绩最高学生的姓名和学号，第 2 行是成绩最低学生的姓名和学号，字符串间有 1 空格。</span><br></pre></td></tr></table></figure><h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Mike CS991301</span><br><span class="line">Joe Math990112</span><br></pre></td></tr></table></figure><h2 id="易错点："><a href="#易错点：" class="headerlink" title="易错点："></a>易错点：</h2><ul><li>实际上正确的字符串等价于: (‘P’左边’A’的个数) * (中间’A’的个数) = ‘T’右边’A’的个数</li><li>中间’A’的个数不少于一个</li><li>‘P’和’T’分别只能出现一次</li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>stu(){}</code><ul><li>结构体中加上这句后，可以无需声明直接定义一个新的变量</li></ul></li><li><code>stu(string _name, string _id, int _score):name(_name), id(_id), score(_score){}</code><ul><li>实现直接用指定参数定义结构体变量</li></ul></li><li><code>bool cmp(stu a, stu b){}</code><ul><li>比较函数，可以自定义 sort 时的排序策略</li><li>本题中该函数实现按关键字 score 对数组从大到小排序</li></ul></li><li><code>sort(S, S + n, cmp);</code><ul><li>排序函数，实现 [first, last) 范围内的排序，可以自定义排序策略 cmp 函数</li><li>不带 cmp 参数的 sort 函数实现从小到大排序</li><li>所需头文件： <strong>algorithm</strong></li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">stu</span>&#123;</span></span><br><span class="line">  <span class="built_in">string</span> name, id;</span><br><span class="line">  <span class="keyword">int</span> score;</span><br><span class="line">  stu()&#123;&#125;</span><br><span class="line">  stu(<span class="built_in">string</span> _name, <span class="built_in">string</span> _id, <span class="keyword">int</span> _score):name(_name), id(_id), score(_score)&#123;&#125;</span><br><span class="line">&#125;S[<span class="number">1000</span>];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(stu a, stu b)</span></span>&#123;</span><br><span class="line">  <span class="keyword">return</span> a.score &gt; b.score;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> n;</span><br><span class="line">  <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">    <span class="keyword">int</span> score;</span><br><span class="line">    <span class="built_in">string</span> name, id;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; name &gt;&gt; id &gt;&gt; score;</span><br><span class="line">    S[i] = stu(name, id, score);</span><br><span class="line">  &#125;</span><br><span class="line">  sort(S, S + n, cmp);</span><br><span class="line">  <span class="built_in">cout</span> &lt;&lt; S[<span class="number">0</span>].name &lt;&lt; <span class="string">' '</span> &lt;&lt; S[<span class="number">0</span>].id &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">  <span class="built_in">cout</span> &lt;&lt; S[n - <span class="number">1</span>].name &lt;&lt; <span class="string">' '</span> &lt;&lt; S[n - <span class="number">1</span>].id &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1090 危险品装箱(C++)</title>
      <link href="/2018/11/11/PAT-B1090-cpp/"/>
      <url>/2018/11/11/PAT-B1090-cpp/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>集装箱运输货物时，我们必须特别小心，不能把不相容的货物装在一只箱子里。比如氧化剂绝对不能跟易燃液体同箱，否则很容易造成爆炸。</p><p>本题给定一张不相容物品的清单，需要你检查每一张集装箱货品清单，判断它们是否能装在同一只箱子里。<br><a id="more"></a></p><h4 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h4><p>输入第一行给出两个正整数：$N(\le10^4)$ 是成对的不相容物品的对数；$M(\le100)$ 是集装箱货品清单的单数。</p><p>随后数据分两大块给出。第一块有 N 行，每行给出一对不相容的物品。第二块有 M 行，每行给出一箱货物的清单，格式如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">K G[1] G[2] ... G[K]</span><br></pre></td></tr></table></figure><p>其中 $K (\le1000)$ 是物品件数，G[i] 是物品的编号。简单起见，每件物品用一个 5 位数的编号代表。两个数字之间用空格分隔。</p><h4 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h4><p>对每箱货物清单，判断是否可以安全运输。如果没有不相容物品，则在一行中输出 <strong>Yes</strong>，否则输出 <strong>No</strong>。</p><h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">6 3</span><br><span class="line">20001 20002</span><br><span class="line">20003 20004</span><br><span class="line">20005 20006</span><br><span class="line">20003 20001</span><br><span class="line">20005 20004</span><br><span class="line">20004 20006</span><br><span class="line">4 00001 20004 00002 20003</span><br><span class="line">5 98823 20002 20003 20006 10010</span><br><span class="line">3 12345 67890 23333</span><br></pre></td></tr></table></figure><h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">No</span><br><span class="line">Yes</span><br><span class="line">Yes</span><br></pre></td></tr></table></figure><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li>用变长数组防止超内存</li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>map &lt;int, int&gt; m;</code><ul><li>功能：定义了一个键和值都为 int 型的 map 型变量，存放出现过的数并记录次数<ul><li>可以通过关键词名称索引访问对应值 <code>m[key]++;</code></li></ul></li><li>需要头文件：<strong>map</strong></li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> n, cnt = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">map</span> &lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; m;</span><br><span class="line">  <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">    <span class="keyword">int</span> key = i / <span class="number">2</span> + i / <span class="number">3</span> + i / <span class="number">5</span>;</span><br><span class="line">    m[key]++;</span><br><span class="line">    <span class="keyword">if</span>(m[key] == <span class="number">1</span>) cnt++; <span class="comment">//对新出现的数字计数</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">cout</span> &lt;&lt; cnt;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1087 有多少不同的值(C++)</title>
      <link href="/2018/11/11/PAT-B1087-cpp/"/>
      <url>/2018/11/11/PAT-B1087-cpp/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>当自然数 $n$ 依次取 1、2、3、……、N 时，算式 ⌊$n/2$⌋+⌊$n/3$⌋+⌊$n/5$⌋ 有多少个不同的值？（注：⌊$x$⌋ 为取整函数，表示不超过 $x$ 的最大自然数，即 $x$ 的整数部分。）<br><a id="more"></a></p><h4 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h4><p>输入给出一个正整数 $N(2 \le N \le 10^4)$。</p><h4 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h4><p>在一行中输出题面中算式取到的不同值的个数。</p><h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2017</span><br></pre></td></tr></table></figure><h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1480</span><br></pre></td></tr></table></figure><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li>用 map 记录每个数出现的次数，键值等于1的时候说明该数第一次被记录</li><li>整数除法默认向下取整，所以不需要特殊调整</li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>map &lt;int, int&gt; m;</code><ul><li>功能：定义了一个键和值都为 int 型的 map 型变量，存放出现过的数并记录次数<ul><li>可以通过关键词名称索引访问对应值 <code>m[key]++;</code></li></ul></li><li>需要头文件：<strong>map</strong></li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> n, cnt = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">map</span> &lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; m;</span><br><span class="line">  <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">    <span class="keyword">int</span> key = i / <span class="number">2</span> + i / <span class="number">3</span> + i / <span class="number">5</span>;</span><br><span class="line">    m[key]++;</span><br><span class="line">    <span class="keyword">if</span>(m[key] == <span class="number">1</span>) cnt++; <span class="comment">//对新出现的数字计数</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">cout</span> &lt;&lt; cnt;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1086 就不告诉你(C++)</title>
      <link href="/2018/11/11/PAT-B1086-cpp/"/>
      <url>/2018/11/11/PAT-B1086-cpp/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>做作业的时候，邻座的小盆友问你：“五乘以七等于多少？”你应该不失礼貌地围笑着告诉他：“五十三。”本题就要求你，对任何一对给定的正整数，倒着输出它们的乘积。<br><a id="more"></a></p><h4 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h4><p>输入在第一行给出两个不超过 1000 的正整数 A 和 B，其间以空格分隔。</p><h4 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h4><p>在一行中倒着输出 A 和 B 的乘积。</p><h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5 7</span><br></pre></td></tr></table></figure><h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">53</span><br></pre></td></tr></table></figure><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><ul><li>逆转输出不要输出前导零</li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><code>G[x].push_back(y);</code><ul><li>功能：往变长数组加入新元素</li><li>需要头文件：<strong>vector</strong></li></ul></li><li><code>for(auto it = s.begin(); it != s.end(); it++){ 循环体; }</code><ul><li>功能：遍历一个集合，it是迭代器，*it 为迭代器指向的元素</li><li>需要头文件：<strong>set</strong></li></ul></li><li><code>s.insert(id);</code><ul><li>功能：往集合中加入元素</li><li>需要头文件：<strong>set</strong></li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">100000</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> N, M;</span><br><span class="line">  <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; G[maxn];</span><br><span class="line">  <span class="built_in">cin</span> &gt;&gt; N &gt;&gt; M;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)&#123;</span><br><span class="line">    <span class="keyword">int</span> x, y;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; x &gt;&gt; y;</span><br><span class="line">    G[x].push_back(y);</span><br><span class="line">    G[y].push_back(x);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; M; i++)&#123;</span><br><span class="line">    <span class="keyword">int</span> k, id, valid = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt; s; <span class="comment">//用一个集合暂存清单</span></span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; k;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; k; j++)&#123;</span><br><span class="line">      <span class="built_in">cin</span> &gt;&gt; id;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> l = <span class="number">0</span>; valid == <span class="number">1</span> &amp;&amp; l &lt; G[id].size(); l++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> it = s.begin(); it != s.end(); it++)&#123;<span class="comment">//寻找当前物品是否与集合中其他物品不相容</span></span><br><span class="line">          <span class="keyword">if</span>(G[id][l] == *it)&#123; <span class="comment">//存在不相容的，记录非法并退出查找</span></span><br><span class="line">            valid = <span class="number">0</span>; <span class="keyword">break</span>;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      s.insert(id); <span class="comment">//将当前物品加入集合</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(valid == <span class="number">0</span>) <span class="built_in">cout</span> &lt;&lt; <span class="string">"No\n"</span>; <span class="comment">//非法</span></span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; <span class="string">"Yes\n"</span>;          <span class="comment">//合法</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1002 写出这个数(Python)</title>
      <link href="/2018/11/11/PAT-B1002-py/"/>
      <url>/2018/11/11/PAT-B1002-py/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>读入一个正整数 $n$，计算其各位数字之和，用汉语拼音写出和的每一位数字。</p><a id="more"></a><h4 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h4><p>每个测试输入包含 1 个测试用例，即给出自然数 $n$ 的值。这里保证 $n$ 小于 $10^{100}$ 。</p><h4 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h4><p>在一行内输出 $n$ 的各位数字之和的每一位，拼音数字间有 1 空格，但一行中最后一个拼音数字后没有空格。</p><h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1234567890987654321123456789</span><br></pre></td></tr></table></figure><h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yi san wu</span><br></pre></td></tr></table></figure><h2 id="易错点："><a href="#易错点：" class="headerlink" title="易错点："></a>易错点：</h2><ul><li>注意输出末尾没有空格</li><li>倒序输出</li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><ul><li><p><code>s = input()</code></p><ul><li>输入字符串</li></ul></li><li><p><code>y = int(x)</code></p><ul><li>将变量类型转换为整型</li></ul></li><li><p><code>y = str(x)</code></p><ul><li>将变量类型转换为字符串型</li></ul></li><li><p><code>for i, t in enumerate(ans):</code></p><ul><li>同时遍历字符串中的字符以及字符的索引</li></ul></li><li><p><code>print(&#39; &#39; if i &gt; 0 else &#39;&#39;, li[int(t)], sep = &#39;&#39;, end = &#39;&#39;)</code></p><ul><li><p>索引判断令其在中间添加空格</p></li><li><p>另一种空格分隔输出结果的方法（末尾不带空格，适用于列表）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">L = [1, 2, 3, 4, 5]</span><br><span class="line">print(&quot; &quot;.join(str(x) for x in L))</span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">li = [<span class="string">"ling"</span>, <span class="string">"yi"</span>, <span class="string">"er"</span>, <span class="string">"san"</span>, <span class="string">"si"</span>, <span class="string">"wu"</span>, <span class="string">"liu"</span>, <span class="string">"qi"</span>, <span class="string">"ba"</span>, <span class="string">"jiu"</span>]</span><br><span class="line">s = input()</span><br><span class="line">n = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> s:     <span class="comment"># 求和</span></span><br><span class="line">    n = n + int(x)</span><br><span class="line"></span><br><span class="line">ans = str(n)    <span class="comment"># 类型转换成字符串</span></span><br><span class="line"><span class="keyword">for</span> i, t <span class="keyword">in</span> enumerate(ans):  <span class="comment"># 同时遍历字符和索引</span></span><br><span class="line">    print(<span class="string">' '</span> <span class="keyword">if</span> i &gt; <span class="number">0</span> <span class="keyword">else</span> <span class="string">''</span>, li[int(t)], sep = <span class="string">''</span>, end = <span class="string">''</span>) <span class="comment"># 空格分隔输出</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1003 我要通过！(C++)</title>
      <link href="/2018/11/11/PAT-B1003-cpp/"/>
      <url>/2018/11/11/PAT-B1003-cpp/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>“<strong>答案正确</strong>”是自动判题系统给出的最令人欢喜的回复。本题属于 PAT 的“<strong>答案正确</strong>”大派送 —— 只要读入的字符串满足下列条件，系统就输出“<strong>答案正确</strong>”，否则输出“<strong>答案错误</strong>”。<br><a id="more"></a></p><p>得到“<strong>答案正确</strong>”的条件是：</p><ul><li>字符串中必须仅有 P、 A、 T这三种字符，不可以包含其它字符；</li><li>任意形如 xPATx 的字符串都可以获得“<strong>答案正确</strong>”，其中 x 或者是空字符串，或者是仅由字母 A 组成的字符串；</li><li>如果 aPbTc 是正确的，那么 aPbATca 也是正确的，其中 a、 b、 c 均或者是空字符串，或者是仅由字母 A 组成的字符串。<br>现在就请你为 PAT 写一个自动裁判程序，判定哪些字符串是可以获得“<strong>答案正确</strong>”的。</li></ul><h4 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h4><p>每个测试输入包含 1 个测试用例。第 1 行给出一个正整数 $n (&lt;10)$，是需要检测的字符串个数。接下来每个字符串占一行，字符串长度不超过 100，且不包含空格。</p><h4 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h4><p>每个字符串的检测结果占一行，如果该字符串可以获得“<strong>答案正确</strong>”，则输出 <strong>YES</strong>，否则输出 <strong>NO</strong>。</p><h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">8</span><br><span class="line">PAT</span><br><span class="line">PAAT</span><br><span class="line">AAPATAA</span><br><span class="line">AAPAATAAAA</span><br><span class="line">xPATx</span><br><span class="line">PT</span><br><span class="line">Whatever</span><br><span class="line">APAAATAA</span><br></pre></td></tr></table></figure><h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">YES</span><br><span class="line">YES</span><br><span class="line">YES</span><br><span class="line">YES</span><br><span class="line">NO</span><br><span class="line">NO</span><br><span class="line">NO</span><br><span class="line">NO</span><br></pre></td></tr></table></figure><h2 id="易错点："><a href="#易错点：" class="headerlink" title="易错点："></a>易错点：</h2><ul><li>实际上正确的字符串等价于: (‘P’左边’A’的个数) * (中间’A’的个数) = ‘T’右边’A’的个数</li><li>中间’A’的个数不少于一个</li><li>‘P’和’T’分别只能出现一次</li></ul><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> n;</span><br><span class="line">  <span class="built_in">string</span> s;</span><br><span class="line">  <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">  getchar();</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">    <span class="keyword">bool</span> valid = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">int</span> LeftA = <span class="number">0</span>, InsideA = <span class="number">0</span>, RightA = <span class="number">0</span>, P = <span class="number">0</span>, T = <span class="number">0</span>;</span><br><span class="line">    getline(<span class="built_in">cin</span>, s);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; s.length(); j++)&#123;</span><br><span class="line">      <span class="keyword">if</span>(s[j] != <span class="string">'P'</span> &amp;&amp; s[j] != <span class="string">'A'</span> &amp;&amp; s[j] != <span class="string">'T'</span>)&#123;</span><br><span class="line">        valid = <span class="literal">false</span>; <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span>(s[j] == <span class="string">'A'</span>)&#123;      <span class="comment">// 统计三个位置A的个数</span></span><br><span class="line">        <span class="keyword">if</span>(P == <span class="number">0</span>) LeftA++;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(P == <span class="number">1</span> &amp;&amp; T == <span class="number">0</span>) InsideA++;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(P == <span class="number">1</span> &amp;&amp; T == <span class="number">1</span>) RightA++;</span><br><span class="line">      &#125;<span class="keyword">else</span> <span class="keyword">if</span>(s[j] == <span class="string">'P'</span>) P++;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span>(s[j] == <span class="string">'T'</span>) T++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(P != <span class="number">1</span> || T != <span class="number">1</span> || InsideA == <span class="number">0</span>) valid = <span class="literal">false</span>;  <span class="comment">// 两个条件都满足输出“YES”</span></span><br><span class="line">    <span class="keyword">if</span>(RightA != LeftA * InsideA) valid = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span>(valid) <span class="built_in">cout</span> &lt;&lt; <span class="string">"YES"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; <span class="string">"NO"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>数据科学中常用的 Python 语法(进阶)</title>
      <link href="/2018/11/09/python-tutorails-advanced-level/"/>
      <url>/2018/11/09/python-tutorails-advanced-level/</url>
      
        <content type="html"><![CDATA[<p>这两天在看这本 <em><a href="https://book.douban.com/subject/26364377/" target="_blank" rel="noopener">Data Science from Scrach</a></em> ( <a href="http://www.zhanjunlang.com/resources/tutorial/Data%20Science%20from%20Scratch%20First%20Principles%20with%20Python.pdf" target="_blank" rel="noopener">PDF地址</a> )，是本不错的通俗易懂的数据科学入门书籍。其中一个章节介绍了一下 Python 的基础语法和数据科学常用的进阶语法，觉得介绍得不错，很简洁明了，所以将其翻译一下放在这里以作备忘。<br><a href="http://lulalap.com/2018/11/07/python-tutorails-basic-level/">数据科学中常用的 Python 语法(基础)</a><br><a href="http://lulalap.com/2018/11/09/python-tutorails-advanced-level/">数据科学中常用的 Python 语法(进阶)</a><br><a id="more"></a></p><p>本章侧重于介绍在数据处理中非常有用的 Python 进阶语法和功能（基于 Python 2.7 ）。</p><h3 id="排序-Sorting"><a href="#排序-Sorting" class="headerlink" title="排序 Sorting"></a>排序 Sorting</h3><p>如果你想对 Python 的列表进行排序，可以使用列表的 <em>sort</em> 方法。如果你不想破坏原列表，可以使用 <em>sorted</em> 函数返回一个新的排好序的列表:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">x = [<span class="number">4</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">y = sorted(x)       <span class="comment"># y = [1,2,3,4], x 不变</span></span><br><span class="line">x.sort()            <span class="comment"># 当前 x = [1,2,3,4]</span></span><br></pre></td></tr></table></figure><p><em>sort</em> 或 <em>sorted</em> 是默认从小到大对列表进行排序的。</p><p>如果想让它从大到小排序，可以指定一个 <em>reverse = True</em> 的参数。</p><p>也可以自定义排序函数，让列表按照指定关键字进行排序:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 按照绝对值从大到小排序</span></span><br><span class="line">x = sorted([<span class="number">-4</span>,<span class="number">1</span>,<span class="number">-2</span>,<span class="number">3</span>], key=abs, reverse=<span class="keyword">True</span>) <span class="comment"># is [-4,3,-2,1]</span></span><br><span class="line"><span class="comment"># 按照单词出现的次数从大到小进行排序</span></span><br><span class="line">          wc = sorted(word_counts.items(),</span><br><span class="line">          key=<span class="keyword">lambda</span> (word, count): count,</span><br><span class="line">          reverse=<span class="keyword">True</span>)</span><br></pre></td></tr></table></figure><h3 id="列表解析-List-Comprehensions"><a href="#列表解析-List-Comprehensions" class="headerlink" title="列表解析 List Comprehensions"></a>列表解析 List Comprehensions</h3><p>我们会经常遇到这样的情况，想要提取列表中特定几个元素组成新的列表，或是改变其中几个元素的值，或者皆有。Python 中的惯用做法就是 <em>列表解析（List Comprehensions）</em> :</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">even_numbers = [x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">5</span>) <span class="keyword">if</span> x % <span class="number">2</span> == <span class="number">0</span>]  <span class="comment"># [0, 2, 4]</span></span><br><span class="line">squares = [x * x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">5</span>)]                 <span class="comment"># [0, 1, 4, 9, 16]</span></span><br><span class="line">even_squares = [x * x <span class="keyword">for</span> x <span class="keyword">in</span> even_numbers]        <span class="comment"># [0, 4, 16]</span></span><br></pre></td></tr></table></figure><p>类似地你可以将列表变成字典或集合:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">square_dict = &#123; x : x * x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">5</span>) &#125;       <span class="comment"># &#123; 0:0, 1:1, 2:4, 3:9, 4:16 &#125;</span></span><br><span class="line">square_set = &#123; x * x <span class="keyword">for</span> x <span class="keyword">in</span> [<span class="number">1</span>, <span class="number">-1</span>] &#125;             <span class="comment"># &#123; 1 &#125;</span></span><br></pre></td></tr></table></figure><p>如果你不需要使用到列表中的元素，那么可以将下划线当作变量:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zeroes = [<span class="number">0</span> <span class="keyword">for</span> _ <span class="keyword">in</span> even_numbers] <span class="comment"># 与列表 even_numbers 有相同的长度</span></span><br></pre></td></tr></table></figure><p>列表解析支持多重 for 循环:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pairs = [(x, y)</span><br><span class="line">         <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">10</span>)</span><br><span class="line">         <span class="keyword">for</span> y <span class="keyword">in</span> range(<span class="number">10</span>)]    <span class="comment"># 共100对： (0,0) (0,1) ... (9,8), (9,9)</span></span><br></pre></td></tr></table></figure><p>后面的 for 循环可以使用前面 for 循环的结果:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">increasing_pairs = [(x, y)                      <span class="comment"># 只包含 x &lt; y 的数据对</span></span><br><span class="line">                    <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">10</span>)          <span class="comment"># range(lo, hi) equals</span></span><br><span class="line">                    <span class="keyword">for</span> y <span class="keyword">in</span> range(x + <span class="number">1</span>, <span class="number">10</span>)]  <span class="comment"># [lo, lo + 1, ..., hi - 1]</span></span><br></pre></td></tr></table></figure><p>未来我们将会经常用到列表解析。</p><h3 id="生成器和迭代器-Generators-and-Iterators"><a href="#生成器和迭代器-Generators-and-Iterators" class="headerlink" title="生成器和迭代器 Generators and Iterators"></a>生成器和迭代器 Generators and Iterators</h3><p>列表有一个问题就是一不小心就会变得非常庞大，比如 range(1000000) 将会生成一个具有一百万个元素的列表。如果一次只处理一个数据，耗时可能会过长（或内存耗尽）。而实际上你可能只用到前几个数据，这样其他运算就是多余的。</p><p>而生成器可以让你只迭代那些需要用到的数据。可以使用函数和 <em>yield</em> 表达式来创建一个生成器:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">lazy_range</span><span class="params">(n)</span>:</span></span><br><span class="line">    <span class="string">"""a lazy version of range"""</span></span><br><span class="line">    i = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> i &lt; n:</span><br><span class="line">        <span class="keyword">yield</span> i</span><br><span class="line">        i += <span class="number">1</span></span><br></pre></td></tr></table></figure><p>译者补充：<br>生成器也是一种特殊迭代器，yield 是生成器实现迭代的关键。它作为生成器执行的暂停恢复点，可以对 yield 表达式进行赋值，也可以将 yield 表达式的值返回。任何包含 yield 语句的函数被称为生成器。跳出生成器时，生成器将当前执行状态保存，并在下次执行时恢复现场，以获得下一个迭代值。采用列表迭代将会占用大量地址空间，而使用生成器差不多只占用一个地址空间，从而达到节约内存的效果。</p><p>下面这个循环将一次消耗一个 yield 中的值直到消耗完毕:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> lazy_range(<span class="number">10</span>):</span><br><span class="line">    do_something_with(i)</span><br></pre></td></tr></table></figure><p>(事实上 Python 自带了一个实现如上 _lazy_range_ 效果的函数，称为 <em>xrange</em>, Python 3 中称为 <em>lazy</em>.) 这意味着你可以创建一个无穷数列:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">natural_numbers</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""返回 1, 2, 3, ..."""</span></span><br><span class="line">    n = <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        <span class="keyword">yield</span> n</span><br><span class="line">        n += <span class="number">1</span></span><br></pre></td></tr></table></figure><p>不过并不建议使用这种没有退出循环逻辑的语句。</p><ul><li>TIP<br>使用生成器迭代的一个缺点就是，从头到尾对元素只能迭代一次，如果想实现多次迭代，你只能每次都创建新的生成器或者使用列表。</li></ul><p>第二种创建生成器的方法：利用括号内的解析表达式:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lazy_evens_below_20 = (i <span class="keyword">for</span> i <span class="keyword">in</span> lazy_range(<span class="number">20</span>) <span class="keyword">if</span> i % <span class="number">2</span> == <span class="number">0</span>)</span><br></pre></td></tr></table></figure><p>我们知道字典中的 <em>items()</em> 方法将返回一列表的字典中全部的键值对，但更多情况下，我们使用 <em>iteritems()</em> 生成器方法来进行迭代，每次只产生并返回一个键值对。</p><h3 id="随机-Randomness"><a href="#随机-Randomness" class="headerlink" title="随机 Randomness"></a>随机 Randomness</h3><p>在学习数据科学的时候，我们将会经常需要生成随机数，所以只要导入 <em>random</em> 模块就能使用:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line">four_uniform_randoms = [random.random() <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">4</span>)]</span><br><span class="line"><span class="comment"># [0.8444218515250481,        # random.random() 生成随机数</span></span><br><span class="line"><span class="comment"># 0.7579544029403025,         # 随机数被标准化处理，范围介于 0 和 1 之间</span></span><br><span class="line"><span class="comment"># 0.420571580830845,          # 该函数是最常用的用于生成随机数的函数</span></span><br><span class="line"><span class="comment"># 0.25891675029296335]</span></span><br></pre></td></tr></table></figure><p>如果你想获得可重现的结果，可以让 <em>random</em> 模块基于 <em>random.seed</em> 设置的内部状态生成伪随机（即确定性）数字:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">random.seed(<span class="number">10</span>)           <span class="comment"># set the seed to 10</span></span><br><span class="line"><span class="keyword">print</span> random.random()     <span class="comment"># 0.57140259469</span></span><br><span class="line">random.seed(<span class="number">10</span>)           <span class="comment"># reset the seed to 10</span></span><br><span class="line"><span class="keyword">print</span> random.random()     <span class="comment"># 0.57140259469 again</span></span><br></pre></td></tr></table></figure><p>有时候我们也会使用 <em>random.randrange</em> 函数来生成一个指定范围内的随机数:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">random.randrange(<span class="number">10</span>)      <span class="comment"># 从 range(10) = [0, 1, ..., 9] 中随机选择一个数</span></span><br><span class="line">random.randrange(<span class="number">3</span>, <span class="number">6</span>)    <span class="comment"># 从 range(3, 6) = [3, 4, 5] 随机选择一个数</span></span><br></pre></td></tr></table></figure><p>还有一些方法有时候用起来很方便，比如 <em>random.shuffle</em> 将打乱一个列表中的元素次序，重新生成一个随机排列的列表:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">up_to_ten = range(<span class="number">10</span>)</span><br><span class="line">random.shuffle(up_to_ten)</span><br><span class="line"><span class="keyword">print</span> up_to_ten</span><br><span class="line"><span class="comment"># [2, 5, 1, 9, 7, 3, 8, 6, 4, 0] (你得到的结果应该不同)</span></span><br></pre></td></tr></table></figure><p>如果想从一个列表中随机选择一个元素，可以使用 <em>random.choice</em> 方法:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">my_best_friend = random.choice([<span class="string">"Alice"</span>, <span class="string">"Bob"</span>, <span class="string">"Charlie"</span>]) <span class="comment"># 我得到的是 "Bob"</span></span><br></pre></td></tr></table></figure><p>如果既想要生成一个随机序列，又不想打乱原列表，可以使用 <em>random.sample</em> 方法:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lottery_numbers = range(<span class="number">60</span>)</span><br><span class="line">winning_numbers = random.sample(lottery_numbers, <span class="number">6</span>) <span class="comment"># [16, 36, 10, 6, 25, 9]</span></span><br></pre></td></tr></table></figure><p>你可以通过多次调用实现多个随机样本的选择（允许重复）:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">four_with_replacement = [random.choice(range(<span class="number">10</span>))</span><br><span class="line">                         <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">4</span>)]</span><br><span class="line"><span class="comment"># [9, 4, 4, 2]</span></span><br></pre></td></tr></table></figure><h3 id="正则表达式-Regular-Expressions"><a href="#正则表达式-Regular-Expressions" class="headerlink" title="正则表达式 Regular Expressions"></a>正则表达式 Regular Expressions</h3><p>正则表达式用于文本搜索，略显复杂但非常有用，因而有大量的书专门讲解正则表达式。我们遇到它们的时候再进行具体的解释，下面是一些在 Python 中使用正则表达式的例子:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">print</span> all([                                 <span class="comment"># 下面的表述全部返回 true, 因为</span></span><br><span class="line">    <span class="keyword">not</span> re.match(<span class="string">"a"</span>, <span class="string">"cat"</span>),               <span class="comment"># * 'cat' 不以 'a' 开头</span></span><br><span class="line">    re.search(<span class="string">"a"</span>, <span class="string">"cat"</span>),                  <span class="comment"># * 'cat' 中包含了字母 'a'</span></span><br><span class="line">    <span class="keyword">not</span> re.search(<span class="string">"c"</span>, <span class="string">"dog"</span>),              <span class="comment"># * 'dog' 中不包含字母 'c'</span></span><br><span class="line">    <span class="number">3</span> == len(re.split(<span class="string">"[ab]"</span>, <span class="string">"carbs"</span>)),    <span class="comment"># * 根据 a 或 b 将单词拆分成三部分 ['c','r','s']</span></span><br><span class="line">    <span class="string">"R-D-"</span> == re.sub(<span class="string">"[0-9]"</span>, <span class="string">"-"</span>, <span class="string">"R2D2"</span>)  <span class="comment"># * 用短横替换数字</span></span><br><span class="line">    ])                                      <span class="comment"># 输出 True</span></span><br></pre></td></tr></table></figure><h3 id="面向对象编程-Object-Oriented-Programming"><a href="#面向对象编程-Object-Oriented-Programming" class="headerlink" title="面向对象编程 Object-Oriented Programming"></a>面向对象编程 Object-Oriented Programming</h3><p>与许多语言一样，Python 允许你定义封装数据的类和对其进行操作的函数。我们有时会使用它们来使我们的代码更清晰简洁。通过构建一个带有大量注释的示例来解释它们可能是最简单的。假设没有内置的 Python 集合，我们可能想要创建自己的 <em>Set</em> 类。那么这个类应当具备哪些功能呢？比如给定一个 <em>Set</em> ，我们需要能够向其中添加项目，从中删除项目，并检查它是否包含特定值。所以，我们将创建所有这些功能将其作为该类的成员函数。这样，我们就可以在 <em>Set</em> 对象之后用点访问这些成员函数:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 按照惯例，我们给出 _PascalCase_ 类的名称</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Set</span>:</span></span><br><span class="line">    <span class="comment"># 这些是成员函数</span></span><br><span class="line">    <span class="comment"># 每个成员函数都有一个置于首位的"self"参数(另一个惯例)</span></span><br><span class="line">    <span class="comment"># “self”对应于正在使用的特定的 Set 对象</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, values=None)</span>:</span></span><br><span class="line">        <span class="string">"""这是创建函数</span></span><br><span class="line"><span class="string">        每当你创建一个新的 Set 就会调用该函数</span></span><br><span class="line"><span class="string">        可以像这样调用</span></span><br><span class="line"><span class="string">        s1 = Set() # 空集合</span></span><br><span class="line"><span class="string">        s2 = Set([1,2,2,3]) # 根据指定值初始化集合"""</span></span><br><span class="line">        self.dict = &#123;&#125; <span class="comment"># Set 中的每个实例都有自己的 dict 属性</span></span><br><span class="line">        <span class="comment"># 我们使用该属性追踪每个成员</span></span><br><span class="line">        <span class="keyword">if</span> values <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:</span><br><span class="line">            <span class="keyword">for</span> value <span class="keyword">in</span> values:</span><br><span class="line">            self.add(value)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__repr__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""这是 Set 对象中的字符串表达式</span></span><br><span class="line"><span class="string">        你可以通过向 Python 命令窗口键入字符串或者利用 str() 方法向对象传递字符串"""</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Set: "</span> + str(self.dict.keys())</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 我们将通过成为 self.dict 中的键，并将键值设为 True 来表示成员资格</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(self, value)</span>:</span></span><br><span class="line">        self.dict[value] = <span class="keyword">True</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 如果参数为字典中的键，对应的值就在 Set 中</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">contains</span><span class="params">(self, value)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> value <span class="keyword">in</span> self.dict</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">remove</span><span class="params">(self, value)</span>:</span></span><br><span class="line">        <span class="keyword">del</span> self.dict[value]</span><br></pre></td></tr></table></figure><p>然后我们就可以像这样使用 Set:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">s = Set([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>])</span><br><span class="line">s.add(<span class="number">4</span>)</span><br><span class="line"><span class="keyword">print</span> s.contains(<span class="number">4</span>)     <span class="comment"># True</span></span><br><span class="line">s.remove(<span class="number">3</span>)</span><br><span class="line"><span class="keyword">print</span> s.contains(<span class="number">3</span>)     <span class="comment"># False</span></span><br></pre></td></tr></table></figure><h3 id="函数工具-Functional-Tools"><a href="#函数工具-Functional-Tools" class="headerlink" title="函数工具 Functional Tools"></a>函数工具 Functional Tools</h3><h4 id="部分函数-partial"><a href="#部分函数-partial" class="headerlink" title="部分函数 partial"></a>部分函数 partial</h4><p>当传递函数时，有时我们会想要使用某函数的部分功能以创建新函数。举个简单的例子，假设我们有两个变量的函数:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">exp</span><span class="params">(base, power)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> base ** power</span><br></pre></td></tr></table></figure><p>我们想要利用它来创建一个函数，该函数输入一个变量，输出底数为 2 的幂函数 <em>exp(2, power)</em> 的结果。</p><p>当然，我们可以用 <em>def</em> 定义一个新的函数，虽然这看起来不太明智:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">two_to_the</span><span class="params">(power)</span>:</span></span><br><span class="line">  <span class="keyword">return</span> exp(<span class="number">2</span>, power)</span><br></pre></td></tr></table></figure><p>更聪明的做法是利用 <em>functools.partial</em> 方法:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> partial</span><br><span class="line">two_to_the = partial(exp, <span class="number">2</span>)      <span class="comment"># 当前函数只有一个变量</span></span><br><span class="line"><span class="keyword">print</span> two_to_the(<span class="number">3</span>)               <span class="comment"># 8</span></span><br></pre></td></tr></table></figure><p>如果指定了名称，也可以使用 <em>partial</em> 方法填充其他的参数:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">square_of = partial(exp, power=<span class="number">2</span>)</span><br><span class="line"><span class="keyword">print</span> square_of(<span class="number">3</span>)                <span class="comment"># 9</span></span><br></pre></td></tr></table></figure><p>如果你尝试在函数中间乱用参数，那么程序将很快就会变得混乱，所以请尽量避免这种行为。</p><h4 id="映射-map"><a href="#映射-map" class="headerlink" title="映射 map"></a>映射 map</h4><p>我们偶尔也会使用 <em>map</em>，<em>reduce</em>，和 <em>filter</em> 等函数来作为列表解析的功能替代:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">double</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">2</span> * x</span><br><span class="line"></span><br><span class="line">xs = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line">twice_xs = [double(x) <span class="keyword">for</span> x <span class="keyword">in</span> xs]      <span class="comment"># [2, 4, 6, 8]</span></span><br><span class="line">twice_xs = map(double, xs)              <span class="comment"># 同上</span></span><br><span class="line">list_doubler = partial(map, double)     <span class="comment"># 函数功能是将列表加倍</span></span><br><span class="line">twice_xs = list_doubler(xs)             <span class="comment"># 也是 [2, 4, 6, 8]</span></span><br></pre></td></tr></table></figure><p><em>map</em> 方法还可以用于多参数函数到多列表的映射:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">multiply</span><span class="params">(x, y)</span>:</span> <span class="keyword">return</span> x * y</span><br><span class="line"></span><br><span class="line">products = map(multiply, [<span class="number">1</span>, <span class="number">2</span>], [<span class="number">4</span>, <span class="number">5</span>])  <span class="comment"># [1 * 4, 2 * 5] = [4, 10]</span></span><br></pre></td></tr></table></figure><h4 id="过滤器-filter"><a href="#过滤器-filter" class="headerlink" title="过滤器 filter"></a>过滤器 filter</h4><p>类似地，过滤器实现的是列表解析中 <em>if</em> 的功能:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">is_even</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="string">"""若 x 为偶数则返回 True，x 为奇数则返回 False"""</span></span><br><span class="line">    <span class="keyword">return</span> x % <span class="number">2</span> == <span class="number">0</span></span><br><span class="line"></span><br><span class="line">x_evens = [x <span class="keyword">for</span> x <span class="keyword">in</span> xs <span class="keyword">if</span> is_even(x)]   <span class="comment"># [2, 4]</span></span><br><span class="line">x_evens = filter(is_even, xs)             <span class="comment"># 同上</span></span><br><span class="line">list_evener = partial(filter, is_even)    <span class="comment"># 该函数实现过滤功能</span></span><br><span class="line">x_evens = list_evener(xs)                 <span class="comment"># 也是 [2, 4]</span></span><br></pre></td></tr></table></figure><h4 id="缩减-reduce"><a href="#缩减-reduce" class="headerlink" title="缩减 reduce"></a>缩减 reduce</h4><p><em>reduce</em> 方法不断合并列表中的第一个和第二个元素，然后将结果与第三个元素合并，并一直重复这个过程，直到得到一个唯一的结果:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">x_product = reduce(multiply, xs)          <span class="comment"># = 1 * 2 * 3 * 4 = 24</span></span><br><span class="line">list_product = partial(reduce, multiply)  <span class="comment"># 该函数实现缩减一个列表</span></span><br><span class="line">x_product = list_product(xs)              <span class="comment"># 也是 24</span></span><br></pre></td></tr></table></figure><h3 id="枚举-enumerate"><a href="#枚举-enumerate" class="headerlink" title="枚举 enumerate"></a>枚举 enumerate</h3><p>偶尔会出现这样的情况，在遍历一个列表的时候同时要使用元素和其索引:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 不太 Python（不太简洁优美）</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(documents)):</span><br><span class="line">    document = documents[i]</span><br><span class="line">    do_something(i, document)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 同样不太 Python（不太简洁优美）</span></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> document <span class="keyword">in</span> documents:</span><br><span class="line">    do_something(i, document)</span><br><span class="line">    i += <span class="number">1</span></span><br></pre></td></tr></table></figure><p>最简洁的做法是使用 <em>enumerate</em> 枚举方法生成一个元组 <em>tuples (index, element)</em>:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i, document <span class="keyword">in</span> enumerate(documents):</span><br><span class="line">    do_something(i, document)</span><br></pre></td></tr></table></figure><p>类似地，如果只想使用索引:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(documents)): do_something(i)   <span class="comment"># 不简洁</span></span><br><span class="line"><span class="keyword">for</span> i, _ <span class="keyword">in</span> enumerate(documents): do_something(i) <span class="comment"># 简洁</span></span><br></pre></td></tr></table></figure><p>后面我们将会经常使用这个方法。</p><h3 id="压缩和参数解压-zip-and-Argument-Unpacking"><a href="#压缩和参数解压-zip-and-Argument-Unpacking" class="headerlink" title="压缩和参数解压 zip and Argument Unpacking"></a>压缩和参数解压 zip and Argument Unpacking</h3><h4 id="压缩-zip"><a href="#压缩-zip" class="headerlink" title="压缩 zip"></a>压缩 zip</h4><p>我们经常会对两个或更多的列表进行压缩处理。压缩实际上就是将多列表转化为对应元组的单列表形式:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">list1 = [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>]</span><br><span class="line">list2 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">zip(list1, list2)       <span class="comment"># 得到 [('a', 1), ('b', 2), ('c', 3)]</span></span><br></pre></td></tr></table></figure><h4 id="参数解压-Argument-Unpacking"><a href="#参数解压-Argument-Unpacking" class="headerlink" title="参数解压 Argument Unpacking"></a>参数解压 Argument Unpacking</h4><p>如果多个列表长度不一致，那么压缩过程会在最短列表尾部停止。你也可以使用一个奇怪的 “unzip” 解压缩技巧对列表进行解压:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pairs = [(<span class="string">'a'</span>, <span class="number">1</span>), (<span class="string">'b'</span>, <span class="number">2</span>), (<span class="string">'c'</span>, <span class="number">3</span>)]</span><br><span class="line">letters, numbers = zip(*pairs)</span><br></pre></td></tr></table></figure><p>其中星号用于执行参数解压缩，它使用 <em>pairs</em> 的元素作为 <em>zip</em> 的单个参数。下面的调用方式具有同等效果:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zip((<span class="string">'a'</span>, <span class="number">1</span>), (<span class="string">'b'</span>, <span class="number">2</span>), (<span class="string">'c'</span>, <span class="number">3</span>))  <span class="comment"># 返回 [('a','b','c'), ('1','2','3')]</span></span><br></pre></td></tr></table></figure><p>参数解压也可以和其他函数共同使用:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(a, b)</span>:</span> <span class="keyword">return</span> a + b</span><br><span class="line"></span><br><span class="line">add(<span class="number">1</span>, <span class="number">2</span>)           <span class="comment"># 返回 3</span></span><br><span class="line">add([<span class="number">1</span>, <span class="number">2</span>])         <span class="comment"># 报错</span></span><br><span class="line">add(*[<span class="number">1</span>, <span class="number">2</span>])        <span class="comment"># 返回 3</span></span><br></pre></td></tr></table></figure><p>虽然不太实用，不过是个不错的让代码变得简洁的技巧。</p><h3 id="不定长参数传递-args-and-kwargs"><a href="#不定长参数传递-args-and-kwargs" class="headerlink" title="不定长参数传递 args and kwargs"></a>不定长参数传递 args and kwargs</h3><p>假设我们要创建一个高阶函数，该函数输入一个旧函数，并返回一个新的函数，新函数是旧函数乘以 2 :</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">doubler</span><span class="params">(f)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">g</span><span class="params">(x)</span>:</span></span><br><span class="line">      <span class="keyword">return</span> <span class="number">2</span> * f(x)</span><br><span class="line">    <span class="keyword">return</span> g</span><br></pre></td></tr></table></figure><p>运行例子:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f1</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> x + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">g = doubler(f1)</span><br><span class="line"><span class="keyword">print</span> g(<span class="number">3</span>)        <span class="comment"># 8 (== ( 3 + 1) * 2)</span></span><br><span class="line"><span class="keyword">print</span> g(<span class="number">-1</span>)       <span class="comment"># 0 (== (-1 + 1) * 2)</span></span><br></pre></td></tr></table></figure><p>然而只要传递的参数大于一个，该方法就不太好用了:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f2</span><span class="params">(x, y)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> x + y</span><br><span class="line"></span><br><span class="line">g = doubler(f2)</span><br><span class="line"><span class="keyword">print</span> g(<span class="number">1</span>, <span class="number">2</span>) <span class="comment"># 报错 TypeError: g() takes exactly 1 argument (2 given)</span></span><br></pre></td></tr></table></figure><p>所以我们需要指定一个函数，使得它能够容纳任意数量的参数，然后利用参数解压缩实现传递多个参数，这看起来有那么一点神奇:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">magic</span><span class="params">(*args, **kwargs)</span>:</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">"unnamed args:"</span>, args</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"keyword args:"</span>, kwargs</span><br><span class="line">magic(<span class="number">1</span>, <span class="number">2</span>, key=<span class="string">"word"</span>, key2=<span class="string">"word2"</span>)</span><br><span class="line"><span class="comment"># 输出结果：</span></span><br><span class="line"><span class="comment"># unnamed args: (1, 2)</span></span><br><span class="line"><span class="comment"># keyword args: &#123;'key2': 'word2', 'key': 'word'&#125;</span></span><br></pre></td></tr></table></figure><p>当我们像这样定义一个函数时，<em>args</em> (arguments 的缩写)是一个包含未命名参数的元组，而 <em>kwargs</em> (keyword arguments 的缩写)是包含命名参数的字典。</p><p>它们也可以用在传递的参数为列表（或元组）或数组的情况：<br>n:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">other_way_magic</span><span class="params">(x, y, z)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> x + y + z</span><br><span class="line"></span><br><span class="line">x_y_list = [<span class="number">1</span>, <span class="number">2</span>]</span><br><span class="line">z_dict = &#123; <span class="string">"z"</span> : <span class="number">3</span> &#125;</span><br><span class="line"><span class="keyword">print</span> other_way_magic(*x_y_list, **z_dict)    <span class="comment"># 6</span></span><br></pre></td></tr></table></figure><p>你可以用它配合各种奇怪的方法使用，但我们只用它来解决高阶函数传递不定长参数的问题:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">doubler_correct</span><span class="params">(f)</span>:</span></span><br><span class="line">    <span class="string">"""不论 f 是什么都能有效运行"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">g</span><span class="params">(*args, **kwargs)</span>:</span></span><br><span class="line">        <span class="string">"""不论有多少参数，该函数都能正确将参数传递给 f"""</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">2</span> * f(*args, **kwargs)</span><br><span class="line">    <span class="keyword">return</span> g</span><br><span class="line"></span><br><span class="line">g = doubler_correct(f2)</span><br><span class="line"><span class="keyword">print</span> g(<span class="number">1</span>, <span class="number">2</span>) <span class="comment"># 6</span></span><br></pre></td></tr></table></figure><h3 id="欢迎来到数据科学的世界！"><a href="#欢迎来到数据科学的世界！" class="headerlink" title="欢迎来到数据科学的世界！"></a>欢迎来到数据科学的世界！</h3><p>叮！恭喜你又打开了新世界的大门！接下来就可以去愉快地玩耍啦~</p><p><strong>相关阅读:</strong><br><a href="http://lulalap.com/2018/11/07/python-tutorails-basic-level/">数据科学中常用的 Python 语法(基础)</a>  </p>]]></content>
      
      
      <categories>
          
          <category> 数据科学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>数据科学中 Python 的常用语法(基础)</title>
      <link href="/2018/11/07/python-tutorails-basic-level/"/>
      <url>/2018/11/07/python-tutorails-basic-level/</url>
      
        <content type="html"><![CDATA[<p>这两天在看这本 <em><a href="https://book.douban.com/subject/26364377/" target="_blank" rel="noopener">Data Science from Scrach</a></em> ( <a href="http://www.zhanjunlang.com/resources/tutorial/Data%20Science%20from%20Scratch%20First%20Principles%20with%20Python.pdf" target="_blank" rel="noopener">PDF地址</a> )，是本不错的通俗易懂的数据科学入门书籍。其中一个章节介绍了一下 Python 的基础语法和数据科学常用的进阶语法，觉得介绍得不错，很简洁明了，所以将其翻译一下放在这里以作备忘。<br><a href="http://lulalap.com/2018/11/07/python-tutorails-basic-level/">数据科学中常用的 Python 语法(基础)</a><br><a href="http://lulalap.com/2018/11/09/python-tutorails-advanced-level/">数据科学中常用的 Python 语法(进阶)</a><br><a id="more"></a></p><p>本章侧重于介绍在数据处理中非常有用的 Python 基础语法和功能（基于 Python 2.7 ）。</p><h3 id="空格格式"><a href="#空格格式" class="headerlink" title="空格格式"></a>空格格式</h3><p>许多语言使用括号来控制代码块，但 Python 用的是缩进：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]:</span><br><span class="line">    <span class="keyword">print</span> i           <span class="comment"># "for i"循环的第一行</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]:</span><br><span class="line">        <span class="keyword">print</span> j       <span class="comment"># "for j"循环的第一行</span></span><br><span class="line">        <span class="keyword">print</span> i + j   <span class="comment"># "for j"循环的最后一行</span></span><br><span class="line">    <span class="keyword">print</span> i           <span class="comment"># "for i"循环的最后一行</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">"done looping"</span></span><br></pre></td></tr></table></figure></p><p>这使得 Python 的代码非常易于阅读，但也意味着你要时刻注意格式。括号里的空格将会被忽略，这在写长表达式时很有用：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">long_winded_computation = (<span class="number">1</span> + <span class="number">2</span> + <span class="number">3</span> + <span class="number">4</span> + <span class="number">5</span> + <span class="number">6</span> + <span class="number">7</span> + <span class="number">8</span> + <span class="number">9</span> + <span class="number">10</span> + <span class="number">11</span> + <span class="number">12</span> + <span class="number">13</span> + <span class="number">14</span> + <span class="number">15</span> + <span class="number">16</span> + <span class="number">17</span> + <span class="number">18</span> + <span class="number">19</span> + <span class="number">20</span>)</span><br></pre></td></tr></table></figure><p>也使得代码变得好读：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">list_of_lists = [[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>], [<span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]]</span><br><span class="line">easier_to_read_list_of_lists = [ [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>],</span><br><span class="line">                                 [<span class="number">4</span> ,<span class="number">5</span> ,<span class="number">6</span> ],</span><br><span class="line">                                 [<span class="number">7</span> ,<span class="number">8</span> ,<span class="number">9</span> ] ]</span><br></pre></td></tr></table></figure><h3 id="多行语句"><a href="#多行语句" class="headerlink" title="多行语句"></a>多行语句</h3><p>可以用一个反斜杠来表示连接中断的两行（这种做法很少用）：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">two_plus_three = <span class="number">2</span> + \</span><br><span class="line">                 <span class="number">3</span></span><br></pre></td></tr></table></figure></p><h3 id="模块-Modules"><a href="#模块-Modules" class="headerlink" title="模块 Modules"></a>模块 Modules</h3><p>不论是 Python 自带的模块还是自己下载的第三方的模块，都需要需要通过手动导入才能使用。</p><p>1.简单地直接导入整个模块：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">my_regex = re.compile(<span class="string">"[0-9]+"</span>, re.I)</span><br></pre></td></tr></table></figure><p>这里导入的 <em>re</em> 模块是用于正则表达式的。导入模块后，可以直接将模块名字作为前缀（re.）来调用具体功能。</p><p>2.如果调入的模块名称已经在代码中被使用，可以将模块导入时映射到另一个名称中：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re <span class="keyword">as</span> regex</span><br><span class="line">my_regex = regex.compile(<span class="string">"[0-9]+"</span>, regex.I)</span><br></pre></td></tr></table></figure><p>3.如果你很坏，你就可以将整个模块都导入到当前命名空间，这可能在不经意间覆盖你已经定义好的变量：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">match = <span class="number">10</span></span><br><span class="line"><span class="keyword">from</span> re <span class="keyword">import</span> *  <span class="comment"># re 模块中有一个 match 函数</span></span><br><span class="line"><span class="keyword">print</span> match       <span class="comment"># 输出 match 函数</span></span><br></pre></td></tr></table></figure><p>因为你是个好人，所以我相信你不会这么做的。</p><h3 id="四则运算-Arithmetic"><a href="#四则运算-Arithmetic" class="headerlink" title="四则运算 Arithmetic"></a>四则运算 Arithmetic</h3><p>Python 2.7 默认使用整除，所以 $ 5 / 2 = 2 $.但很多时候我们并不想要整除，所以可以导入这个模块：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> division</span><br></pre></td></tr></table></figure><p>导入后，就有 $5 / 2 = 2.5$.<br>整除：$5 // 2 = 2$.</p><h3 id="函数-Functions"><a href="#函数-Functions" class="headerlink" title="函数 Functions"></a>函数 Functions</h3><h4 id="函数定义"><a href="#函数定义" class="headerlink" title="函数定义"></a>函数定义</h4><p>函数是能够接收 0 个或多个输入，并返回一定输出的一个规则。在 Python 中，我们用 <strong><em>def 函数名(参数)</em></strong> 定义一个函数:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">double</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="string">"""你可以在这里写一些关于函数功能的解释</span></span><br><span class="line"><span class="string">    比如，该函数将输入内容乘2"""</span></span><br><span class="line">    <span class="comment"># 这里可以写函数主体，记得缩进</span></span><br><span class="line">    <span class="keyword">return</span> x * <span class="number">2</span></span><br></pre></td></tr></table></figure><h4 id="函数使用"><a href="#函数使用" class="headerlink" title="函数使用"></a>函数使用</h4><p>在 Python 中，函数是最低等级的存在，这意味着我们可以将函数赋值给一个变量，也可以将它作为一个参数传递给其他变量：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">apply_to_one</span><span class="params">(f)</span>:</span></span><br><span class="line">    <span class="string">"""调用函数 f 并将 1 作为函数参数"""</span></span><br><span class="line">    <span class="keyword">return</span> f(<span class="number">1</span>)</span><br><span class="line">my_double = double          <span class="comment"># double 指向上一节定义的函数</span></span><br><span class="line">x = apply_to_one(my_double) <span class="comment"># x 等于 2</span></span><br></pre></td></tr></table></figure><h4 id="匿名函数"><a href="#匿名函数" class="headerlink" title="匿名函数"></a>匿名函数</h4><p>还可以通过 <em>lambda</em> 来创建匿名函数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">y = apply_to_one(<span class="keyword">lambda</span> x: x + <span class="number">4</span>)     <span class="comment"># 等于 5</span></span><br></pre></td></tr></table></figure><p>可以将 <em>lambda</em> 赋值给其他变量，但大多数人会建议你还是尽量使用 <em>def</em> ：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">another_double = <span class="keyword">lambda</span> x: <span class="number">2</span> * x      <span class="comment"># 不建议</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">another_double</span><span class="params">(x)</span>:</span> <span class="keyword">return</span> <span class="number">2</span> * x   <span class="comment"># 建议做法</span></span><br></pre></td></tr></table></figure><p>补充：</p><ul><li><em>lambda</em> 只是一个表达式，函数体比 <em>def</em> 简单很多。</li><li><em>lambda</em> 的主体是一个表达式，而不是一个代码块。仅仅能在 <em>lambda</em> 表达式中封装有限的逻辑进去。</li></ul><h4 id="函数参数传递"><a href="#函数参数传递" class="headerlink" title="函数参数传递"></a>函数参数传递</h4><p>函数参数可以定义默认值，函数表达式不加参数将使用默认值，加参数将传递指定值:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_print</span><span class="params">(message=<span class="string">"my default message"</span>)</span>:</span></span><br><span class="line">    <span class="keyword">print</span> message</span><br><span class="line">my_print(<span class="string">"hello"</span>)     <span class="comment"># 输出 "hello"</span></span><br><span class="line">my_print()            <span class="comment"># 输出 "my default message"</span></span><br></pre></td></tr></table></figure><p>有时候直接通过参数名称来指定参数也很好用:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">subtract</span><span class="params">(a=<span class="number">0</span>, b=<span class="number">0</span>)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> a - b</span><br><span class="line">subtract(<span class="number">10</span>, <span class="number">5</span>)   <span class="comment"># 返回 5</span></span><br><span class="line">subtract(<span class="number">0</span>, <span class="number">5</span>)    <span class="comment"># 返回 -5</span></span><br><span class="line">subtract(b=<span class="number">5</span>)     <span class="comment"># 与上一个相同，返回 -5</span></span><br></pre></td></tr></table></figure><h3 id="字符串-Strings"><a href="#字符串-Strings" class="headerlink" title="字符串 Strings"></a>字符串 Strings</h3><p>可以使用单引号或双引号来创建字符串（引号一定要配对）:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">single_quoted_string = <span class="string">'data science'</span></span><br><span class="line">double_quoted_string = <span class="string">"data science"</span></span><br></pre></td></tr></table></figure><p>用反斜杠来表示转义字符，如:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tab_string = <span class="string">"\t"</span>      <span class="comment"># 表示制表符 tab</span></span><br><span class="line">len(tab_string)        <span class="comment"># 等于 1</span></span><br></pre></td></tr></table></figure><p>当你想要使用反斜杠本身 (用于 Windows 目录或者正则表达式), 可以通过使用原始字符串 r” “ 定义:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">not_tab_string = <span class="string">r"\t"</span> <span class="comment"># 表示字符 '\' 和 't'</span></span><br><span class="line">len(not_tab_string)    <span class="comment"># 等于 2</span></span><br></pre></td></tr></table></figure><p>利用三个双引号创建多行字符串:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">multi_line_string = <span class="string">"""这是第一行</span></span><br><span class="line"><span class="string">这是第二行</span></span><br><span class="line"><span class="string">这是第三行"""</span></span><br></pre></td></tr></table></figure><h3 id="异常处理-Exception"><a href="#异常处理-Exception" class="headerlink" title="异常处理 Exception"></a>异常处理 Exception</h3><p>当程序出错，Python 会发生一个 <em>异常(exception)</em>，我们不对其进行处理的话，程序将会终止执行。捕获异常可以用 try 和 except 语句：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">print</span> <span class="number">0</span> / <span class="number">0</span></span><br><span class="line"><span class="keyword">except</span> ZeroDivisionError:</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"不能除以0"</span></span><br></pre></td></tr></table></figure><p>尽管在其他语言中，异常被看作是不好的现象，但在 Python 中，多处理异常将会使你的代码更加简洁干净。</p><h3 id="列表-Lists"><a href="#列表-Lists" class="headerlink" title="列表 Lists"></a>列表 Lists</h3><h4 id="创建列表"><a href="#创建列表" class="headerlink" title="创建列表"></a>创建列表</h4><p>列表是简单的有序集合，也是 Python 中最基础的数据结构 (类似其他语言中的数组，但列表具有一些额外的特性)。创建一个列表：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">integer_list = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">heterogeneous_list = [<span class="string">"string"</span>, <span class="number">0.1</span>, <span class="keyword">True</span>]</span><br><span class="line">list_of_lists = [ integer_list, heterogeneous_list, [] ]</span><br><span class="line">list_length = len(integer_list)   <span class="comment"># 等于 3</span></span><br><span class="line">list_sum = sum(integer_list)      <span class="comment"># 等于 6</span></span><br></pre></td></tr></table></figure><h4 id="访问列表中的值"><a href="#访问列表中的值" class="headerlink" title="访问列表中的值"></a>访问列表中的值</h4><p>你可以通过方括号索引列表中的值:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">x = range(<span class="number">10</span>)       <span class="comment"># 列表获得列表 x = [0, 1, ..., 9]</span></span><br><span class="line">zero = x[<span class="number">0</span>]         <span class="comment"># 等于 0, 列表序号从 0 开始</span></span><br><span class="line">one = x[<span class="number">1</span>]          <span class="comment"># 等于 1</span></span><br><span class="line">nine = x[<span class="number">-1</span>]        <span class="comment"># 等于 9, 列表中最后一个元素</span></span><br><span class="line">eight = x[<span class="number">-2</span>]       <span class="comment"># 等于 8, 列表中倒数第二个元素</span></span><br><span class="line">x[<span class="number">0</span>] = <span class="number">-1</span>           <span class="comment"># 当前列表 x = [-1, 1, 2, 3, ..., 9]</span></span><br></pre></td></tr></table></figure><h4 id="截取列表"><a href="#截取列表" class="headerlink" title="截取列表"></a>截取列表</h4><p>可以用方括号截取列表:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">first_three = x[:<span class="number">3</span>]                  <span class="comment"># [-1, 1, 2]</span></span><br><span class="line">three_to_end = x[<span class="number">3</span>:]                 <span class="comment"># [3, 4, ..., 9]</span></span><br><span class="line">one_to_four = x[<span class="number">1</span>:<span class="number">5</span>]                 <span class="comment"># [1, 2, 3, 4]</span></span><br><span class="line">last_three = x[<span class="number">-3</span>:]                  <span class="comment"># [7, 8, 9]</span></span><br><span class="line">without_first_and_last = x[<span class="number">1</span>:<span class="number">-1</span>]     <span class="comment"># [1, 2, ..., 8]</span></span><br><span class="line">copy_of_x = x[:]                     <span class="comment"># [-1, 1, 2, ..., 9]</span></span><br></pre></td></tr></table></figure><p>可以用 <em>in</em> 来查看某元素是否在列表中:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> <span class="keyword">in</span> [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]        <span class="comment"># True</span></span><br><span class="line"><span class="number">0</span> <span class="keyword">in</span> [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]        <span class="comment"># False</span></span><br></pre></td></tr></table></figure><p>这种元素查找方式效率很低，只有在列表很小或者你不在意查找时间的情况下再去使用。</p><h4 id="拼接列表"><a href="#拼接列表" class="headerlink" title="拼接列表"></a>拼接列表</h4><p>Python 中很容易就能拼接两个列表:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">x.extend([<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>])   <span class="comment"># 当前 x = [1,2,3,4,5,6]</span></span><br></pre></td></tr></table></figure><p>如果你不想修改原列表 x ，你可以使用“加”运算符创建一个新的列表:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">y = x + [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]     <span class="comment"># 当前 y = [1, 2, 3, 4, 5, 6]; x 没有变化</span></span><br></pre></td></tr></table></figure><p>经常用这样的方式一次在列表中添加一个元素:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">x = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">x.append(<span class="number">0</span>)           <span class="comment"># 当前 x = [1, 2, 3, 0]</span></span><br><span class="line">y = x[<span class="number">-1</span>]             <span class="comment"># 等于 0</span></span><br><span class="line">z = len(x)            <span class="comment"># 等于 4</span></span><br></pre></td></tr></table></figure><h4 id="列表分解"><a href="#列表分解" class="headerlink" title="列表分解"></a>列表分解</h4><p>如果你知道列表中有多少个元素，那么很容易就能分解这个列表:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x, y = [<span class="number">1</span>, <span class="number">2</span>]         <span class="comment"># 当前 x = 1, y = 2</span></span><br></pre></td></tr></table></figure><p>等式两边元素数目不一致的话，你将会得到一个 <em>值错误</em>，所以我们更经常用下划线来存放列表剩下的部分:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">_, y = [<span class="number">1</span>, <span class="number">2</span>]         <span class="comment"># 当前 y == 2, 不管第一个元素</span></span><br></pre></td></tr></table></figure><h3 id="元组-Tuples"><a href="#元组-Tuples" class="headerlink" title="元组 Tuples"></a>元组 Tuples</h3><p>列表和元组很像，和列表唯一的区别就是，元组中的元素不能被修改。</p><h4 id="元组创建"><a href="#元组创建" class="headerlink" title="元组创建"></a>元组创建</h4><p>可以使用圆括号或者不加任何括号来创建元组:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">my_tuple = (<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">other_tuple = <span class="number">3</span>, <span class="number">4</span></span><br><span class="line">my_list[<span class="number">1</span>] = <span class="number">3</span>        <span class="comment"># 当前 my_list 为 [1, 3]</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    my_tuple[<span class="number">1</span>] = <span class="number">3</span></span><br><span class="line"><span class="keyword">except</span> TypeError:</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"无法修改元组"</span></span><br></pre></td></tr></table></figure><p>利用元组能够很方便地从函数中获取多个返回值:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sum_and_product</span><span class="params">(x, y)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> (x + y),(x * y)</span><br><span class="line">sp = sum_and_product(<span class="number">2</span>, <span class="number">3</span>)    <span class="comment"># 等于 (5, 6)</span></span><br><span class="line">s, p = sum_and_product(<span class="number">5</span>, <span class="number">10</span>) <span class="comment"># s = 15, p = 50</span></span><br></pre></td></tr></table></figure><p>元组（和列表）都支持同时赋值多个元素:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x, y = <span class="number">1</span>, <span class="number">2</span>       <span class="comment"># 当前 x = 1, y = 2</span></span><br><span class="line">x, y = y, x       <span class="comment"># Python 中交换两个变量的值; 当前 x = 2, y = 1</span></span><br></pre></td></tr></table></figure><h3 id="字典-Dictionaries"><a href="#字典-Dictionaries" class="headerlink" title="字典 Dictionaries"></a>字典 Dictionaries</h3><h4 id="字典创建"><a href="#字典创建" class="headerlink" title="字典创建"></a>字典创建</h4><p>Python 中的另一个基础数据结构是字典，它能让你通过关键字（key）快速获得对应的值（value）:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">empty_dict = &#123;&#125;                       <span class="comment"># 非常 Python 化的空字典定义</span></span><br><span class="line">empty_dict2 = dict()                  <span class="comment"># 没那么 Python 化的空字典定义</span></span><br><span class="line">grades = &#123; <span class="string">"Joel"</span> : <span class="number">80</span>, <span class="string">"Tim"</span> : <span class="number">95</span> &#125;  <span class="comment"># 字典存储</span></span><br></pre></td></tr></table></figure><h4 id="字典元素查找"><a href="#字典元素查找" class="headerlink" title="字典元素查找"></a>字典元素查找</h4><p>你可以用方括号加关键字来查找对应的值:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">joels_grade = grades[<span class="string">"Joel"</span>]          <span class="comment"># 等于 80</span></span><br></pre></td></tr></table></figure><p>如果要查找的关键字不在字典中，将返回一个 <em>键错误(KeyError)</em> :</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    kates_grade = grades[<span class="string">"Kate"</span>]</span><br><span class="line"><span class="keyword">except</span> KeyError:</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"no grade for Kate!"</span></span><br></pre></td></tr></table></figure><p>可以通过 <em>in</em> 来查看关键字是否在字典中:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">joel_has_grade = <span class="string">"Joel"</span> <span class="keyword">in</span> grades     <span class="comment"># True</span></span><br><span class="line">kate_has_grade = <span class="string">"Kate"</span> <span class="keyword">in</span> grades     <span class="comment"># False</span></span><br></pre></td></tr></table></figure><p>字典有一个可以返回默认值的方法，当要查找的关键字不在字典中将会返回设定的默认值（而不是发生异常）:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">joels_grade = grades.get(<span class="string">"Joel"</span>, <span class="number">0</span>)   <span class="comment"># 等于 80</span></span><br><span class="line">kates_grade = grades.get(<span class="string">"Kate"</span>, <span class="number">0</span>)   <span class="comment"># 等于 0</span></span><br><span class="line">no_ones_grade = grades.get(<span class="string">"No One"</span>)  <span class="comment"># 返回默认值 None</span></span><br></pre></td></tr></table></figure><h4 id="字典修改"><a href="#字典修改" class="headerlink" title="字典修改"></a>字典修改</h4><p>可以用方括号来创建、修改字典中的键值对:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">grades[<span class="string">"Tim"</span>] = <span class="number">99</span>                    <span class="comment"># 替换旧的值</span></span><br><span class="line">grades[<span class="string">"Kate"</span>] = <span class="number">100</span>                  <span class="comment"># 增加一个键值对</span></span><br><span class="line">num_students = len(grades)            <span class="comment"># 等于 3</span></span><br></pre></td></tr></table></figure><p>我们将会经常像这样使用字典来表达数据的结构:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">tweet = &#123;</span><br><span class="line">    <span class="string">"user"</span> : <span class="string">"joelgrus"</span>,</span><br><span class="line">    <span class="string">"text"</span> : <span class="string">"Data Science is Awesome"</span>,</span><br><span class="line">    <span class="string">"retweet_count"</span> : <span class="number">100</span>,</span><br><span class="line">    <span class="string">"hashtags"</span> : [<span class="string">"#data"</span>, <span class="string">"#science"</span>, <span class="string">"#datascience"</span>, <span class="string">"#awesome"</span>, <span class="string">"#yolo"</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>除了查找特定关键字，我们还可以像这样操作所有关键字:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">tweet_keys = tweet.keys()             <span class="comment"># 得到一个关键字（键）列表</span></span><br><span class="line">tweet_values = tweet.values()         <span class="comment"># 得到值列表</span></span><br><span class="line">tweet_items = tweet.items()           <span class="comment"># 得到 (键, 值) 元组</span></span><br><span class="line"><span class="string">"user"</span> <span class="keyword">in</span> tweet_keys                  <span class="comment"># 返回 True, 用的是列表效率较低中的 in 查找</span></span><br><span class="line"><span class="string">"user"</span> <span class="keyword">in</span> tweet                       <span class="comment"># 更 Python 的用法, 用的是高效的字典中的 in 查找</span></span><br><span class="line"><span class="string">"joelgrus"</span> <span class="keyword">in</span> tweet_values            <span class="comment"># True</span></span><br></pre></td></tr></table></figure><p>字典中的键是唯一的，而且列表不能用作字典的关键字（键）。如果你需要一个多部分的关键字，你可以使用元组，或者通过某种途径将关键字转换成字符串。</p><h4 id="内置字典"><a href="#内置字典" class="headerlink" title="内置字典"></a>内置字典</h4><p>如果你正试图统计一个文档中每个词出现的频率，一个显然的做法是创建一个字典，词作为关键字，频率作为对应的值。然后遍历文档，遇到出现过的词就让字典对应键值自增 1 ，遇到未出现过的词就在字典中添加一个键值对:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">word_counts = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> word <span class="keyword">in</span> document:</span><br><span class="line">    <span class="keyword">if</span> word <span class="keyword">in</span> word_counts:</span><br><span class="line">        word_counts[word] += <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        word_counts[word] = <span class="number">1</span></span><br></pre></td></tr></table></figure><p>当然，你也可以像这样用“先斩后奏”的方式来提前处理一个缺失的键:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">word_counts = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> word <span class="keyword">in</span> document:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        word_counts[word] += <span class="number">1</span></span><br><span class="line">    <span class="keyword">except</span> KeyError:</span><br><span class="line">        word_counts[word] = <span class="number">1</span></span><br></pre></td></tr></table></figure><p>第三个方法是使用 <em>get</em> ，这个方法对于缺失键的处理表现优异:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">word_counts = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> word <span class="keyword">in</span> document:</span><br><span class="line">    previous_count = word_counts.get(word, <span class="number">0</span>)</span><br><span class="line">    word_counts[word] = previous_count + <span class="number">1</span></span><br></pre></td></tr></table></figure><p>内置字典就跟普通字典一样，唯一的区别就是，当你试图在字典中查找一个不存在的键时，内置字典将利用你提供的关键字自动创建一个键值对。为了使用内置字典，你需要导入 <em>collections</em> 函数库:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> defaultdict</span><br><span class="line">word_counts = defaultdict(int)        <span class="comment"># int() 生成 0</span></span><br><span class="line"><span class="keyword">for</span> word <span class="keyword">in</span> document:</span><br><span class="line">    word_counts[word] += <span class="number">1</span></span><br></pre></td></tr></table></figure><p>在列表、普通字典甚至自定义的函数中，默认字典也都很好用:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">dd_list = defaultdict(list)           <span class="comment"># list() 生成一个空列表</span></span><br><span class="line">dd_list[<span class="number">2</span>].append(<span class="number">1</span>)                  <span class="comment"># 当前 dd_list 为 &#123;2: [1]&#125;</span></span><br><span class="line">dd_dict = defaultdict(dict)           <span class="comment"># dict() 生成一个空字典</span></span><br><span class="line">dd_dict[<span class="string">"Joel"</span>][<span class="string">"City"</span>] = <span class="string">"Seattle"</span>   <span class="comment"># 当前 dd_dict 内容为 &#123; "Joel" : &#123; "City" : Seattle"&#125;&#125;</span></span><br><span class="line">dd_pair = defaultdict(<span class="keyword">lambda</span>: [<span class="number">0</span>, <span class="number">0</span>]) <span class="comment"># 创建了一个关键字对于的值为列表的字典</span></span><br><span class="line">dd_pair[<span class="number">2</span>][<span class="number">1</span>] = <span class="number">1</span>                     <span class="comment"># 当前 dd_pair 内容为 &#123;2: [0,1]&#125;</span></span><br></pre></td></tr></table></figure><p>这种方法很有用，以后我们要获取字典中的某些键值结果时，就无需再检查键是否存在了。</p><h3 id="计数器-Counter"><a href="#计数器-Counter" class="headerlink" title="计数器 Counter"></a>计数器 Counter</h3><p>计数器可以直接将一组值转换成类似字典的对象，关键字为这组中的某个元素，对应的值为该元素出现的次数。这在创建直方图的时候会经常用到:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</span><br><span class="line">c = Counter([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">0</span>]) <span class="comment"># c (差不多)为 &#123; 0 : 2, 1 : 1, 2 : 1 &#125;</span></span><br></pre></td></tr></table></figure><p>这样我们就有了一个很方便的统计词频的方法:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">word_counts = Counter(document)</span><br></pre></td></tr></table></figure><p>计数器还有一个很常用的方法  _most_common_，可以直接得到最高频的几个词和对应的频率:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 输出前 10 个最高频的词以及他们的计数值</span></span><br><span class="line"><span class="keyword">for</span> word, count <span class="keyword">in</span> word_counts.most_common(<span class="number">10</span>):</span><br><span class="line">    <span class="keyword">print</span> word, count</span><br></pre></td></tr></table></figure><h3 id="集合-Sets"><a href="#集合-Sets" class="headerlink" title="集合 Sets"></a>集合 Sets</h3><p>Python 中另一种数据结构是集合，集合是一组不同元素的收集。<br>可以这样创建一个集合并向其中添加元素:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">s = set()</span><br><span class="line">s.add(<span class="number">1</span>)          <span class="comment"># s 为 &#123; 1 &#125;</span></span><br><span class="line">s.add(<span class="number">2</span>)          <span class="comment"># s 为 &#123; 1, 2 &#125;</span></span><br><span class="line">s.add(<span class="number">2</span>)          <span class="comment"># s 为 &#123; 1, 2 &#125;</span></span><br><span class="line">x = len(s)        <span class="comment"># 等于 2</span></span><br><span class="line">y = <span class="number">2</span> <span class="keyword">in</span> s        <span class="comment"># 等于 True</span></span><br><span class="line">z = <span class="number">3</span> <span class="keyword">in</span> s        <span class="comment"># 等于 False</span></span><br></pre></td></tr></table></figure><p>使用集合的两大理由：</p><p>第一，集合中的 <em>in</em> 操作非常高效。当一个数据集中的元素数量非常庞大的时候，以集合的形式来查找元素显然比列表更加合适:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">stopwords_list = [<span class="string">"a"</span>,<span class="string">"an"</span>,<span class="string">"at"</span>] + hundreds_of_other_words + [<span class="string">"yet"</span>, <span class="string">"you"</span>]</span><br><span class="line"><span class="string">"zip"</span> <span class="keyword">in</span> stopwords_list               <span class="comment"># 失败，需要去检查每个元素</span></span><br><span class="line">stopwords_set = set(stopwords_list)</span><br><span class="line"><span class="string">"zip"</span> <span class="keyword">in</span> stopwords_set                <span class="comment"># 查找成功，而且速度很快</span></span><br></pre></td></tr></table></figure><p>第二，用集合来获取一组数据中不同的元素非常方便:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">item_list = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">num_items = len(item_list)            <span class="comment"># 6</span></span><br><span class="line">item_set = set(item_list)             <span class="comment"># &#123;1, 2, 3&#125;</span></span><br><span class="line">num_distinct_items = len(item_set)    <span class="comment"># 3</span></span><br><span class="line">distinct_item_list = list(item_set)   <span class="comment"># [1, 2, 3]</span></span><br></pre></td></tr></table></figure><p>不过实际上，集合的使用频率还是没有字典和列表高。</p><h3 id="条件语句"><a href="#条件语句" class="headerlink" title="条件语句"></a>条件语句</h3><p>在绝大多数编程语言中，你都可以像这样用 <em>if</em> 来表示条件分支:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="number">1</span> &gt; <span class="number">2</span>:</span><br><span class="line">    message = <span class="string">"if only 1 were greater than two…"</span></span><br><span class="line"><span class="keyword">elif</span> <span class="number">1</span> &gt; <span class="number">3</span>:</span><br><span class="line">    message = <span class="string">"elif stands for 'else if'"</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    message = <span class="string">"when all else fails use else (if you want to)"</span></span><br></pre></td></tr></table></figure><p>你也可以像这样将条件分支语句写在一行中，但这很少用:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">parity = <span class="string">"even"</span> <span class="keyword">if</span> x % <span class="number">2</span> == <span class="number">0</span> <span class="keyword">else</span> <span class="string">"odd"</span></span><br></pre></td></tr></table></figure><h3 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h3><h4 id="while-循环"><a href="#while-循环" class="headerlink" title="while 循环"></a><em>while</em> 循环</h4><p>Python 中的 <em>while</em> 循环:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">x = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> x &lt; <span class="number">10</span>:</span><br><span class="line">    <span class="keyword">print</span> x, <span class="string">"is less than 10"</span></span><br><span class="line">    x += <span class="number">1</span></span><br></pre></td></tr></table></figure><h4 id="for-循环"><a href="#for-循环" class="headerlink" title="for 循环"></a><em>for</em> 循环</h4><p>更常用的是使用 <em>for-in</em> 循环:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">    <span class="keyword">print</span> x, <span class="string">"is less than 10"</span></span><br></pre></td></tr></table></figure><p>更复杂的逻辑表达式可以使用 <em>continue</em> 和 <em>break</em> 语句:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">    <span class="keyword">if</span> x == <span class="number">3</span>:</span><br><span class="line">        <span class="keyword">continue</span>          <span class="comment"># 直接进入下一轮循环</span></span><br><span class="line">    <span class="keyword">if</span> x == <span class="number">5</span>:</span><br><span class="line">        <span class="keyword">break</span>             <span class="comment"># 完全退出循环</span></span><br><span class="line">    <span class="keyword">print</span> x</span><br></pre></td></tr></table></figure><p>结果将会输出 0， 1， 2，和 4。</p><h3 id="真值-Truthiness"><a href="#真值-Truthiness" class="headerlink" title="真值 Truthiness"></a>真值 Truthiness</h3><p>Python 中的布尔变量 Booleans 用法和其他语言差不多，唯一的区别是首字母一定要大写:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">one_is_less_than_two = <span class="number">1</span> &lt; <span class="number">2</span>      <span class="comment"># 为 True</span></span><br><span class="line">true_equals_false = <span class="keyword">True</span> == <span class="keyword">False</span> <span class="comment"># 为 False</span></span><br></pre></td></tr></table></figure><p>Python 使用 <em>None</em> 来表示一个值不存在，类似其他语言中的 <em>null</em> :</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">x = <span class="keyword">None</span></span><br><span class="line"><span class="keyword">print</span> x == <span class="keyword">None</span>        <span class="comment"># 输出 True, 不够优美</span></span><br><span class="line"><span class="keyword">print</span> x <span class="keyword">is</span> <span class="keyword">None</span>        <span class="comment"># 输出 True, 更优美</span></span><br></pre></td></tr></table></figure><p>Python 允许你用其他值代替布尔值，以下皆等价于“False”:</p><ul><li>False</li><li>None</li><li>[] (一个空列表)</li><li>{} (一个空字典)</li><li>“”</li><li>set()</li><li>0</li><li>0.0</li></ul><p>类似的也有很多“True”的等价值，这让你非常方便地判断空列表、空字符串以及空字典等等。</p><p>当然，如果你不能预见结果的话，可能会在使用过程中出错:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">s = some_function_that_returns_a_string()</span><br><span class="line"><span class="keyword">if</span> s:</span><br><span class="line">    first_char = s[<span class="number">0</span>]</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    first_char = <span class="string">""</span></span><br></pre></td></tr></table></figure><p>一个更简单的做法，该做法效果等同于上面的做法:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">first_char = s <span class="keyword">and</span> s[<span class="number">0</span>]</span><br></pre></td></tr></table></figure><p>如果第一个值为真，将返回第二个值，否则返回第一个值。</p><p>类似地，如果 x 可能是一个数字也可能为空，那么这样可以得到一个肯定为数字的 x :</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">safe_x = x <span class="keyword">or</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><p>Python 中还有一个 <em>all</em> 函数，在每个元素都为“True”时函数返回“True”。<em>any</em> 函数，只要有一个元素为“True”就返回“True”。比如对于一个每一个元素都为“真”的列表，<em>all</em> 函数将返回“True”，否则将返回“False”:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">all([<span class="keyword">True</span>, <span class="number">1</span>, &#123; <span class="number">3</span> &#125;])       <span class="comment"># True</span></span><br><span class="line">all([<span class="keyword">True</span>, <span class="number">1</span>, &#123;&#125;])          <span class="comment"># False, &#123;&#125; 等价于“False”</span></span><br><span class="line">any([<span class="keyword">True</span>, <span class="number">1</span>, &#123;&#125;])          <span class="comment"># True</span></span><br><span class="line">all([])                     <span class="comment"># True, 不存在一个等价于“False”的元素</span></span><br><span class="line">any([])                     <span class="comment"># False, 不存在一个等价于“True”的元素</span></span><br></pre></td></tr></table></figure><p><strong>进阶阅读:</strong><br><a href="http://lulalap.com/2018/11/09/python-tutorails-advanced-level/">数据科学中常用的 Python 语法(进阶)</a></p>]]></content>
      
      
      <categories>
          
          <category> 数据科学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1002 写出这个数(C++)</title>
      <link href="/2018/11/07/PAT-B1002-cpp/"/>
      <url>/2018/11/07/PAT-B1002-cpp/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><a id="more"></a><p>读入一个正整数 $n$，计算其各位数字之和，用汉语拼音写出和的每一位数字。</p><h4 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h4><p>每个测试输入包含 1 个测试用例，即给出自然数 $n$ 的值。这里保证 $n$ 小于 $10^{100}$ 。</p><h4 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h4><p>在一行内输出 $n$ 的各位数字之和的每一位，拼音数字间有 1 空格，但一行中最后一个拼音数字后没有空格。</p><h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1234567890987654321123456789</span><br></pre></td></tr></table></figure><h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yi san wu</span><br></pre></td></tr></table></figure><h2 id="易错点："><a href="#易错点：" class="headerlink" title="易错点："></a>易错点：</h2><ul><li>注意输出末尾没有空格</li><li>倒序输出</li></ul><h2 id="也许陌生的知识点"><a href="#也许陌生的知识点" class="headerlink" title="也许陌生的知识点"></a>也许陌生的知识点</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt; //C++的字符串头文件，和 C 中的 string.h 功能不一样</span></span></span><br><span class="line">getline(<span class="built_in">cin</span>, &lt;val&gt; ) <span class="comment">// 字符串输入，能输入一整行包含空格的字符串</span></span><br></pre></td></tr></table></figure><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="built_in">string</span> str[] = &#123;<span class="string">"ling"</span>, <span class="string">"yi"</span>, <span class="string">"er"</span>, <span class="string">"san"</span>, <span class="string">"si"</span>, <span class="string">"wu"</span>, <span class="string">"liu"</span>, <span class="string">"qi"</span>, <span class="string">"ba"</span>, <span class="string">"jiu"</span>&#125;;</span><br><span class="line">  <span class="keyword">int</span> n = <span class="number">0</span>, num[<span class="number">101</span>] = &#123;<span class="number">0</span>&#125;, i = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">string</span> s;</span><br><span class="line">  getline(<span class="built_in">cin</span>, s); <span class="comment">// 输入字符串类型变量</span></span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s.length(); i++)&#123;</span><br><span class="line">    n += (<span class="keyword">int</span>)(s[i] - <span class="string">'0'</span>); <span class="comment">//字符转换为数字</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">while</span>(n &gt; <span class="number">0</span>)&#123;</span><br><span class="line">    num[i++] = n % <span class="number">10</span>;</span><br><span class="line">    n /= <span class="number">10</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> j = i - <span class="number">1</span>; j &gt;= <span class="number">0</span>; j--)&#123; <span class="comment">//倒序输出</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; str[num[j]];  <span class="comment">// 序号存放在num数组中</span></span><br><span class="line">    <span class="keyword">if</span>(j != <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">" "</span>); <span class="comment">// 注意末尾没有空格</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1001 害死人不偿命的(3n+1)猜想(Python)</title>
      <link href="/2018/11/07/PAT-B1001-py/"/>
      <url>/2018/11/07/PAT-B1001-py/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>卡拉兹(Callatz)猜想：<br><a id="more"></a><br>对任何一个正整数 $n$，如果它是偶数，那么把它砍掉一半；如果它是奇数，那么把 $(3n+1)$ 砍掉一半。这样一直反复砍下去，最后一定在某一步得到 $n=1$。卡拉兹在 1950 年的世界数学家大会上公布了这个猜想，传说当时耶鲁大学师生齐动员，拼命想证明这个貌似很傻很天真的命题，结果闹得学生们无心学业，一心只证 $(3n+1)$，以至于有人说这是一个阴谋，卡拉兹是在蓄意延缓美国数学界教学与科研的进展……<br>我们今天的题目不是证明卡拉兹猜想，而是对给定的任一不超过 $1000$ 的正整数 $n$，简单地数一下，需要多少步（砍几下）才能得到 $n=1$？</p><h4 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h4><p>每个测试输入包含 1 个测试用例，即给出正整数 $n$ 的值。</p><h4 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h4><p>输出从 $n$ 计算到 1 需要的步数。</p><h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5</span><br></pre></td></tr></table></figure><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">n = int(input()) <span class="comment"># 默认输入为字符串，这里将类型转换成整型</span></span><br><span class="line">cnt = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> n &gt; <span class="number">1</span>:</span><br><span class="line">    <span class="keyword">if</span>(n % <span class="number">2</span> == <span class="number">0</span>):</span><br><span class="line">        n /= <span class="number">2</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        n = (<span class="number">3</span> * n + <span class="number">1</span>) / <span class="number">2</span></span><br><span class="line">    cnt = cnt + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">print(cnt)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT甲级目录（更新中）</title>
      <link href="/2018/11/07/index-of-PAT-Advanced-Level/"/>
      <url>/2018/11/07/index-of-PAT-Advanced-Level/</url>
      
        <content type="html"><![CDATA[<p>力求用最简洁明了的方式给出题解，并附上也许对新手陌生的知识点以及题目易错点等，如果能帮到你的话那就太棒啦~</p><a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><p>有不懂的语法记得多去 <a href="http://www.cplusplus.com/reference/" target="_blank" rel="noopener">www.cplusplus.com</a> 翻翻文档，这里啥都有哦。</p><a id="more"></a><table><thead><tr><th style="text-align:center">No</th><th style="text-align:left">Title</th><th style="text-align:center">C/C++</th><th style="text-align:center">Python</th><th style="text-align:left">备注</th></tr></thead><tbody><tr><td style="text-align:center">1001</td><td style="text-align:left">A+B Format (20’)</td><td style="text-align:center"><a href="http://lulalap.com/2018/11/07/PAT-B1001-cpp/">查看题解</a></td><td style="text-align:center"><a href=""></a></td><td style="text-align:left">字符串处理</td></tr><tr><td style="text-align:center">1002</td><td style="text-align:left">A+B for Polynomials (25’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"><a href=""></a></td><td style="text-align:left">模拟</td></tr><tr><td style="text-align:center">1003</td><td style="text-align:left">Emergency (25’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"><a href=""></a></td><td style="text-align:left">Dijkstra算法</td></tr><tr><td style="text-align:center">1004</td><td style="text-align:left">Counting Leaves (30’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"><a href=""></a></td><td style="text-align:left">BFS，DFS，树的层序遍历</td></tr><tr><td style="text-align:center">1005</td><td style="text-align:left">Spell It Right (20’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"><a href=""></a></td><td style="text-align:left">字符串处理</td></tr><tr><td style="text-align:center">1006</td><td style="text-align:left">Sign In and Sign Out (25’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"><a href=""></a></td><td style="text-align:left">查找元素</td></tr><tr><td style="text-align:center">1007</td><td style="text-align:left">Maximum Subsequence Sum (25’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"><a href=""></a></td><td style="text-align:left">动态规划，最大连续子序列和</td></tr><tr><td style="text-align:center">1008</td><td style="text-align:left">Elevator (20’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"><a href=""></a></td><td style="text-align:left">数学问题</td></tr><tr><td style="text-align:center">1009</td><td style="text-align:left">Product of Polynomials (25’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"><a href=""></a></td><td style="text-align:left">模拟</td></tr><tr><td style="text-align:center">1010</td><td style="text-align:left">Radix (25’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">二分法</td></tr><tr><td style="text-align:center">1011</td><td style="text-align:left">World Cup Betting (20’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">查找元素</td></tr><tr><td style="text-align:center">1012</td><td style="text-align:left">The Best Rank (25’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">排序</td></tr><tr><td style="text-align:center">1013</td><td style="text-align:left">Battle Over Cities (25’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">图的遍历，统计连通分量的个数，DFS</td></tr><tr><td style="text-align:center">1014</td><td style="text-align:left">Waiting in Line (30’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">queue的应用</td></tr><tr><td style="text-align:center">1015</td><td style="text-align:left">Reversible Primes (20’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">素数</td></tr><tr><td style="text-align:center">1016</td><td style="text-align:left">Phone Bills (25’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">排序</td></tr><tr><td style="text-align:center">1017</td><td style="text-align:left">Queueing at Bank (25’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">模拟</td></tr><tr><td style="text-align:center">1018</td><td style="text-align:left">Public Bike Management (30’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">Dijkstra算法 + DFS</td></tr><tr><td style="text-align:center">1019</td><td style="text-align:left">General Palindromic Number (20’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">回文数</td></tr><tr><td style="text-align:center">1020</td><td style="text-align:left">Tree Traversals (25’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">二叉树的遍历，后序中序转层序</td></tr><tr><td style="text-align:center">1021</td><td style="text-align:left">Deepest Root (25’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">图的遍历，DFS，计算连通分量的个数</td></tr><tr><td style="text-align:center">1022</td><td style="text-align:left">Digital Library (30’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">map映射，STL的使用</td></tr><tr><td style="text-align:center">1023</td><td style="text-align:left">Have Fun with Numbers (20’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">大整数运算</td></tr><tr><td style="text-align:center">1024</td><td style="text-align:left">Palindromic Number (25’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">大整数相加</td></tr><tr><td style="text-align:center">1025</td><td style="text-align:left">PAT Ranking (25’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">排序</td></tr><tr><td style="text-align:center">1026</td><td style="text-align:left">Table Tennis (30’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">模拟，排序</td></tr><tr><td style="text-align:center">1027</td><td style="text-align:left">Colors in Mars (20’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">进制转换</td></tr><tr><td style="text-align:center">1028</td><td style="text-align:left">List Sorting (25’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">排序</td></tr><tr><td style="text-align:center">1029</td><td style="text-align:left">Median (25’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">two pointers</td></tr><tr><td style="text-align:center">1030</td><td style="text-align:left">Travel Plan (30’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">Dijkstra算法 + DFS，最短路径，边权</td></tr><tr><td style="text-align:center">1031</td><td style="text-align:left">Hello World for U (20’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">图形打印</td></tr><tr><td style="text-align:center">1032</td><td style="text-align:left">Sharing (25’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">链表</td></tr><tr><td style="text-align:center">1033</td><td style="text-align:left">To Fill or Not to Fill (25’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">贪心算法</td></tr><tr><td style="text-align:center">1034</td><td style="text-align:left">Head of a Gang (30’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">图的遍历，DFS</td></tr><tr><td style="text-align:center">1035</td><td style="text-align:left">Password (20’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">字符串处理</td></tr><tr><td style="text-align:center">1036</td><td style="text-align:left">Boys vs Girls (25’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">查找元素</td></tr><tr><td style="text-align:center">1037</td><td style="text-align:left">Magic Coupon (25’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">贪心算法</td></tr><tr><td style="text-align:center">1038</td><td style="text-align:left">Recover the Smallest Number (30’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">贪心算法</td></tr><tr><td style="text-align:center">1039</td><td style="text-align:left">Course List for Student (25’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">不定长数组vector，STL的使用</td></tr><tr><td style="text-align:center">1040</td><td style="text-align:left">Longest Symmetric String (25’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">动态规划</td></tr><tr><td style="text-align:center">1041</td><td style="text-align:left">Be Unique (20’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">Hash散列</td></tr><tr><td style="text-align:center">1042</td><td style="text-align:left">Shuffling Machine (20’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">模拟</td></tr><tr><td style="text-align:center">1043</td><td style="text-align:left">Is It a Binary Search Tree (25’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">二叉查找树BST</td></tr><tr><td style="text-align:center">1044</td><td style="text-align:left">Shopping in Mars (25’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">二分查找</td></tr><tr><td style="text-align:center">1045</td><td style="text-align:left">Favorite Color Stripe (30’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">动态规划，LIS / LCS</td></tr><tr><td style="text-align:center">1046</td><td style="text-align:left">Shortest Distance (20’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">模拟</td></tr><tr><td style="text-align:center">1047</td><td style="text-align:left">Student List for Course (25’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">不定长数组vector，STL的使用</td></tr><tr><td style="text-align:center">1048</td><td style="text-align:left">Find Coins (25’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">Hash散列</td></tr><tr><td style="text-align:center">1049</td><td style="text-align:left">Counting Ones (30’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">数学问题</td></tr><tr><td style="text-align:center">1050</td><td style="text-align:left">String Subtraction (20’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">Hash散列</td></tr><tr><td style="text-align:center">1051</td><td style="text-align:left">Pop Sequence (25’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">栈模拟</td></tr><tr><td style="text-align:center">1052</td><td style="text-align:left">Linked List Sorting (25’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">链表</td></tr><tr><td style="text-align:center">1053</td><td style="text-align:left">Path of Equal Weight (30’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">树的遍历</td></tr><tr><td style="text-align:center">1054</td><td style="text-align:left">The Dominant Color (20’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">map映射，STL的使用</td></tr><tr><td style="text-align:center">1055</td><td style="text-align:left">The World’s Richest (25’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">排序</td></tr><tr><td style="text-align:center">1056</td><td style="text-align:left">Mice and Rice (25’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">queue的用法</td></tr><tr><td style="text-align:center">1057</td><td style="text-align:left">Stack (30’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">树状数组</td></tr><tr><td style="text-align:center">1058</td><td style="text-align:left">A+B in Hogwarts (20’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">进制转换</td></tr><tr><td style="text-align:center">1059</td><td style="text-align:left">Prime Factors (25’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">素数表的建立</td></tr><tr><td style="text-align:center">1060</td><td style="text-align:left">Are They Equal (25’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">科学计数法</td></tr><tr><td style="text-align:center">1061</td><td style="text-align:left">Dating (20’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">字符串处理</td></tr><tr><td style="text-align:center">1062</td><td style="text-align:left">Talent and Virtue (25’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">排序</td></tr><tr><td style="text-align:center">1063</td><td style="text-align:left">Set Similarity (25’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">集合set，STL的使用</td></tr><tr><td style="text-align:center">1064</td><td style="text-align:left">Complete Binary Search Tree (30’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">二叉查找树BST</td></tr><tr><td style="text-align:center">1065</td><td style="text-align:left">A+B and C (64bit) (20’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">模拟</td></tr><tr><td style="text-align:center">1066</td><td style="text-align:left">Root of AVL Tree (25’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">平衡二叉树（AVL树）</td></tr><tr><td style="text-align:center">1067</td><td style="text-align:left">Sort with Swap(0,*) (25’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">贪心算法</td></tr><tr><td style="text-align:center">1068</td><td style="text-align:left">Find More Coins (30’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">01背包，动态规划</td></tr><tr><td style="text-align:center">1069</td><td style="text-align:left">The Black Hole of Numbers (20’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">数学问题</td></tr><tr><td style="text-align:center">1070</td><td style="text-align:left">Mooncake (25’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">贪心算法</td></tr><tr><td style="text-align:center">1071</td><td style="text-align:left">Speech Patterns (25’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">map映射，STL的使用</td></tr><tr><td style="text-align:center">1072</td><td style="text-align:left">Gas Station (30’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">Dijkstra算法</td></tr><tr><td style="text-align:center">1073</td><td style="text-align:left">Scientific Notation (20’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">字符串处理</td></tr><tr><td style="text-align:center">1074</td><td style="text-align:left">Reversing Linked List (25’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">链表</td></tr><tr><td style="text-align:center">1075</td><td style="text-align:left">PAT Judge (25’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">排序</td></tr><tr><td style="text-align:center">1076</td><td style="text-align:left">Forwards on Weibo (30’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">图的遍历，BFS</td></tr><tr><td style="text-align:center">1077</td><td style="text-align:left">Kuchiguse (20’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">字符串处理</td></tr><tr><td style="text-align:center">1078</td><td style="text-align:left">Hashing (25’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">二次方探查法</td></tr><tr><td style="text-align:center">1079</td><td style="text-align:left">Total Sales of Supply Chain (25’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">DFS，BFS，树的遍历</td></tr><tr><td style="text-align:center">1080</td><td style="text-align:left">Graduate Admission (30’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">排序</td></tr><tr><td style="text-align:center">1081</td><td style="text-align:left">Rational Sum (20’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">分数的四则运算</td></tr><tr><td style="text-align:center">1082</td><td style="text-align:left">Read Number in Chinese (25’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">字符串处理</td></tr><tr><td style="text-align:center">1083</td><td style="text-align:left">List Grades (25’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">排序</td></tr><tr><td style="text-align:center">1084</td><td style="text-align:left">Broken Keyboard (20’)</td><td style="text-align:center"><a href=""></a></td><td style="text-align:center"></td><td style="text-align:left">Hash散列</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>AttributeError:&#39;NoneType&#39; object has no attribute &#39;find_all&#39;</title>
      <link href="/2018/11/07/AttributeError-NoneType-object-has-no-attribute-find-all/"/>
      <url>/2018/11/07/AttributeError-NoneType-object-has-no-attribute-find-all/</url>
      
        <content type="html"><![CDATA[<h3 id="问题描述："><a href="#问题描述：" class="headerlink" title="问题描述："></a>问题描述：</h3><p>当像这样使用 BeautifulSoup 时，会遇到报错信息：<strong> AttributeError: ‘NoneType’ object has no attribute ‘find_all’ </strong><br><a id="more"></a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">soup = BeautifulSoup(html,features=<span class="string">'lxml'</span>)</span><br><span class="line">content = soup.find(<span class="string">'article'</span>, &#123;<span class="string">"class"</span>:<span class="string">'post post-type-normal'</span>&#125;)</span><br><span class="line">d_body = content.find_all(<span class="string">'li'</span>)</span><br></pre></td></tr></table></figure></p><h3 id="解决办法："><a href="#解决办法：" class="headerlink" title="解决办法："></a>解决办法：</h3><p>查了很多博客，但是都没说到点上，最后找到了。其实是 soup.find() 里的参数不对，没有匹配到任何信息，导致上一步得到的 content 是空的，因此后面会报错。调整了一下参数，完美运行。</p>]]></content>
      
      
      <categories>
          
          <category> 日常折腾 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT乙级目录（更新中）</title>
      <link href="/2018/11/07/index-of-PAT-Basic-Level/"/>
      <url>/2018/11/07/index-of-PAT-Basic-Level/</url>
      
        <content type="html"><![CDATA[<p>力求用最简洁明了的方式给出题解，并附上也许对新手陌生的知识点以及题目易错点等，如果能帮到你的话那就太棒啦~</p><a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><p>有不懂的语法记得多去 <a href="http://www.cplusplus.com/reference/" target="_blank" rel="noopener">www.cplusplus.com</a> 翻翻文档，这里啥都有哦。</p><a id="more"></a><table><thead><tr><th style="text-align:center">No</th><th>Title</th><th style="text-align:center">C/C++</th><th style="text-align:center">Python</th><th>备注</th></tr></thead><tbody><tr><td style="text-align:center">1001</td><td>害死人不偿命的(3n+1)猜想 (15’)</td><td style="text-align:center"><a href="/2018/11/07/PAT-B1001-cpp/" title="查看题解">查看题解</a></td><td style="text-align:center"><a href="/2018/11/07/PAT-B1001-py/" title="查看题解">查看题解</a></td><td>模拟</td></tr><tr><td style="text-align:center">1002</td><td>写出这个数 (20’)</td><td style="text-align:center"><a href="/2018/11/07/PAT-B1002-cpp/" title="查看题解">查看题解</a></td><td style="text-align:center"><a href=""> </a></td><td>字符串处理</td></tr><tr><td style="text-align:center">1003</td><td>我要通过！(20’)</td><td style="text-align:center"><a href="/2018/11/11/PAT-B1003-cpp/" title="查看题解">查看题解</a></td><td style="text-align:center"><a href=""> </a></td><td>数学题</td></tr><tr><td style="text-align:center">1004</td><td>成绩排名 (20’)</td><td style="text-align:center"><a href="/2018/11/12/PAT-B1004-cpp/" title="查看题解">查看题解</a></td><td style="text-align:center"><a href=""> </a></td><td>查找元素</td></tr><tr><td style="text-align:center">1005</td><td>继续(3n+1)猜想 (25’)</td><td style="text-align:center"><a href="/2018/11/12/PAT-B1005-cpp/" title="查看题解">查看题解</a></td><td style="text-align:center"><a href=""> </a></td><td>Hash散列</td></tr><tr><td style="text-align:center">1006</td><td>换个格式输出整数 (15’)</td><td style="text-align:center"><a href="/2018/11/12/PAT-B1006-cpp/" title="查看题解">查看题解</a></td><td style="text-align:center"><a href=""> </a></td><td>字符串处理</td></tr><tr><td style="text-align:center">1007</td><td>素数对猜想 (20’)</td><td style="text-align:center"><a href="/2018/11/12/PAT-B1007-cpp/" title="查看题解">查看题解</a></td><td style="text-align:center"><a href=""> </a></td><td>素数</td></tr><tr><td style="text-align:center">1008</td><td>数组元素循环右移问题 (20’)</td><td style="text-align:center"><a href="/2018/11/12/PAT-B1008-cpp/" title="查看题解">查看题解</a></td><td style="text-align:center"><a href=""> </a></td><td>模拟</td></tr><tr><td style="text-align:center">1009</td><td>说反话 (20’)</td><td style="text-align:center"><a href="/2018/11/12/PAT-B1009-cpp/" title="查看题解">查看题解</a></td><td style="text-align:center"><a href=""> </a></td><td>字符串处理</td></tr><tr><td style="text-align:center">1010</td><td>一元多项式求导 (25’)</td><td style="text-align:center"><a href="/2018/11/12/PAT-B1010-cpp/" title="查看题解">查看题解</a></td><td style="text-align:center"><a href=""> </a></td><td>模拟</td></tr><tr><td style="text-align:center">1011</td><td>A+B和C (15’)</td><td style="text-align:center"><a href="/2018/11/12/PAT-B1011-cpp/" title="查看题解">查看题解</a></td><td style="text-align:center"><a href=""> </a></td><td>模拟</td></tr><tr><td style="text-align:center">1012</td><td>数字分类 (20’)</td><td style="text-align:center"><a href="/2018/11/12/PAT-B1012-cpp/" title="查看题解">查看题解</a></td><td style="text-align:center"><a href=""> </a></td><td>模拟</td></tr><tr><td style="text-align:center">1013</td><td>数素数 (20’)</td><td style="text-align:center"><a href="/2018/11/12/PAT-B1013-cpp/" title="查看题解">查看题解</a></td><td style="text-align:center"><a href=""> </a></td><td>素数</td></tr><tr><td style="text-align:center">1014</td><td>福尔摩斯的约会 (20’)</td><td style="text-align:center"><a href="/2018/11/12/PAT-B1014-cpp/" title="查看题解">查看题解</a></td><td style="text-align:center"><a href=""> </a></td><td>字符串处理</td></tr><tr><td style="text-align:center">1015</td><td>德才论 (25’)</td><td style="text-align:center"><a href="/2018/11/12/PAT-B1015-cpp/" title="查看题解">查看题解</a></td><td style="text-align:center"><a href=""> </a></td><td>排序</td></tr><tr><td style="text-align:center">1016</td><td>部分A+B (15’)</td><td style="text-align:center"><a href="/2018/11/12/PAT-B1016-cpp/" title="查看题解">查看题解</a></td><td style="text-align:center"><a href=""> </a></td><td>模拟</td></tr><tr><td style="text-align:center">1017</td><td>A除以B (20’)</td><td style="text-align:center"><a href="/2018/11/12/PAT-B1017-cpp/" title="查看题解">查看题解</a></td><td style="text-align:center"><a href=""> </a></td><td>大整数运算</td></tr><tr><td style="text-align:center">1018</td><td>锤子剪刀布 (20’)</td><td style="text-align:center"><a href="/2018/11/12/PAT-B1018-cpp/" title="查看题解">查看题解</a></td><td style="text-align:center"><a href=""> </a></td><td>模拟</td></tr><tr><td style="text-align:center">1019</td><td>数字黑洞 (20’)</td><td style="text-align:center"><a href="/2018/11/12/PAT-B1019-cpp/" title="查看题解">查看题解</a></td><td style="text-align:center"><a href=""> </a></td><td>数学问题</td></tr><tr><td style="text-align:center">1020</td><td>月饼 (25’)</td><td style="text-align:center"><a href="/2018/11/12/PAT-B1020-cpp/" title="查看题解">查看题解</a></td><td style="text-align:center"><a href=""> </a></td><td>贪心算法</td></tr><tr><td style="text-align:center">1021</td><td>个位数统计 (15’)</td><td style="text-align:center"><a href="/2018/11/22/PAT-B1021-cpp/" title="查看题解">查看题解</a></td><td style="text-align:center"><a href=""> </a></td><td>字符串处理</td></tr><tr><td style="text-align:center">1022</td><td>D进制的A+B (20’)</td><td style="text-align:center"><a href="/2018/11/22/PAT-B1022-cpp/" title="查看题解">查看题解</a></td><td style="text-align:center"><a href=""> </a></td><td>进制转换</td></tr><tr><td style="text-align:center">1023</td><td>组个最小数 (20’)</td><td style="text-align:center"><a href="/2018/11/22/PAT-B1023-cpp/" title="查看题解">查看题解</a></td><td style="text-align:center"><a href=""> </a></td><td>贪心算法</td></tr><tr><td style="text-align:center">1024</td><td>科学计数法 (20’)</td><td style="text-align:center"><a href="/2018/11/22/PAT-B1024-cpp/" title="查看题解">查看题解</a></td><td style="text-align:center"><a href=""> </a></td><td>字符串处理</td></tr><tr><td style="text-align:center">1025</td><td>反转链表 (25’)</td><td style="text-align:center"><a href="/2018/11/22/PAT-B1025-cpp/" title="查看题解">查看题解</a></td><td style="text-align:center"><a href=""> </a></td><td>链表</td></tr><tr><td style="text-align:center">1026</td><td>程序运行时间 (15’)</td><td style="text-align:center"><a href="/2018/11/22/PAT-B1026-cpp/" title="查看题解">查看题解</a></td><td style="text-align:center"><a href=""> </a></td><td>模拟</td></tr><tr><td style="text-align:center">1027</td><td>打印沙漏 (20’)</td><td style="text-align:center"><a href="/2018/11/22/PAT-B1027-cpp/" title="查看题解">查看题解</a></td><td style="text-align:center"><a href=""> </a></td><td>图形打印</td></tr><tr><td style="text-align:center">1028</td><td>人口普查 (20’)</td><td style="text-align:center"><a href="/2018/11/22/PAT-B1028-cpp/" title="查看题解">查看题解</a></td><td style="text-align:center"><a href=""> </a></td><td>查找元素</td></tr><tr><td style="text-align:center">1029</td><td>旧键盘 (20’)</td><td style="text-align:center"><a href="/2018/11/22/PAT-B1029-cpp/" title="查看题解">查看题解</a></td><td style="text-align:center"><a href=""> </a></td><td>Hash散列</td></tr><tr><td style="text-align:center">1030</td><td>完美数列 (25’)</td><td style="text-align:center"><a href="/2018/11/22/PAT-B1030-cpp/" title="查看题解">查看题解</a></td><td style="text-align:center"><a href=""> </a></td><td>two pointers</td></tr><tr><td style="text-align:center">1031</td><td>查验身份证 (15’)</td><td style="text-align:center"><a href="/2018/11/22/PAT-B1031-cpp/" title="查看题解">查看题解</a></td><td style="text-align:center"><a href=""> </a></td><td>字符串处理</td></tr><tr><td style="text-align:center">1032</td><td>挖掘机技术哪家强 (20’)</td><td style="text-align:center"><a href="/2018/11/22/PAT-B1032-cpp/" title="查看题解">查看题解</a></td><td style="text-align:center"><a href=""> </a></td><td>查找元素</td></tr><tr><td style="text-align:center">1033</td><td>旧键盘打字 (20’)</td><td style="text-align:center"><a href="/2018/11/22/PAT-B1033-cpp/" title="查看题解">查看题解</a></td><td style="text-align:center"><a href=""> </a></td><td>Hash散列</td></tr><tr><td style="text-align:center">1034</td><td>有理数四则运算 (20’)</td><td style="text-align:center"><a href="/2018/11/22/PAT-B1034-cpp/" title="查看题解">查看题解</a></td><td style="text-align:center"><a href=""> </a></td><td>分数的四则运算</td></tr><tr><td style="text-align:center">1035</td><td>插入与归并 (25’)</td><td style="text-align:center"><a href="/2018/11/22/PAT-B1035-cpp/" title="查看题解">查看题解</a></td><td style="text-align:center"><a href=""> </a></td><td>two pointers</td></tr><tr><td style="text-align:center">1036</td><td>跟奥巴马一起编程 (15’)</td><td style="text-align:center"><a href="/2018/11/26/PAT-B1036-cpp/" title="查看题解">查看题解</a></td><td style="text-align:center"><a href=""> </a></td><td>图形打印</td></tr><tr><td style="text-align:center">1037</td><td>在霍格沃茨找零钱 (20’)</td><td style="text-align:center"><a href="/2018/11/26/PAT-B1037-cpp/" title="查看题解">查看题解</a></td><td style="text-align:center"><a href=""> </a></td><td>进制转换</td></tr><tr><td style="text-align:center">1038</td><td>统计同成绩学生 (20’)</td><td style="text-align:center"><a href="/2018/11/26/PAT-B1038-cpp/" title="查看题解">查看题解</a></td><td style="text-align:center"><a href=""> </a></td><td>Hash散列</td></tr><tr><td style="text-align:center">1039</td><td>到底买不买 (20’)</td><td style="text-align:center"><a href="/2018/11/26/PAT-B1039-cpp/" title="查看题解">查看题解</a></td><td style="text-align:center"><a href=""> </a></td><td>Hash散列</td></tr><tr><td style="text-align:center">1040</td><td>有几个PAT (25’)</td><td style="text-align:center"><a href="/2018/11/26/PAT-B1040-cpp/" title="查看题解">查看题解</a></td><td style="text-align:center"><a href=""> </a></td><td>逻辑题</td></tr><tr><td style="text-align:center">1041</td><td>考试座位号 (15’)</td><td style="text-align:center"><a href="/2018/11/26/PAT-B1041-cpp/" title="查看题解">查看题解</a></td><td style="text-align:center"><a href=""> </a></td><td>查找元素</td></tr><tr><td style="text-align:center">1042</td><td>字符统计 (20’)</td><td style="text-align:center"><a href="/2018/11/26/PAT-B1042-cpp/" title="查看题解">查看题解</a></td><td style="text-align:center"><a href=""> </a></td><td>Hash散列</td></tr><tr><td style="text-align:center">1043</td><td>输出PATest (20’)</td><td style="text-align:center"><a href="/2018/11/26/PAT-B1043-cpp/" title="查看题解">查看题解</a></td><td style="text-align:center"><a href=""> </a></td><td>Hash散列</td></tr><tr><td style="text-align:center">1044</td><td>火星数字 (20’)</td><td style="text-align:center"><a href="/2018/11/26/PAT-B1044-cpp/" title="查看题解">查看题解</a></td><td style="text-align:center"><a href=""> </a></td><td>map映射，STL的使用</td></tr><tr><td style="text-align:center">1045</td><td>快速排序 (25’)</td><td style="text-align:center"><a href="/2018/11/26/PAT-B1045-cpp/" title="查看题解">查看题解</a></td><td style="text-align:center"><a href=""> </a></td><td>快速排序</td></tr><tr><td style="text-align:center">1046</td><td>划拳 (15’)</td><td style="text-align:center"><a href="/2018/11/26/PAT-B1046-cpp/" title="查看题解">查看题解</a></td><td style="text-align:center"><a href=""> </a></td><td>模拟</td></tr><tr><td style="text-align:center">1047</td><td>编程团体赛 (20’)</td><td style="text-align:center"><a href="/2018/11/26/PAT-B1047-cpp/" title="查看题解">查看题解</a></td><td style="text-align:center"><a href=""> </a></td><td>Hash散列</td></tr><tr><td style="text-align:center">1048</td><td>数字加密 (20’)</td><td style="text-align:center"><a href="/2018/11/26/PAT-B1048-cpp/" title="查看题解">查看题解</a></td><td style="text-align:center"><a href=""> </a></td><td>字符串处理</td></tr><tr><td style="text-align:center">1049</td><td>数列的片段和 (20’)</td><td style="text-align:center"><a href="/2018/11/26/PAT-B1049-cpp/" title="查看题解">查看题解</a></td><td style="text-align:center"><a href=""> </a></td><td>数学问题</td></tr><tr><td style="text-align:center">1050</td><td>螺旋矩阵 (25’)</td><td style="text-align:center"><a href="/2018/11/26/PAT-B1050-cpp/" title="查看题解">查看题解</a></td><td style="text-align:center"><a href=""> </a></td><td>模拟</td></tr><tr><td style="text-align:center">1051</td><td>复数乘法 (15’)</td><td style="text-align:center"><a href="/2018/11/27/PAT-B1051-cpp/" title="查看题解">查看题解</a></td><td style="text-align:center"><a href=""> </a></td><td>模拟</td></tr><tr><td style="text-align:center">1052</td><td>卖个萌 (20’)</td><td style="text-align:center"><a href="/2018/11/27/PAT-B1052-cpp/" title="查看题解">查看题解</a></td><td style="text-align:center"><a href=""> </a></td><td>字符串处理</td></tr><tr><td style="text-align:center">1053</td><td>住房空置率 (20’)</td><td style="text-align:center"><a href="/2018/11/27/PAT-B1053-cpp/" title="查看题解">查看题解</a></td><td style="text-align:center"><a href=""> </a></td><td>模拟</td></tr><tr><td style="text-align:center">1054</td><td>求平均值 (20’)</td><td style="text-align:center"><a href=""> </a></td><td style="text-align:center"><a href=""> </a></td><td>字符串处理</td></tr><tr><td style="text-align:center">1055</td><td>集体照 (25’)</td><td style="text-align:center"><a href=""> </a></td><td style="text-align:center"><a href=""> </a></td><td>排序</td></tr><tr><td style="text-align:center">1056</td><td>组合数的和 (15’)</td><td style="text-align:center"><a href="/2018/11/27/PAT-B1056-cpp/" title="查看题解">查看题解</a></td><td style="text-align:center"><a href=""> </a></td><td>数学问题</td></tr><tr><td style="text-align:center">1057</td><td>数零壹 (20’)</td><td style="text-align:center"><a href="/2018/11/27/PAT-B1057-cpp/" title="查看题解">查看题解</a></td><td style="text-align:center"><a href=""> </a></td><td>进制转换</td></tr><tr><td style="text-align:center">1058</td><td>选择题 (20’)</td><td style="text-align:center"><a href=""> </a></td><td style="text-align:center"><a href=""> </a></td><td>字符串处理</td></tr><tr><td style="text-align:center">1059</td><td>C语言竞赛 (20’)</td><td style="text-align:center"><a href=""> </a></td><td style="text-align:center"><a href=""> </a></td><td>逻辑题</td></tr><tr><td style="text-align:center">1060</td><td>爱丁顿数 (25’)</td><td style="text-align:center"><a href=""> </a></td><td style="text-align:center"><a href=""> </a></td><td>逻辑题</td></tr><tr><td style="text-align:center">1061</td><td>判断题 (15’)</td><td style="text-align:center"><a href=""> </a></td><td style="text-align:center"><a href=""> </a></td><td>逻辑题</td></tr><tr><td style="text-align:center">1062</td><td>最简分数 (20’)</td><td style="text-align:center"><a href=""> </a></td><td style="text-align:center"><a href=""> </a></td><td>分数化简</td></tr><tr><td style="text-align:center">1063</td><td>计算谱半径 (20’)</td><td style="text-align:center"><a href=""> </a></td><td style="text-align:center"><a href=""> </a></td><td>逻辑题</td></tr><tr><td style="text-align:center">1064</td><td>朋友数 (20’)</td><td style="text-align:center"><a href=""> </a></td><td style="text-align:center"><a href=""> </a></td><td>STL-set的使用</td></tr><tr><td style="text-align:center">1065</td><td>单身狗 (25’)</td><td style="text-align:center"><a href=""> </a></td><td style="text-align:center"><a href=""> </a></td><td>逻辑题，STL-set的使用</td></tr><tr><td style="text-align:center">1066</td><td>图像过滤 (15’)</td><td style="text-align:center"><a href=""> </a></td><td style="text-align:center"><a href=""> </a></td><td>逻辑题</td></tr><tr><td style="text-align:center">1067</td><td>试密码 (20’)</td><td style="text-align:center"><a href=""> </a></td><td style="text-align:center"><a href=""> </a></td><td>字符串，模拟题</td></tr><tr><td style="text-align:center">1068</td><td>万绿丛中一点红 (20’)</td><td style="text-align:center"><a href=""> </a></td><td style="text-align:center"><a href=""> </a></td><td>逻辑题</td></tr><tr><td style="text-align:center">1069</td><td>微博转发抽奖 (20’)</td><td style="text-align:center"><a href=""> </a></td><td style="text-align:center"><a href=""> </a></td><td>map映射</td></tr><tr><td style="text-align:center">1070</td><td>结绳 (25’)</td><td style="text-align:center"><a href=""> </a></td><td style="text-align:center"><a href=""> </a></td><td>排序，贪心</td></tr><tr><td style="text-align:center">1071</td><td>小赌怡情 (15’)</td><td style="text-align:center"><a href=""> </a></td><td style="text-align:center"><a href=""> </a></td><td>水题</td></tr><tr><td style="text-align:center">1072</td><td>开学寄语 (20’)</td><td style="text-align:center"><a href=""> </a></td><td style="text-align:center"><a href=""> </a></td><td>简单题</td></tr><tr><td style="text-align:center">1073</td><td>多选题常见计分法 (20’)</td><td style="text-align:center"><a href=""> </a></td><td style="text-align:center"><a href=""> </a></td><td>逻辑题</td></tr><tr><td style="text-align:center">1074</td><td>宇宙无敌加法器 (20’)</td><td style="text-align:center"><a href=""> </a></td><td style="text-align:center"><a href=""> </a></td><td>逻辑题</td></tr><tr><td style="text-align:center">1075</td><td>链表元素分类 (25’)</td><td style="text-align:center"><a href=""> </a></td><td style="text-align:center"><a href=""> </a></td><td>链表</td></tr><tr><td style="text-align:center">1076</td><td>Wifi密码 (15’)</td><td style="text-align:center"><a href=""> </a></td><td style="text-align:center"><a href=""> </a></td><td>简单题</td></tr><tr><td style="text-align:center">1077</td><td>互评成绩计算 (20’)</td><td style="text-align:center"><a href=""> </a></td><td style="text-align:center"><a href=""> </a></td><td>简单题</td></tr><tr><td style="text-align:center">1078</td><td>字符串压缩与解压 (20’)</td><td style="text-align:center"><a href=""> </a></td><td style="text-align:center"><a href=""> </a></td><td>逻辑题</td></tr><tr><td style="text-align:center">1079</td><td>延迟的回文数 (20’)</td><td style="text-align:center"><a href=""> </a></td><td style="text-align:center"><a href=""> </a></td><td>逻辑题</td></tr><tr><td style="text-align:center">1080</td><td>MOOC期终成绩 (25’)</td><td style="text-align:center"><a href=""> </a></td><td style="text-align:center"><a href=""> </a></td><td>map映射，排序</td></tr><tr><td style="text-align:center">1081</td><td>检查密码 (15’)</td><td style="text-align:center"><a href=""> </a></td><td style="text-align:center"><a href=""> </a></td><td>string字符串</td></tr><tr><td style="text-align:center">1082</td><td>射击比赛 (20’)</td><td style="text-align:center"><a href=""> </a></td><td style="text-align:center"><a href=""> </a></td><td>逻辑题</td></tr><tr><td style="text-align:center">1083</td><td>是否存在相等的差 (20’)</td><td style="text-align:center"><a href=""> </a></td><td style="text-align:center"><a href=""> </a></td><td>hash映射，map STL</td></tr><tr><td style="text-align:center">1084</td><td>外观数列 (20’)</td><td style="text-align:center"><a href=""> </a></td><td style="text-align:center"><a href=""> </a></td><td>String字符串</td></tr><tr><td style="text-align:center">1085</td><td>PAT单位排行 (25’)</td><td style="text-align:center"><a href=""> </a></td><td style="text-align:center"><a href=""> </a></td><td>排序，map STL</td></tr><tr><td style="text-align:center">1086</td><td>就不告诉你 (15’)</td><td style="text-align:center"><a href="/2018/11/11/PAT-B1086-cpp/" title="查看题解">查看题解</a></td><td style="text-align:center"><a href=""> </a></td><td>简单题</td></tr><tr><td style="text-align:center">1087</td><td>有多少不同的值 (20’)</td><td style="text-align:center"><a href="/2018/11/11/PAT-B1087-cpp/" title="查看题解">查看题解</a></td><td style="text-align:center"><a href=""> </a></td><td>map映射</td></tr><tr><td style="text-align:center">1088</td><td>三人行 (20’)</td><td style="text-align:center"><a href=""> </a></td><td style="text-align:center"><a href=""> </a></td><td>逻辑题</td></tr><tr><td style="text-align:center">1089</td><td>狼人杀-简单版 (20’)</td><td style="text-align:center"><a href=""> </a></td><td style="text-align:center"><a href=""> </a></td><td>查找元素</td></tr><tr><td style="text-align:center">1090</td><td>危险品装箱 (25’)</td><td style="text-align:center"><a href="/2018/11/11/PAT-B1090-cpp/" title="查看题解">查看题解</a></td><td style="text-align:center"><a href=""> </a></td><td>查找元素</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PAT B1001 害死人不偿命的(3n+1)猜想(C++)</title>
      <link href="/2018/11/07/PAT-B1001-cpp/"/>
      <url>/2018/11/07/PAT-B1001-cpp/</url>
      
        <content type="html"><![CDATA[<a href="/2018/11/07/index-of-PAT-Advanced-Level/" title="PAT甲级目录">PAT甲级目录</a>  |  <a href="/2018/11/07/index-of-PAT-Basic-Level/" title="PAT乙级目录">PAT乙级目录</a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>卡拉兹(Callatz)猜想：<br><a id="more"></a><br>对任何一个正整数 $n$，如果它是偶数，那么把它砍掉一半；如果它是奇数，那么把 $(3n+1)$ 砍掉一半。这样一直反复砍下去，最后一定在某一步得到 $n=1$。卡拉兹在 1950 年的世界数学家大会上公布了这个猜想，传说当时耶鲁大学师生齐动员，拼命想证明这个貌似很傻很天真的命题，结果闹得学生们无心学业，一心只证 $(3n+1)$，以至于有人说这是一个阴谋，卡拉兹是在蓄意延缓美国数学界教学与科研的进展……<br>我们今天的题目不是证明卡拉兹猜想，而是对给定的任一不超过 $1000$ 的正整数 $n$，简单地数一下，需要多少步（砍几下）才能得到 $n=1$？</p><h4 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h4><p>每个测试输入包含 1 个测试用例，即给出正整数 $n$ 的值。</p><h4 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h4><p>输出从 $n$ 计算到 1 需要的步数。</p><h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5</span><br></pre></td></tr></table></figure><h2 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt; //C++标准输入输出头文件</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>; <span class="comment">//C++指定标准命名空间</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> n, cnt = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">cin</span> &gt;&gt; n; <span class="comment">//输入n</span></span><br><span class="line">  <span class="keyword">while</span>(n &gt; <span class="number">1</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(n % <span class="number">2</span> == <span class="number">0</span>) n /= <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">else</span> n = (<span class="number">3</span> * n + <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line">    cnt ++;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">cout</span> &lt;&lt; cnt &lt;&lt; <span class="built_in">endl</span>; <span class="comment">//输出cnt</span></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PAT题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>我居然错过了考研正式报名</title>
      <link href="/2018/11/05/I-Missed-A-Important-Test/"/>
      <url>/2018/11/05/I-Missed-A-Important-Test/</url>
      
        <content type="html"><![CDATA[<p>预想过失败的很多种方式，但没想到的是，有一天我会栽到这里。<br><a id="more"></a></p><p>但更令我惊讶的还是，我居然一点也不难过，反而还有点开心。</p><p>这是真正自由的味道，在逃离大学这个牢笼之后。</p><h2 id="一战浙大计算机"><a href="#一战浙大计算机" class="headerlink" title="一战浙大计算机"></a>一战浙大计算机</h2><p>去年这时候，我刚刚结束长达两个月的平均每天 5 公里的长跑计划。这是一次试图探索自己极限的尝试。</p><p>这之前以及这之后的半个多月，每天还是悠然自得地学上 6 - 7 个小时，然后跑步，或者日常上课或者摸鱼。这期间我每天还能有精力构思考研百日倒计时的创意形式，每日更新，画在在寝室里的白板上。</p><p>还剩 40 多天的时候，开始感到时间不够用了，专业课只过了一遍，个别章节甚至完全没有看；线代才做一半，概率论还没开始看，真题也还没开始做。政治才做过一遍 1000 题，大题没怎么看。</p><p>还剩一个月的时候，这辈子考试都没慌过的我终于开始慌了。我知道自己无论如何也没有时间做第二遍了。</p><p>还有三周的时候，大脑一片空白，似乎复习过的痕迹丝毫没有留下记忆，打算放弃的想法划过脑海。</p><p>经过一番思索后，还是决定挣扎一下。</p><p>极端紧迫的时间条件和糟糕的复习状况，成为了一个触发条件，像是正好打破了那道壁垒，进入了 zoom 状态，作为一名自我诊断为 ADD 的人士，我第一次体验到什么叫真正的专注。</p><h2 id="最后当然是毫无悬念地失败了"><a href="#最后当然是毫无悬念地失败了" class="headerlink" title="最后当然是毫无悬念地失败了"></a>最后当然是毫无悬念地失败了</h2><h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h3><p><strong>数学一</strong></p><p>数学一全书完整的一遍都没做完，最后遇上数一这一年爆冷近几年最难，我把能写上的都写上了。<br>目标：随缘<br>结果：数学一 90 / 150 分。</p><p><strong>政治</strong></p><p>政治大题花了四个晚上一个下午背的肖四，用理解记忆 或者 拆字记忆法 40 个字记忆几百字答案，大概背了七八题。考试时，答案都出现在题干的情况下，3 小时没停笔。<br>目标：65<br>结果：政治 70 / 100 分。</p><p><strong>英语一</strong></p><p>英语真题阅读做了两遍，核心单词背了忘，忘了还忘。考试做阅读时差点睡着。作文背了模板，结果在考场上放飞了自我开始随心所欲自由发挥。<br>目标：70<br>结果：英语一 68 / 100 分。</p><p><strong>专业课</strong></p><p>专业课，数据结构算法完全没有复习，组成原理两个大章节没有复习，王道只做过一遍。考试 15 分的算法题扣光。<br>目标：随缘<br>结果：408专业课 106 / 150 分。</p><p>总分：334<br>复试线：361<br>该专业报名人数：约2000</p><h3 id="原因分析"><a href="#原因分析" class="headerlink" title="原因分析"></a>原因分析</h3><p>最后当然是毫无悬念地失败了。自我分析一下原因。</p><h4 id="客观原因："><a href="#客观原因：" class="headerlink" title="客观原因："></a>客观原因：</h4><ul><li><p>浙大计算机报名人数爆炸</p><p>前年报名人数 1200+，复试线 330+；去年报名人数2000，复试线361，总体试卷难度高于上一年。</p></li><li><p>零基础跨专业跨学校跨地区</p><p>俗称难度最大的三跨考生</p></li></ul><h4 id="主观原因："><a href="#主观原因：" class="headerlink" title="主观原因："></a>主观原因：</h4><ul><li>我菜</li><li>我懒</li><li>我每天只看不到 7 小时的书</li><li>我只复习了一遍还没看完</li></ul><p>事无巨细地述说去年考试的细节，除了单纯回顾一下我还想说什么：</p><h4 id="研究生并不难考"><a href="#研究生并不难考" class="headerlink" title="研究生并不难考"></a>研究生并不难考</h4><ul><li>我如此糟糕的复习状况，最后结果也没有太难看，说明研究生考试难度并不是很大。只要不是跨专业不考TOP2，其他学校基本是很容易上的，身边有不少案例。</li><li>跨考的只要不是考热门专业，没有上千的报名人数，基本上也是很好考的。（一般专业有超过 500 人报考就很多的了）</li><li>跨考的又是考热门专业，只要你比我再上点心，别天天摸鱼，我想问题也不会很大。</li></ul><h2 id="决定二战"><a href="#决定二战" class="headerlink" title="决定二战"></a>决定二战</h2><p>毕竟是跨考，毕竟是零基础学计算机的四大专业课，毕竟整个复习过程太悠闲，所以再给点时间，二战一定没有问题的吧，我这样告诉自己。</p><p>正式复习依然是 7 月份开始。依然是悠闲的复习，但这次是脚踏实地的悠闲复习。<br>此处省略 x 字。</p><h2 id="突然得知已经错过了正式报名"><a href="#突然得知已经错过了正式报名" class="headerlink" title="突然得知已经错过了正式报名"></a>突然得知已经错过了正式报名</h2><p>第一反应是惊讶。我也不知道为什么，今年没有像去年那样设置日历事件提醒。总之在几分钟后接受了没办法挽回的事实后，一边和朋友报告这个消息，一边重新思考自己到底为什么要考研。</p><p>主要是两大原因，如今分别对其进行反驳：</p><blockquote><p>1.方便转行<br>读研可以让我快速进入一个全新的领域。</p></blockquote><p><strong>反驳：</strong></p><ul><li><strong>计算机互联网行业转行太容易了</strong><ul><li>有人上了几个月培训班就能去写代码了；有人读完硕博想转行计算机，就自学几个月相关领域知识代码技能，去谷歌上班了</li><li>如果只是单纯为了转行，没有必要花费三年时间去读研</li></ul></li></ul><blockquote><p>2.提升学历<br>拥有一个 985 的硕士文凭总是好的，也能证明实力。</p></blockquote><p><strong>反驳：</strong></p><ul><li><strong>我并没有很强烈的名校情结</strong><ul><li>我不崇拜权威。在国内的应试教育的环境之下，很多人对学霸有着天然的好感，自然而然地有一种崇敬之情。但我觉得这是狼奶，得吐，说白了这还是潜意识里一种对于权威的崇拜。</li><li>那为什么非得是浙大？因为浙大计算机是国内顶尖的，同时浙大复试是出了名的公平公开，而且校风学风自由开放。</li><li>其他人我无所谓，最想向父母证明自己的实力，想告诉他们我并不比别人差。但证明实力并不是只有这一种方式。</li></ul></li><li><strong>我不一定喜欢做计算机相关的研究</strong><ul><li>计算机领域的研究无非是阅读最新论文、相关书籍，听讲座，做实验（电脑上），写论文。</li><li>但是我喜欢计算机的一点是，它是一种万能的工具，一种你可以操作的工具。你可以切实可行地用它来做一点什么事情，即便只是很微小的一个部分，但可以改变你自己的或者别人的生活。</li></ul></li><li><strong>考上了也不能自由选择研究方向</strong><ul><li>研究方向还需要经过实验室面试才能确定，热门实验室热门导师总是很抢手，很有可能最后去的实验室并不是自己感兴趣的领域。</li></ul></li><li><strong>不当研究生也没有人拦着你关注行业最新领域</strong><ul><li>计算机不像其他学科需要购置很多庞大的专业的实验器材，也没有严苛的实验条件，只要你有一台能上网的电脑，就能做很多事情。</li><li>网络上没有行业的资源能超越计算机的，铺天盖地的学习资料，开放的制作精良的网络课程，无数优秀的开源项目的源代码。最新研究论文随便阅读，你一样可以在自己电脑上重新实现论文中的想法，并运用到自己的工作当中。</li></ul></li><li><strong>一张硕士文凭和三年工作经验孰轻孰重</strong><ul><li>计算机行业知识和技术日新月异，研究生学的东西在工作中基本用不到，一切依然是从头开始</li><li>研究生文凭 + 无工作经验 vs 本科文凭 + 三年工作经验，实际上后者在薪资上更有竞争力</li></ul></li><li><strong>研究生是一个新的框</strong><ul><li>研究生有论文压力，同样有 Deadline，一样是被推着往前走</li><li>研究生导师一般都被称为“老板”，和工作一样，实际上也是替你的“老板”打工</li><li>刚刚从大学这个牢笼逃离出来，为什么要这么快进入一个新的框呢</li><li>什么时候读研都不会太迟</li></ul></li></ul><p>想通之后，一阵轻松。</p><p>当晚一夜无眠。想到可以继续看 kindle 中堆积了几个月的书，可以好好折腾自己的博客，可以去摄影，可以将最近的项目灵感付诸实践，可以把过去收藏了好久的计算机相关的博客文章拿出来好好研究，内心的喜悦随之一点点绽放开来。</p><p>嗯，是自由的味道，真正意义上的自由。</p><h2 id="自由与快乐"><a href="#自由与快乐" class="headerlink" title="自由与快乐"></a>自由与快乐</h2><p>我所追求的事物总结起来其实只有两点：1.自由，2.快乐。并且将这两点作为我是否要做某件事的衡量标准。</p><p>当初学物理，因为觉得物理能够让我更好地理解自己所生活的世界，了解世间万物为何如此运作。物理，因而名为“万物之理”。这是思想上的自由。</p><p>现在学计算机，因为觉得计算机是一种万能的工具，可以和任意领域结合，并且可以用来做出一些真正的、有用的“东西”，是能够做出可以让自己和他人感到便利，真切改善生活品质的工具。互联网是世界之窗，能够看到更大的世界。这是“行动”上的自由。当然了，计算机在某种程度上还能带来经济上的自由。</p><p>自由和快乐是相辅相成、相生相灭的。对我而言，失去自由的快乐不叫快乐，而失去快乐的自由是根本不存在的。</p><p>说来也奇怪，曾经好几次都是这样，虽然平日里也常常与阴郁和黑暗为伴，但在人生关键节点，脑海中描绘的未来永远是光明灿烂的。大概我真的自带“乐观的基因”吧。</p><p>觉得遗憾吗？有一点吧，毕竟现在总体第一轮复习差不多结束，数学一轮半并且真题已经能稳定在 130+ ；一年没碰政治，刚开始写 1000 题，选择题平均 100 个错 30 个，错的那些主要是完全需要死记硬背的没有任何逻辑性可言的生搬硬套部分；8 月份刷完了 PAT 算法题库；此时距离考试还有 50 天。</p><p>这些时间都浪费了吗？并没有，因为我很反感耗费时间在学习（自认为）毫无用处的事物上。我实际花费时间精力复习的部分或多或少都将在未来的学习工作中使用到：高数、线代、概率论都是数据科学和机器学习的理论基础，刷的算法题是工作日常要用的，四大专业课学完了这部分基础也达到了计算机专业本科生的水平，其他实在没用的东西比如政治根本没开始看。而且期间我利用闲暇时间做兼职，还挣了九千买了个相机，不亏。</p><p>当然你也可以认为，以上都是我失败的自我安慰。那又如何呢，你怎么想跟我有什么关系呢，我照样过得很好。</p><p>刚刚看到<a href="https://www.jiqizhixin.com/articles/2018-10-11-4" target="_blank" rel="noopener">一篇文章</a>，文末有这样一句话感觉说得很好：</p><blockquote class="blockquote-center"><p>对自己好一点。你没有在 18 岁毕业又不会死，没有在二十几岁获得博士学位又怎么了，没有在多少岁成为百万富翁又会怎样。去发现这个世界，去了解自己，去享受生命的过程。</p></blockquote><p>你根本不知道明天会发生什么，我也想象不到有一天我会错过一个大型考试。</p><p>这一天，我看了一篇关于自然语言处理的综述，看教程学习爬虫爬了百科词条，翻出博客重新写博文，总之打开电脑就不想玩手机了。</p><p>原来总觉得人生苦短，但此时此刻，第一次觉得人生很长，我才 22 周岁，依然有大好时光。</p><blockquote class="blockquote-center"><p>塞翁失马，焉知非福。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 日常闲聊 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 闲聊 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Atom下如何让光标自动移动到配对符号外</title>
      <link href="/2018/03/12/Automatically-Move-the-cursor-outside-the-brackets-in-Atom/"/>
      <url>/2018/03/12/Automatically-Move-the-cursor-outside-the-brackets-in-Atom/</url>
      
        <content type="html"><![CDATA[<p>Atom作为一款简洁优美的编辑器深受广大用户的喜爱，丰富的插件极大地提高了它的易用性。日常敲代码的人都知道，编辑器提供的符号自动配对（即括号成对输出：“”）虽然降低了出错率，但是最令人头疼的还是在输入完成后，需要再敲一个方向键才能将光标移动到括号外，而单纯移动手指是够不着方向键→的。</p><p>那么如何在Atom环境下解决光标自动移动问题？</p><a id="more"></a><h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><ul><li>Windows 10 + 64位</li><li>Atom</li></ul><h3 id="修改init-script文件"><a href="#修改init-script文件" class="headerlink" title="修改init script文件"></a>修改init script文件</h3><ul><li><p>在 Atom 编辑器中，用 Ctrl + Shift + P 呼出 Command Palette 窗口</p></li><li><p>在窗口搜索框输入 init script , 点击 Application: Open Your Init Script</p></li><li><p>在打开的文件里粘贴以下代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># move cursor across the ending symbols...</span></span><br><span class="line">EndingSymbolRegex = /\s*[)&#125;&gt;\]/<span class="string">'"`;:=-]/</span></span><br><span class="line"><span class="string">atom.commands.add '</span>atom-text-editor<span class="string">', '</span>custom:jump-over-symbol<span class="string">': (event) -&gt;</span></span><br><span class="line"><span class="string">  editor = atom.workspace.getActiveTextEditor()</span></span><br><span class="line"><span class="string">  cursorMoved = false</span></span><br><span class="line"><span class="string">  for cursor in editor.getCursors()</span></span><br><span class="line"><span class="string">    range = cursor.getCurrentWordBufferRange(wordRegex: EndingSymbolRegex)</span></span><br><span class="line"><span class="string">    unless range.isEmpty()</span></span><br><span class="line"><span class="string">      cursor.setBufferPosition(range.end)</span></span><br><span class="line"><span class="string">      cursorMoved = true</span></span><br><span class="line"><span class="string">  event.abortKeyBinding() unless cursorMoved</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="修改快捷键键位"><a href="#修改快捷键键位" class="headerlink" title="修改快捷键键位"></a>修改快捷键键位</h3><ul><li>在 Atom 编辑器中，用 Ctrl + Shift + P 呼出 Command Palette 窗口</li><li>在窗口搜索框输入 keymap , 点击 Application: Open Your keymap</li><li><p>在打开的文件底部增加如下代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"atom-text-editor:not([mini])"</span>:</span><br><span class="line">  <span class="string">"tab"</span>: <span class="string">"custom:jump-over-symbol"</span></span><br></pre></td></tr></table></figure></li><li><p>“tab” 可更换成自己习惯的其他快捷键，如”shift”, “enter”, 或者”shift-enter”</p></li></ul><h3 id="更新设置"><a href="#更新设置" class="headerlink" title="更新设置"></a>更新设置</h3><ul><li>在 Atom 编辑器中，用 Ctrl + Shift + P 呼出 Command Palette 窗口</li><li>输入 reload, 选择 Window: Reload</li></ul><p>接下来就可以愉快地玩耍啦！</p><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p><a href="https://jetorz.github.io/2017-02-07-Skill-Atom-auto-pair.html" target="_blank" rel="noopener">技巧卡：怎样让 Atom 将光标自动移动到配对符号外</a></p>]]></content>
      
      
      <categories>
          
          <category> 日常折腾 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Atom </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>从零开始搭建博客简明教程</title>
      <link href="/2018/01/21/Building-A-Blog-From-Scratch/"/>
      <url>/2018/01/21/Building-A-Blog-From-Scratch/</url>
      
        <content type="html"><![CDATA[<p>你是不是早就厌倦了那些博客网站毫无美感的界面，是不是受够了无休无止的网站推送，是不是早就想建立一个属于自己的博客，却止步于复杂的教程以及一系列令人头疼的代码？那么恭喜你，这篇文章就是想以最浅显易懂的方式手把手教你搭建属于自己的博客，你只需要一点耐心，一步步跟着做。<br><a id="more"></a></p><p>Hexo 作为一个快速、简洁且高效的博客框架，简直是小白们的福音，而 GitHub 又免去了我们额外租用并部署服务器的麻烦。因此本文将利用 Hexo 及 GitHub 搭建博客。</p><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><ul><li>下载安装 node.js （<a href="https://nodejs.org/en/" target="_blank" rel="noopener">官网下载安装</a>）</li><li>下载安装 git （<a href="https://git-scm.com/downloads" target="_blank" rel="noopener">官网下载安装</a>）</li></ul><h3 id="本地搭建hexo静态博客"><a href="#本地搭建hexo静态博客" class="headerlink" title="本地搭建hexo静态博客"></a>本地搭建hexo静态博客</h3><ul><li><p>安装hexo框架: 打开cmd 运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure></li><li><p>新建一个文件夹，如 MyBlog ，进入该文件夹内，右击运行 git ，输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init</span><br></pre></td></tr></table></figure></li><li><p>生成完 hexo 模板，安装 npm ，运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install</span><br></pre></td></tr></table></figure></li></ul><p>没错，博客的主体部分到此已经完成了，来看看效果吧。运行：<br>     <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure></p><p>这时候打开浏览器，输入 localhost:4000 就可以看到博客目前的样子了。小小激动一下，然后按 Ctrl + C 就可以继续下面的操作了。</p><h3 id="个性化设置（初步）"><a href="#个性化设置（初步）" class="headerlink" title="个性化设置（初步）"></a>个性化设置（初步）</h3><h4 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h4><ul><li>下载新的主题（以<a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">NexT 主题</a>为例），在根目录下运行：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>打开根目录下的 _config.yml ，修改字段 theme 为:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: next</span><br></pre></td></tr></table></figure></li><li><p>选择外观：打开 /themes/next 目录下的主题配置文件 <em>config.yml ， 找到 scheme 字段（可用 Ctrl + F 快捷查找）。NexT提供了三种不同的外观，可以挑选一个自己喜欢的，然后去掉其中一个的 # 号(后续主要修改的也就是这两个文件： </em>站点配置文件<em> 和 </em>主题配置文件_ 。)。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Schemes</span></span><br><span class="line"><span class="comment">#scheme: Muse</span></span><br><span class="line">scheme: Mist</span><br><span class="line"><span class="comment">#scheme: Pisces</span></span><br><span class="line"><span class="comment">#scheme: Gemini</span></span><br></pre></td></tr></table></figure></li><li><p>查看效果，可运行如下命令(以后每次想查看效果都可重复此步骤)：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure></li></ul><h4 id="站点配置"><a href="#站点配置" class="headerlink" title="站点配置"></a>站点配置</h4><ul><li>使用编辑器打开根目录下的站点配置文件 _config.yml （Windows下不要使用记事本编辑，中文标题会出现乱码），修改字段 Site ， 注意冒号后面要有空格：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line">title: 未知的世界                //博客名称</span><br><span class="line">subtitle:</span><br><span class="line">description:  Do something cool //一句签名</span><br><span class="line">author: LulalaP                 //作者</span><br><span class="line">language: zh-Hans               //网站语言</span><br><span class="line">timezone:</span><br></pre></td></tr></table></figure></li></ul><h3 id="设置侧边栏头像"><a href="#设置侧边栏头像" class="headerlink" title="设置侧边栏头像"></a>设置侧边栏头像</h3><ul><li><p>在 /source 中新建文件夹并命名为 uploads , 将头像图片（如： avatar.jpg ）放到该文件夹内</p></li><li><p>打开 /themes/next 目录下的主题配置文件 _config.yml ，找到字段 avatar 并修改为:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">avatar: /uploads/avatar.jpg</span><br></pre></td></tr></table></figure></li></ul><h3 id="完善博客页面"><a href="#完善博客页面" class="headerlink" title="完善博客页面"></a>完善博客页面</h3><h4 id="添加菜单"><a href="#添加菜单" class="headerlink" title="添加菜单"></a>添加菜单</h4><ul><li>在主题配置文件 _configy.yml 设置中将字段 menu 中需要添加的菜单前面的注释去掉即可。如需要添加其他菜单可按需添加（注意字段的缩进）：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: /</span><br><span class="line">  categories: /categories</span><br><span class="line">  archives: /archives</span><br><span class="line">  tags: /tags</span><br><span class="line">  about: /about</span><br></pre></td></tr></table></figure></li></ul><h4 id="创建分类页面"><a href="#创建分类页面" class="headerlink" title="创建分类页面"></a>创建分类页面</h4><ul><li><p>新建一个页面，命名为 categories ，命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new page categories</span><br></pre></td></tr></table></figure></li><li><p>编辑刚新建的页面 /source/categories/index.md ，将页面的类型设置为 categories ，主题将自动为这个页面显示所有分类（注意保留冒号后的空格）。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">title: 分类</span><br><span class="line">date: 2018-01-23 13:37:11</span><br><span class="line"><span class="built_in">type</span>: <span class="string">"categories"</span></span><br><span class="line">comments: <span class="literal">false</span></span><br><span class="line">---</span><br></pre></td></tr></table></figure></li></ul><h4 id="创建标签云界面"><a href="#创建标签云界面" class="headerlink" title="创建标签云界面"></a>创建标签云界面</h4><ul><li><p>新建一个页面，命名为 tags ，命令如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new page <span class="string">"tags"</span></span><br></pre></td></tr></table></figure></li><li><p>编辑刚新建的页面，将页面的类型设置为 tags ，主题将自动为这个页面显示标签云。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">title: 所有标签</span><br><span class="line">date: 2018-01-22 14:09:12</span><br><span class="line"><span class="built_in">type</span>: <span class="string">"tags"</span></span><br><span class="line">comments: <span class="literal">false</span></span><br><span class="line">---</span><br></pre></td></tr></table></figure></li></ul><h4 id="创建”关于我”页面"><a href="#创建”关于我”页面" class="headerlink" title="创建”关于我”页面"></a>创建”关于我”页面</h4><ul><li><p>新建一个 about 页面：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page <span class="string">"about"</span></span><br></pre></td></tr></table></figure></li><li><p>编辑刚新建的页面，可在正文处用Markdown格式写下信息。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">title: 关于</span><br><span class="line">date: 2018-01-22 14:09:12</span><br><span class="line">comments: <span class="literal">false</span></span><br><span class="line">---</span><br></pre></td></tr></table></figure></li></ul><h3 id="设置侧边栏社交链接"><a href="#设置侧边栏社交链接" class="headerlink" title="设置侧边栏社交链接"></a>设置侧边栏社交链接</h3><ul><li><p>编辑站点的 _config.yml，新增字段 social，然后添加社交站点名称与地址即可。键值格式为 显示名称：链接地址 ，例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Social links</span></span><br><span class="line">social:</span><br><span class="line">  GitHub: https://github.com/your-user-name</span><br><span class="line">  <span class="comment">#Twitter: https://twitter.com/your-user-name</span></span><br><span class="line">  微博: http://weibo.com/your-user-name</span><br><span class="line">  <span class="comment">#douban: http://douban.com/people/your-user-name</span></span><br><span class="line">  <span class="comment">#知乎: http://www.zhihu.com/people/your-user-name</span></span><br><span class="line">  <span class="comment"># 等等</span></span><br></pre></td></tr></table></figure></li><li><p>编辑主题的 _config.yml, 在social_icons字段下添加社交站点名称（注意大小写）与(图标)[<a href="http://fontawesome.io/icons/]。" target="_blank" rel="noopener">http://fontawesome.io/icons/]。</a> enable 选项用于控制是否显示图标，你可以设置成 false 来去掉图标。例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">social_icons:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Icon Mappings.</span></span><br><span class="line">  <span class="comment"># KeyMapsToSocalItemKey: NameOfTheIconFromFontAwesome</span></span><br><span class="line">  GitHub: github</span><br><span class="line">  Twitter: twitter</span><br><span class="line">  Weibo: weibo</span><br><span class="line">  Linkedin: linkedin</span><br></pre></td></tr></table></figure></li></ul><h3 id="将博客与GitHub关联"><a href="#将博客与GitHub关联" class="headerlink" title="将博客与GitHub关联"></a>将博客与GitHub关联</h3><ul><li><p>注册GitHub账号：如果还没有GitHub账号的，需要先注册一个</p></li><li><p>在Github上创建名字为XXX.github.io的项目，XXX为自己的github用户名。</p></li><li><p>打开本地的MyBlog文件夹项目内的_config.yml配置文件，将其中的type设置为git:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repository: https://github.com/your-name/your-name.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure></li><li><p>运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li><li><p>本地生成静态文件，并将静态文件推送至GitHub，运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>此时，打开浏览器，访问 <a href="http://your-name.github.io" target="_blank" rel="noopener">http://your-name.github.io</a> ，恭喜你，到此为止你的博客已经建设完毕了。</p></li></ul><h3 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h3><p>到目前为止博客已经全部搭建完成，也能通过 GitHub 的域名访问，这时候再用一个短域名绑定到这个博客上就更完美了。</p><h4 id="域名购买"><a href="#域名购买" class="headerlink" title="域名购买"></a>域名购买</h4><ul><li>购买一个域名（待补充）</li></ul><h3 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h3><ul><li><p>域名提供商设置</p></li><li><p>添加2条A记录：</p><blockquote><p>@—&gt;192.30.252.154<br>@—&gt;192.30.252.153</p></blockquote></li><li><p>添加一条CNAME记录：</p><blockquote><p>CNAME—&gt;lulalap.github.io</p></blockquote></li><li><p>博客目录添加 CNAME 文件</p><p>配置完域名解析后，进入博客目录，在source目录下新建一个命名为 CNAME 的文件(注意要大写，没有后缀)，用记事本打开编辑，写入购买好的域名，如：www.lulalap.com</p></li><li><p>运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure></li></ul><p>现在打开浏览器，输入域名，回车，恭喜你已经拥有了一个属于自己独立域名的博客。</p><h3 id="发布新文章"><a href="#发布新文章" class="headerlink" title="发布新文章"></a>发布新文章</h3><ul><li><p>在博客根目录下执行：hexo new “我的第一篇文章”，会在 source/_posts 文件夹内生成一个.md文件。</p></li><li><p>编辑该文件，修改起始字段为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">title 文章的标题</span><br><span class="line">date 创建日期 （文件的创建日期 ）</span><br><span class="line">updated 修改日期 （ 文件的修改日期）</span><br><span class="line">comments 是否开启评论 <span class="literal">true</span></span><br><span class="line">tags 标签</span><br><span class="line">categories 分类</span><br><span class="line">permalink url中的名字（文件名）</span><br></pre></td></tr></table></figure></li><li><p>编写正文内容(遵循 Markdown 规则)</p></li><li><p>本地生成静态文件，并将静态文件推送至GitHub，运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure></li></ul><h3 id="个性化设置（进阶）"><a href="#个性化设置（进阶）" class="headerlink" title="个性化设置（进阶）"></a>个性化设置（进阶）</h3><h3 id="添加-RSS"><a href="#添加-RSS" class="headerlink" title="添加 RSS"></a>添加 RSS</h3><ul><li><p>在根目录下安装插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure></li><li><p>在主题文件的 <em>config.yml 里面的末尾添加：(**</em>请注意在冒号后面要加一个空格，不然会发生错误！_**)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: http://hexo.io/plugins/</span></span><br><span class="line">plugins: hexo-generate-feed</span><br></pre></td></tr></table></figure></li><li><p>打开 next 主题文件夹里面的 _config.yml ,在在 rss: 的后面加上 /atom.xml (注意在冒号后面要加一个空格)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rss: /atom.xml</span><br></pre></td></tr></table></figure></li></ul><h3 id="首页文章截断"><a href="#首页文章截断" class="headerlink" title="首页文章截断"></a>首页文章截断</h3><ul><li><p>每次写文章正文时，只需要在文章 .md 中需要截断的地方增加：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--more--&gt;</span><br></pre></td></tr></table></figure></li><li><p>将主题目录下配置文件里的 scroll_to_more 这个选项设置为 false 。</p></li></ul><h4 id="设定站点建立时间"><a href="#设定站点建立时间" class="headerlink" title="设定站点建立时间"></a>设定站点建立时间</h4><ul><li><p>编辑站点的 _config.yml ，新增字段 since 。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">since: 2013</span><br></pre></td></tr></table></figure></li></ul><h3 id="相关阅读"><a href="#相关阅读" class="headerlink" title="相关阅读"></a>相关阅读</h3><p><a href="https://neveryu.github.io/2016/09/30/hexo-next-two/" target="_blank" rel="noopener">Hexo-NexT搭建个人博客（二）</a><br><a href="https://www.jianshu.com/p/f054333ac9e6" target="_blank" rel="noopener">hexo的next主题个性化教程:打造炫酷网站</a><br><a href="http://stevenshi.me/2017/05/09/hexo-advance/" target="_blank" rel="noopener">hexo进阶</a><br><a href="https://reuixiy.github.io/technology/computer/computer-aided-art/2017/06/09/hexo-next-optimization.html" target="_blank" rel="noopener">打造个性超赞博客Hexo+NexT+GitHubPages的超深度优化</a></p>]]></content>
      
      
      <categories>
          
          <category> 日常折腾 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客搭建 </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
